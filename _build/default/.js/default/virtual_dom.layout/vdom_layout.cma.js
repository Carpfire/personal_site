// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Vdom_layout
//# unitInfo: Requires: CamlinternalLazy, Core, Core__List, Core__Option, Core__Percent, Core__String, Css_gen, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Vdom_layout$0 = "Vdom_layout",
    cst_flex_shrink$1 = "flex-shrink",
    cst_layout_vdom_layout_ml = "layout/vdom_layout.ml",
    cst_vdom_layout$0 = "vdom_layout",
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   function caml_call9(f, a0, a1, a2, a3, a4, a5, a6, a7, a8){
    return (f.l >= 0 ? f.l : f.l = f.length) == 9
            ? f(a0, a1, a2, a3, a4, a5, a6, a7, a8)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7, a8]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Assert_failure = global_data.Assert_failure,
    CamlinternalLazy = global_data.CamlinternalLazy,
    Css_gen = global_data.Css_gen,
    Core_Percent = global_data.Core__Percent,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Core = global_data.Core,
    Core_String = global_data.Core__String,
    Core_List = global_data.Core__List,
    Core_Option = global_data.Core__Option,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Vdom_layout$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_vdom_layout$0);
   caml_call1(Ppx_expect_runtime[1][1], cst_layout_vdom_layout_ml);
   caml_call2(Ppx_inline_test_lib[6], cst_vdom_layout$0, "vdom_layout.ml");
   var
    _a_ = [0, cst_layout_vdom_layout_ml, 10, 11],
    _j_ = [0, [0, 869834347, "black"]],
    _k_ = [0, [0, 17960, 2]],
    _l_ = [0, 17960, 20],
    _m_ = [0, 869834347, "#fefefe"],
    _h_ = [0, [0, 17960, 0]],
    _i_ = [0, [0, 17960, 0]],
    _f_ = [0, 17960, 0],
    _g_ = [0, 17960, 0],
    cst_flex_shrink = cst_flex_shrink$1,
    cst_flex = "flex",
    cst_0 = "0",
    cst_flex_shrink$0 = cst_flex_shrink$1,
    _c_ = [0, 1.],
    _b_ = [0, 1.],
    cst_vdom_layout = cst_vdom_layout$0,
    cst_Vdom_layout = cst_Vdom_layout$0;
   function wrap_in_element_if_necessary(node){
    var node$0 = node;
    for(;;){
     var
      wrap_with_div =
        function(children){
         var div = caml_call3(Virtual_dom_Node[17], 0, 0, children);
         if(typeof div !== "number" && 2 === div[0]){var e = div[1]; return e;}
         throw caml_maybe_attach_backtrace([0, Assert_failure, _a_], 1);
        };
     if(typeof node$0 !== "number")
      switch(node$0[0]){
        case 0:
         var children = node$0[1]; return wrap_with_div(children);
        case 2:
         var e = node$0[1]; return e;
        case 4:
         var t = node$0[2], _aw_ = runtime.caml_obj_tag(t);
         a:
         if(250 === _aw_)
          var node$1 = t[1];
         else{
          if(246 !== _aw_ && 244 !== _aw_){var node$1 = t; break a;}
          var node$1 = caml_call1(CamlinternalLazy[2], t);
         }
         var node$0 = node$1;
         continue;
      }
     return wrap_with_div([0, node$0, 0]);
    }
   }
   function add_style(node, style){
    var element = wrap_in_element_if_necessary(node);
    return [2, caml_call2(Virtual_dom_Node[1][6], element, style)];
   }
   function grow(n){
    return add_style(n, caml_call5(Css_gen[92], 0, 0, 0, 1., 0));
   }
   function grow_and_shrink(n){
    return add_style(n, caml_call5(Css_gen[92], 0, 0, _b_, 1., 0));
   }
   function scrollable(n){
    var
     _as_ = caml_call1(Css_gen[39], 726666127),
     _at_ = caml_call1(Css_gen[40], 726666127),
     _au_ = caml_call2(Css_gen[30], _at_, _as_),
     _av_ = caml_call5(Css_gen[92], 0, 0, _c_, 1., 0);
    return add_style(n, caml_call2(Css_gen[30], _av_, _au_));
   }
   function spacer(opt, min_width, min_height, param){
    if(opt) var sth = opt[1], attrs = sth; else var attrs = 0;
    var
     mw = caml_call3(Core_Option[41], min_width, Css_gen[22], Css_gen[62]),
     mh = caml_call3(Core_Option[41], min_height, Css_gen[22], Css_gen[65]),
     style = caml_call1(Css_gen[31], [0, mw, [0, mh, 0]]),
     _aq_ = [0, caml_call1(Virtual_dom_Vdom[1][32], style), attrs],
     _ar_ = [0, [0, caml_call1(Virtual_dom_Vdom[1][10], _aq_), 0]];
    return caml_call3(Virtual_dom_Node[42], 0, _ar_, 0);
   }
   function as_box
   (direction, gap, align_items, node_creator, key, attrs, nodes){
    if(gap)
     var
      gap_len = gap[1],
      gap$0 =
        4102650 <= direction
         ? spacer(0, [0, gap_len], 0, 0)
         : spacer(0, 0, [0, gap_len], 0),
      nodes$0 = caml_call2(Core_List[153], nodes, gap$0);
    else
     var nodes$0 = nodes;
    function f(style){
     function _am_(param){
      var
       f = param[1],
       _ap_ = caml_call2(Core_String[141], f, cst_flex_shrink);
      return _ap_ ? _ap_ : caml_call2(Core_String[141], f, cst_flex);
     }
     var
      _an_ = caml_call1(Css_gen[32], style),
      has_flex_shrink_set = caml_call2(Core_List[23], _an_, _am_);
     if(has_flex_shrink_set) return style;
     var _ao_ = caml_call2(Css_gen[21], cst_flex_shrink$0, cst_0);
     return caml_call2(Css_gen[30], style, _ao_);
    }
    function _aj_(node){
     var element = wrap_in_element_if_necessary(node);
     function _ak_(attrs){
      var _al_ = caml_call2(Virtual_dom_Vdom[1][97][2], [0, attrs, 0], f);
      return caml_call1(Virtual_dom_Vdom[1][10], _al_);
     }
     return [2, caml_call2(Virtual_dom_Node[1][5], element, _ak_)];
    }
    var
     nodes$1 = caml_call2(Core_List[51], nodes$0, _aj_),
     node = caml_call3(node_creator, key, attrs, nodes$1);
    return add_style
            (node,
             caml_call9
              (Css_gen[91], 0, [0, direction], 0, align_items, 0, 0, 0, 0, 0));
   }
   var _d_ = 4102650;
   function as_hbox(_ad_, _ae_, _af_, _ag_, _ah_, _ai_){
    return as_box(_d_, _ad_, _ae_, _af_, _ag_, _ah_, _ai_);
   }
   var _e_ = -81804554;
   function as_vbox(_Z_, ___, _$_, _aa_, _ab_, _ac_){
    return as_box(_e_, _Z_, ___, _$_, _aa_, _ab_, _ac_);
   }
   function hbox(gap, align_items, key, attrs, children){
    return as_hbox
            (gap, align_items, Virtual_dom_Node[17], key, attrs, children);
   }
   function vbox(gap, align_items, key, attrs, children){
    return as_vbox
            (gap, align_items, Virtual_dom_Node[17], key, attrs, children);
   }
   function body(opt, gap, align_items, key, attrs, nodes){
    if(opt) var sth = opt[1], direction = sth; else var direction = -81804554;
    var
     p100 = caml_call1(Core_Percent[78], 100.),
     _S_ = caml_call1(Css_gen[71], _f_),
     _T_ = caml_call1(Css_gen[79], _g_),
     _U_ = caml_call2(Css_gen[30], _T_, _S_),
     _V_ = caml_call1(Css_gen[64], [0, 19282, p100]),
     _W_ = caml_call2(Css_gen[30], _V_, _U_),
     _X_ = caml_call1(Css_gen[61], [0, 19297, p100]),
     _Y_ = caml_call2(Css_gen[30], _X_, _W_);
    return add_style
            (as_box
              (direction,
               gap,
               align_items,
               Virtual_dom_Node[11],
               key,
               attrs,
               nodes),
             _Y_);
   }
   function modal(opt, gap, align_items, key, _z_, nodes){
    if(opt) var sth = opt[1], direction = sth; else var direction = 4102650;
    if(_z_) var sth$0 = _z_[1], attrs = sth$0; else var attrs = 0;
    var
     _A_ = caml_call4(Css_gen[85], _k_, _j_, 334701579, 0),
     _B_ = caml_call1(Css_gen[71], _l_),
     _C_ = caml_call2(Css_gen[30], _B_, _A_),
     _D_ = caml_call1(Css_gen[52], _m_),
     _E_ = caml_call2(Css_gen[30], _D_, _C_),
     _F_ = [0, -970206555, caml_call1(Core_Percent[78], 80.)],
     _G_ = caml_call1(Css_gen[61], _F_),
     _H_ = caml_call2(Css_gen[30], _G_, _E_),
     _I_ = caml_call1(Css_gen[78], 726666127),
     _J_ = caml_call2(Css_gen[30], _I_, _H_),
     _K_ = caml_call1(Css_gen[77], 726666127),
     _L_ = caml_call2(Css_gen[30], _K_, _J_),
     _M_ = [0, -970206555, caml_call1(Core_Percent[78], 15.)],
     _N_ = caml_call1(Css_gen[75], _M_),
     _O_ = caml_call2(Css_gen[30], _N_, _L_),
     _P_ = [0, caml_call1(Virtual_dom_Vdom[1][32], _O_), 0],
     _Q_ = caml_call2(Core[156], _P_, attrs),
     _R_ = [0, [0, caml_call1(Virtual_dom_Vdom[1][10], _Q_), 0]],
     nodes$0 =
       [0,
        as_box
         (direction, gap, align_items, Virtual_dom_Node[17], key, _R_, nodes),
        0],
     _n_ = [0, caml_call1(Core_Percent[78], 40.)],
     _o_ = [0, 912890036, caml_call5(Css_gen[6][1][14], 0, 0, 0, _n_, 0)],
     _p_ = caml_call1(Css_gen[52], _o_),
     _q_ = caml_call1(Css_gen[38], 726666127),
     _r_ = caml_call2(Css_gen[30], _q_, _p_),
     _s_ = caml_call1(Css_gen[64], Css_gen[7][5]),
     _t_ = caml_call2(Css_gen[30], _s_, _r_),
     _u_ = caml_call1(Css_gen[61], Css_gen[7][5]),
     _v_ = caml_call2(Css_gen[30], _u_, _t_),
     _w_ = caml_call5(Css_gen[24], _i_, 0, _h_, 0, 332360020),
     _x_ = caml_call2(Css_gen[30], _w_, _v_),
     _y_ = [0, [0, caml_call1(Virtual_dom_Vdom[1][32], _x_), 0]];
    return caml_call3(Virtual_dom_Node[17], 0, _y_, nodes$0);
   }
   caml_call1(Ppx_inline_test_lib[7], cst_vdom_layout);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Vdom_layout);
   var
    Vdom_layout =
      [0,
       wrap_in_element_if_necessary,
       add_style,
       as_box,
       as_hbox,
       as_vbox,
       grow,
       grow_and_shrink,
       scrollable,
       hbox,
       vbox,
       spacer,
       body,
       modal];
   runtime.caml_register_global(43, Vdom_layout, cst_Vdom_layout$0);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
