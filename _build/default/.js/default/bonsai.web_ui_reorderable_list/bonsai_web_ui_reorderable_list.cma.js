// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Bonsai_web_ui_reorderable_list
//# unitInfo: Requires: Bonsai, Bonsai_web, Bonsai_web_ui_drag_and_drop, Bonsai_web_ui_element_size_hooks__Bulk_size_tracker, Core, Core__Array, Core__Comparable, Core__Int, Core__List, Core__Map, Core__Option, Core__Percent, Core__Sequence, Core__Set, Core__Sexp, Core__Tuple, Css_gen, Incr_map, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Ppx_string_runtime, Reversed_list, Sexplib0__Sexp_conv_error, Ui_incr, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_reorderable_$0 = "Bonsai_web_ui_reorderable_list",
    cst_Move = "Move",
    cst_Overwrite = "Overwrite",
    cst_Remove = "Remove",
    cst_Set = "Set",
    cst_bonsai_web_ui_reorderable_$0 = "bonsai_web_ui_reorderable_list",
    cst_dnd$1 = "dnd",
    cst_move = "move",
    cst_overwrite = "overwrite",
    cst_px$1 = "px)",
    cst_remove = "remove",
    cst_set = "set",
    cst_web_ui_reorderable_list_sr =
      "web_ui/reorderable_list/src/bonsai_web_ui_reorderable_list.ml",
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_string_notequal = runtime.caml_string_notequal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   function caml_call7(f, a0, a1, a2, a3, a4, a5, a6){
    return (f.l >= 0 ? f.l : f.l = f.length) == 7
            ? f(a0, a1, a2, a3, a4, a5, a6)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6]);
   }
   function caml_call9(f, a0, a1, a2, a3, a4, a5, a6, a7, a8){
    return (f.l >= 0 ? f.l : f.l = f.length) == 9
            ? f(a0, a1, a2, a3, a4, a5, a6, a7, a8)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7, a8]);
   }
   var
    undef = undefined,
    global_data = runtime.caml_get_global_data(),
    error_source_238 =
      "web_ui/reorderable_list/src/bonsai_web_ui_reorderable_list.ml.Multi.t",
    error_source_122 =
      "web_ui/reorderable_list/src/bonsai_web_ui_reorderable_list.ml.Action.item",
    Bonsai = global_data.Bonsai,
    Core_List = global_data.Core__List,
    Core_Int = global_data.Core__Int,
    Sexplib0_Sexp_conv_error = global_data.Sexplib0__Sexp_conv_error,
    Incr_map = global_data.Incr_map,
    Ui_incr = global_data.Ui_incr,
    Bonsai_web_ui_drag_and_drop = global_data.Bonsai_web_ui_drag_and_drop,
    Core_Comparable = global_data.Core__Comparable,
    Core_Map = global_data.Core__Map,
    Core_Tuple = global_data.Core__Tuple,
    Core_Option = global_data.Core__Option,
    Assert_failure = global_data.Assert_failure,
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Core = global_data.Core,
    Core_Set = global_data.Core__Set,
    Core_Sequence = global_data.Core__Sequence,
    Reversed_list = global_data.Reversed_list,
    Bonsai_web = global_data.Bonsai_web,
    Core_Sexp = global_data.Core__Sexp,
    Ppx_string_runtime = global_data.Ppx_string_runtime,
    Css_gen = global_data.Css_gen,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Core_Percent = global_data.Core__Percent,
    Bonsai_web_ui_element_size_hoo =
      global_data.Bonsai_web_ui_element_size_hooks__Bulk_size_tracker,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Core_Array = global_data.Core__Array;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_reorderable_$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_reorderable_$0);
   caml_call1(Ppx_expect_runtime[1][1], cst_web_ui_reorderable_list_sr);
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_reorderable_$0,
     "bonsai_web_ui_reorderable_list.ml");
   var
    _bQ_ = [0, [0, cst_web_ui_reorderable_list_sr, 871, 27365, 27369]],
    _bR_ = [0, [0, cst_web_ui_reorderable_list_sr, 871, 27365, 27369]],
    _bS_ = [0, [0, cst_web_ui_reorderable_list_sr, 873, 27402, 27410]],
    _bT_ = [0, [0, cst_web_ui_reorderable_list_sr, 872, 27382, 27388]],
    _bU_ = [0, [0, cst_web_ui_reorderable_list_sr, 871, 27365, 27369]],
    _bV_ = [0, [0, cst_web_ui_reorderable_list_sr, 857, 27081, 27085]],
    _bW_ = [0, [0, cst_web_ui_reorderable_list_sr, 857, 27081, 27085]],
    _bX_ = [0, [0, cst_web_ui_reorderable_list_sr, 857, 27081, 27085]],
    _bY_ = [0, [0, cst_web_ui_reorderable_list_sr, 857, 27081, 27085]],
    _bZ_ = [0, [0, cst_web_ui_reorderable_list_sr, 857, 27081, 27085]],
    _b0_ = [0, [0, cst_web_ui_reorderable_list_sr, 857, 27081, 27085]],
    _b1_ = [0, [0, cst_web_ui_reorderable_list_sr, 857, 27081, 27085]],
    _bz_ = [0, [0, cst_web_ui_reorderable_list_sr, 742, 23116, 23126]],
    _bA_ = [0, [0, cst_web_ui_reorderable_list_sr, 741, 23068, 23078]],
    _bB_ = [0, [0, cst_web_ui_reorderable_list_sr, 741, 23068, 23078]],
    _bC_ = [0, [0, cst_web_ui_reorderable_list_sr, 741, 23068, 23078]],
    _bD_ = [0, [0, cst_web_ui_reorderable_list_sr, 741, 23068, 23078]],
    _bE_ = [0, [0, cst_web_ui_reorderable_list_sr, 741, 23068, 23078]],
    _bF_ = [0, [0, cst_web_ui_reorderable_list_sr, 737, 22963, 22975]],
    _bG_ = [0, [0, cst_web_ui_reorderable_list_sr, 736, 22936, 22946]],
    _bv_ = [0, [0, cst_web_ui_reorderable_list_sr, 768, 24119, 24135]],
    _bq_ = [0, [0, cst_web_ui_reorderable_list_sr, 795, 24994, 25006]],
    _br_ = [0, [0, cst_web_ui_reorderable_list_sr, 794, 24968, 24978]],
    _bs_ = [0, [0, cst_web_ui_reorderable_list_sr, 780, 24537, 24547]],
    _bt_ = [0, [0, cst_web_ui_reorderable_list_sr, 772, 24234, 24246]],
    _bu_ = [0, [0, cst_web_ui_reorderable_list_sr, 771, 24210, 24220]],
    _bw_ = [0, [0, cst_web_ui_reorderable_list_sr, 763, 23973, 23983]],
    _bx_ = [0, [0, cst_web_ui_reorderable_list_sr, 750, 23339, 23349]],
    _bh_ = [0, cst_web_ui_reorderable_list_sr, 814, 8],
    _bk_ = [0, cst_web_ui_reorderable_list_sr, 814, 8],
    _bi_ = [0, [0, cst_web_ui_reorderable_list_sr, 814, 25960, 25968]],
    _bj_ = [0, [0, cst_web_ui_reorderable_list_sr, 814, 25960, 25968]],
    _bl_ = [0, cst_web_ui_reorderable_list_sr, 815, 25990, 26000],
    _bm_ = [0, [0, cst_web_ui_reorderable_list_sr, 814, 25960, 25968]],
    _bn_ = [0, [0, cst_web_ui_reorderable_list_sr, 806, 25563, 25571]],
    _bf_ = [0, [0, cst_web_ui_reorderable_list_sr, 823, 26198, 26208]],
    _be_ = [0, [0, cst_web_ui_reorderable_list_sr, 826, 26271, 26275]],
    _bg_ = [0, [0, cst_web_ui_reorderable_list_sr, 818, 26089, 26093]],
    _bo_ = [0, [0, cst_web_ui_reorderable_list_sr, 804, 25475, 25479]],
    _bp_ = [0, [0, cst_web_ui_reorderable_list_sr, 803, 25409, 25413]],
    _by_ = [0, [0, cst_web_ui_reorderable_list_sr, 745, 23232, 23236]],
    _bH_ = [0, [0, cst_web_ui_reorderable_list_sr, 724, 22475, 22481]],
    _bI_ = [0, [0, cst_web_ui_reorderable_list_sr, 723, 22439, 22443]],
    _bJ_ = [0, [0, cst_web_ui_reorderable_list_sr, 722, 22363, 22367]],
    _bK_ = [0, [0, cst_web_ui_reorderable_list_sr, 710, 21978, 21982]],
    _bL_ = [0, [0, cst_web_ui_reorderable_list_sr, 701, 21647, 21651]],
    _bM_ = [0, [0, cst_web_ui_reorderable_list_sr, 701, 21647, 21651]],
    _bN_ = [0, [0, cst_web_ui_reorderable_list_sr, 701, 21647, 21651]],
    _bO_ = [0, [0, cst_web_ui_reorderable_list_sr, 701, 21647, 21651]],
    cst_dnd$0 = cst_dnd$1,
    _bP_ = [0, [0, cst_web_ui_reorderable_list_sr, 701, 21647, 21651]],
    _a6_ = [0, [0, cst_web_ui_reorderable_list_sr, 597, 18522, 18524]],
    _a7_ = [0, [0, cst_web_ui_reorderable_list_sr, 597, 18522, 18524]],
    _a8_ = [0, [0, cst_web_ui_reorderable_list_sr, 597, 18522, 18524]],
    _a9_ = [0, [0, cst_web_ui_reorderable_list_sr, 584, 18259, 18261]],
    _a__ = [0, [0, cst_web_ui_reorderable_list_sr, 584, 18259, 18261]],
    _a$_ = [0, [0, cst_web_ui_reorderable_list_sr, 584, 18259, 18261]],
    _ba_ = [0, [0, cst_web_ui_reorderable_list_sr, 584, 18259, 18261]],
    _bb_ = [0, [0, cst_web_ui_reorderable_list_sr, 584, 18259, 18261]],
    _bc_ = [0, [0, cst_web_ui_reorderable_list_sr, 584, 18259, 18261]],
    _bd_ = [0, [0, cst_web_ui_reorderable_list_sr, 584, 18259, 18261]],
    _a4_ = [0, [0, cst_web_ui_reorderable_list_sr, 550, 17382, 17386]],
    _a5_ = [0, [0, cst_web_ui_reorderable_list_sr, 549, 17361, 17363]],
    _aT_ = [0, [0, cst_web_ui_reorderable_list_sr, 484, 15430, 15438]],
    _aU_ = [0, [0, cst_web_ui_reorderable_list_sr, 480, 15333, 15343]],
    _aV_ = [0, [0, cst_web_ui_reorderable_list_sr, 479, 15308, 15316]],
    _aR_ = [0, [0, cst_web_ui_reorderable_list_sr, 492, 15645, 15653]],
    _aH_ = [0, cst_web_ui_reorderable_list_sr, 521, 6],
    _aK_ = [0, cst_web_ui_reorderable_list_sr, 521, 6],
    _aI_ = [0, [0, cst_web_ui_reorderable_list_sr, 521, 16498, 16504]],
    _aJ_ = [0, [0, cst_web_ui_reorderable_list_sr, 521, 16498, 16504]],
    _aL_ = [0, cst_web_ui_reorderable_list_sr, 522, 16526, 16534],
    _aM_ = [0, [0, cst_web_ui_reorderable_list_sr, 521, 16498, 16504]],
    _aN_ = [0, [0, cst_web_ui_reorderable_list_sr, 510, 16064, 16070]],
    _aD_ = [0, [0, cst_web_ui_reorderable_list_sr, 532, 16842, 16846]],
    _aE_ = [0, [0, cst_web_ui_reorderable_list_sr, 531, 16822, 16824]],
    _aF_ = [0, [0, cst_web_ui_reorderable_list_sr, 526, 16636, 16640]],
    _aG_ = [0, [0, cst_web_ui_reorderable_list_sr, 525, 16619, 16621]],
    _aO_ = [0, [0, cst_web_ui_reorderable_list_sr, 508, 15983, 15985]],
    _aP_ = [0, [0, cst_web_ui_reorderable_list_sr, 507, 15919, 15921]],
    _aQ_ = [0, [0, cst_web_ui_reorderable_list_sr, 495, 15712, 15714]],
    _aS_ = [0, [0, cst_web_ui_reorderable_list_sr, 487, 15539, 15541]],
    _aW_ = [0, [0, cst_web_ui_reorderable_list_sr, 474, 15193, 15195]],
    _aX_ = [0, [0, cst_web_ui_reorderable_list_sr, 473, 15119, 15121]],
    _aY_ = [0, [0, cst_web_ui_reorderable_list_sr, 465, 14899, 14901]],
    _aZ_ = [0, [0, cst_web_ui_reorderable_list_sr, 455, 14535, 14537]],
    _a0_ = [0, [0, cst_web_ui_reorderable_list_sr, 455, 14535, 14537]],
    _a1_ = [0, [0, cst_web_ui_reorderable_list_sr, 455, 14535, 14537]],
    _a2_ = [0, [0, cst_web_ui_reorderable_list_sr, 455, 14535, 14537]],
    cst_dnd = cst_dnd$1,
    _a3_ = [0, [0, cst_web_ui_reorderable_list_sr, 455, 14535, 14537]],
    _az_ = [0, cst_Move],
    _aA_ = [0, cst_Set],
    _aB_ = [0, cst_Remove],
    _aC_ = [0, cst_Overwrite],
    _ag_ = [0, [0, cst_web_ui_reorderable_list_sr, 115, 3546, 3550]],
    _ah_ = [0, [0, cst_web_ui_reorderable_list_sr, 115, 3546, 3550]],
    _ai_ = [0, [0, cst_web_ui_reorderable_list_sr, 115, 3546, 3550]],
    _aj_ = [0, [0, cst_web_ui_reorderable_list_sr, 108, 3274, 3280]],
    _ak_ = [0, [0, cst_web_ui_reorderable_list_sr, 107, 3249, 3253]],
    _al_ = [0, [0, cst_web_ui_reorderable_list_sr, 101, 3015, 3019]],
    _am_ = [0, [0, cst_web_ui_reorderable_list_sr, 98, 2858, 2862]],
    _an_ = [0, [0, cst_web_ui_reorderable_list_sr, 98, 2858, 2862]],
    _ao_ = [0, [0, cst_web_ui_reorderable_list_sr, 98, 2858, 2862]],
    _ap_ = [0, [0, cst_web_ui_reorderable_list_sr, 98, 2858, 2862]],
    _ad_ = [0, 0, 0],
    cst_source = "source-",
    _E_ = [0, [0, cst_web_ui_reorderable_list_sr, 254, 8625, 8633]],
    _F_ = [0, [0, cst_web_ui_reorderable_list_sr, 253, 8540, 8548]],
    _G_ = [0, [0, cst_web_ui_reorderable_list_sr, 253, 8540, 8548]],
    _H_ = [0, [0, cst_web_ui_reorderable_list_sr, 253, 8540, 8548]],
    _I_ = [0, [0, cst_web_ui_reorderable_list_sr, 253, 8540, 8548]],
    _J_ = [0, [0, cst_web_ui_reorderable_list_sr, 253, 8540, 8548]],
    _K_ = [0, [0, cst_web_ui_reorderable_list_sr, 253, 8540, 8548]],
    _L_ = [0, [0, cst_web_ui_reorderable_list_sr, 253, 8540, 8548]],
    _M_ = [0, [0, cst_web_ui_reorderable_list_sr, 252, 8482, 8490]],
    _N_ = [0, [0, cst_web_ui_reorderable_list_sr, 248, 8348, 8358]],
    _O_ = [0, [0, cst_web_ui_reorderable_list_sr, 247, 8321, 8329]],
    _s_ = [0, [0, cst_web_ui_reorderable_list_sr, 319, 10848, 10858]],
    _t_ = [0, [0, cst_web_ui_reorderable_list_sr, 319, 10848, 10858]],
    _u_ = [0, [0, cst_web_ui_reorderable_list_sr, 319, 10848, 10858]],
    _v_ = [0, [0, cst_web_ui_reorderable_list_sr, 319, 10848, 10858]],
    _w_ = [0, [0, cst_web_ui_reorderable_list_sr, 319, 10848, 10858]],
    _x_ = [0, [0, cst_web_ui_reorderable_list_sr, 319, 10848, 10858]],
    _y_ = [0, [0, cst_web_ui_reorderable_list_sr, 319, 10848, 10858]],
    _o_ = [0, cst_web_ui_reorderable_list_sr, 323, 6],
    _p_ = [0, cst_web_ui_reorderable_list_sr, 323, 11022, 11028],
    _n_ = [0, [0, cst_web_ui_reorderable_list_sr, 332, 11265, 11269]],
    _q_ = [0, [0, cst_web_ui_reorderable_list_sr, 323, 11022, 11028]],
    _r_ = [0, [0, cst_web_ui_reorderable_list_sr, 322, 10995, 10999]],
    cst_px$0 = cst_px$1,
    cst_calc_100 = "calc(100% - ",
    cst_height = "height",
    _i_ = [0, 3603131, "#10000010"],
    _j_ = [0, [0, 17960, 0]],
    cst_target = "target-",
    _k_ = [0, [0, cst_web_ui_reorderable_list_sr, 284, 9761, 9767]],
    _l_ = [0, [0, cst_web_ui_reorderable_list_sr, 279, 9526, 9534]],
    _m_ = [0, [0, cst_web_ui_reorderable_list_sr, 278, 9490, 9496]],
    _z_ = [0, [0, cst_web_ui_reorderable_list_sr, 314, 10731, 10735]],
    _A_ = [0, [0, cst_web_ui_reorderable_list_sr, 276, 9351, 9355]],
    _b_ = [0, -81804554],
    _c_ = [0, [0, cst_web_ui_reorderable_list_sr, 349, 11766, 11768]],
    _d_ = [0, [0, cst_web_ui_reorderable_list_sr, 348, 11688, 11690]],
    _e_ = [0, [0, cst_web_ui_reorderable_list_sr, 343, 11556, 11560]],
    _f_ = [0, [0, cst_web_ui_reorderable_list_sr, 342, 11528, 11530]],
    _g_ = [0, [0, cst_web_ui_reorderable_list_sr, 337, 11415, 11419]],
    _h_ = [0, [0, cst_web_ui_reorderable_list_sr, 336, 11391, 11393]],
    _B_ = [0, [0, cst_web_ui_reorderable_list_sr, 273, 9225, 9231]],
    _C_ = [0, [0, cst_web_ui_reorderable_list_sr, 272, 9201, 9205]],
    _D_ = [0, [0, cst_web_ui_reorderable_list_sr, 271, 9181, 9183]],
    _P_ = [0, [0, cst_web_ui_reorderable_list_sr, 242, 8221, 8223]],
    _Q_ = [0, [0, cst_web_ui_reorderable_list_sr, 217, 7320, 7324]],
    _R_ = [0, [0, cst_web_ui_reorderable_list_sr, 216, 7294, 7296]],
    _S_ = [0, [0, cst_web_ui_reorderable_list_sr, 213, 7196, 7198]],
    _T_ = [0, [0, cst_web_ui_reorderable_list_sr, 185, 6292, 6294]],
    _U_ = [0, [0, cst_web_ui_reorderable_list_sr, 185, 6292, 6294]],
    _V_ = [0, [0, cst_web_ui_reorderable_list_sr, 185, 6292, 6294]],
    _W_ = [0, [0, cst_web_ui_reorderable_list_sr, 185, 6292, 6294]],
    _X_ = [0, [0, cst_web_ui_reorderable_list_sr, 186, 6336, 6340]],
    _Y_ = [0, [0, cst_web_ui_reorderable_list_sr, 185, 6292, 6294]],
    _Z_ = [0, [0, cst_web_ui_reorderable_list_sr, 135, 4206, 4210]],
    ___ = [0, [0, cst_web_ui_reorderable_list_sr, 134, 4174, 4176]],
    _$_ = [0, [0, cst_web_ui_reorderable_list_sr, 124, 3754, 3756]],
    _aa_ = [0, [0, cst_web_ui_reorderable_list_sr, 124, 3754, 3756]],
    _ab_ = [0, [0, cst_web_ui_reorderable_list_sr, 124, 3754, 3756]],
    _ac_ = [0, [0, cst_web_ui_reorderable_list_sr, 124, 3754, 3756]],
    _ae_ = [0, [0, cst_web_ui_reorderable_list_sr, 125, 3800, 3804]],
    _af_ = [0, [0, cst_web_ui_reorderable_list_sr, 124, 3754, 3756]],
    _aq_ = [0, [0, cst_web_ui_reorderable_list_sr, 98, 2858, 2862]],
    _ar_ = [0, [0, cst_web_ui_reorderable_list_sr, 97, 2825, 2827]],
    _as_ = [0, [0, cst_web_ui_reorderable_list_sr, 94, 2701, 2703]],
    _at_ = [0, [0, cst_web_ui_reorderable_list_sr, 94, 2701, 2703]],
    _au_ = [0, [0, cst_web_ui_reorderable_list_sr, 94, 2701, 2703]],
    _av_ = [0, [0, cst_web_ui_reorderable_list_sr, 94, 2701, 2703]],
    _ay_ = [0, 17960, 0],
    _ax_ = [0, 17960, 0],
    _aw_ = [0, [0, cst_web_ui_reorderable_list_sr, 94, 2701, 2703]],
    _a_ = [0, [0, 17960, 0]],
    cst_px = cst_px$1,
    cst_px_translateX = "px) translateX(",
    cst_translateY = "translateY(",
    cst_transform = "transform",
    cst_bonsai_web_ui_reorderable_ = cst_bonsai_web_ui_reorderable_$0,
    cst_Bonsai_web_ui_reorderable_ = cst_Bonsai_web_ui_reorderable_$0;
   function transform_xy(left, right, x, y){
    var
     _kk_ = caml_call5(Css_gen[24], _a_, 0, [0, left], [0, right], 491227799),
     _kl_ = [0, caml_call1(Virtual_dom_Vdom[1][32], _kk_), 0],
     _km_ = [0, caml_call1(Ppx_string_runtime[1][2], cst_px), 0],
     _kn_ = caml_call1(Core_Int[79], x),
     _ko_ = [0, caml_call1(Ppx_string_runtime[1][3], _kn_), _km_],
     _kp_ = [0, caml_call1(Ppx_string_runtime[1][2], cst_px_translateX), _ko_],
     _kq_ = caml_call1(Core_Int[79], y),
     _kr_ = [0, caml_call1(Ppx_string_runtime[1][3], _kq_), _kp_],
     _ks_ = [0, caml_call1(Ppx_string_runtime[1][2], cst_translateY), _kr_],
     _kt_ = caml_call1(Ppx_string_runtime[1][4], _ks_),
     _ku_ = caml_call2(Css_gen[21], cst_transform, _kt_),
     _kv_ = [0, caml_call1(Virtual_dom_Vdom[1][32], _ku_), _kl_];
    return caml_call1(Virtual_dom_Vdom[1][9], _kv_);
   }
   var
    of_list = Core_Array[24],
    fold = Core_Array[36],
    to_list = Core_Array[45],
    sort = Core_Array[81],
    of_list_map = Core_Array[100],
    map_inplace = Core_Array[104];
   function list(key, dnd, opt, _gF_, _gE_, _gD_, _gC_, _gB_, input){
    if(opt)
     var sth = opt[1], enable_debug_overlay = sth;
    else
     var enable_debug_overlay = 0;
    if(_gF_)
     var sth$0 = _gF_[1], extra_item_attrs = sth$0;
    else
     var extra_item_attrs = caml_call1(Bonsai[2][1], Virtual_dom_Vdom[1][11]);
    if(_gE_) var sth$1 = _gE_[1], left = sth$1; else var left = _ay_;
    if(_gD_) var sth$2 = _gD_[1], right = sth$2; else var right = _ax_;
    if(_gC_)
     var sth$3 = _gC_[1], empty_list_placeholder = sth$3;
    else
     var
      empty_list_placeholder =
        function(param){return caml_call1(Bonsai[7], 0);};
    if(_gB_)
     var sth$4 = _gB_[1], default_item_height = sth$4;
    else
     var default_item_height = 50;
    function _gG_(pattern_syntax_023){
     function _gI_(sizes){
      function _gM_(size_attr){
       function _gQ_(historical_min_index){
        function _hm_(pattern_syntax_040){
         function _hq_(should_render_extra_target){
          function _hu_(model){
           function _hy_(model_info_at_index){
            function _hE_(pattern_syntax_050){
             function _hN_(total_height){
              function _hR_(alist_for_targets){
               function _hV_(map_for_targets){
                function _hZ_(map_for_items){
                 function _h7_(items){
                  function _iM_(targets){
                   function _jY_(is_dragging){
                    function _j1_(item_is_hovered){
                     function _j4_(empty_list_placeholder){
                      function _j6_(param){
                       var
                        _j$_ = param[2],
                        _ka_ = _j$_[2],
                        match = _ka_[2],
                        empty_list_placeholder = match[2],
                        total_height = match[1],
                        is_dragging = _ka_[1],
                        targets = _j$_[1],
                        items = param[1],
                        items$0 =
                          caml_call1(Core_Map[34], items)
                           ? [0, empty_list_placeholder, 0]
                           : caml_call1(Core_Map[80], items),
                        items$1 =
                          is_dragging
                           ? caml_call2(Core[156], items$0, targets)
                           : items$0,
                        _kb_ =
                          caml_call1
                           (Css_gen[65],
                            [0, 17960, total_height + default_item_height | 0]),
                        _kc_ = [0, -970206555, caml_call1(Core_Percent[78], 100.)],
                        _kd_ = caml_call1(Css_gen[64], _kc_),
                        _ke_ = caml_call2(Css_gen[30], _kd_, _kb_),
                        _kf_ = caml_call9(Css_gen[91], 0, _b_, 0, 0, 0, 0, 0, 0, 0),
                        _kg_ = caml_call2(Css_gen[30], _kf_, _ke_),
                        _kh_ = caml_call5(Css_gen[24], 0, 0, 0, 0, 260471020),
                        _ki_ = caml_call2(Css_gen[30], _kh_, _kg_),
                        _kj_ =
                          [0, [0, caml_call1(Virtual_dom_Vdom[1][32], _ki_), 0]];
                       return caml_call3(Virtual_dom_Node[17], 0, _kj_, items$1);
                      }
                      var
                       _j7_ =
                         caml_call2
                          (Bonsai[49][5][7], total_height, empty_list_placeholder),
                       _j8_ = caml_call2(Bonsai[49][5][7], is_dragging, _j7_),
                       _j9_ = caml_call2(Bonsai[49][5][7], targets, _j8_),
                       _j__ = caml_call2(Bonsai[49][5][7], items, _j9_);
                      return caml_call3(Bonsai[49][5][8], _c_, _j__, _j6_);
                     }
                     var
                      _j5_ = caml_call1(empty_list_placeholder, item_is_hovered);
                     return caml_call3(Bonsai[49][5][1], _d_, _j5_, _j4_);
                    }
                    function _j2_(dnd){
                     var match = caml_call1(Bonsai_web_ui_drag_and_drop[6], dnd);
                     if(match && match[2]) return 1;
                     return 0;
                    }
                    var _j3_ = caml_call3(Bonsai[49][5][8], _e_, dnd, _j2_);
                    return caml_call3(Bonsai[49][5][1], _f_, _j3_, _j1_);
                   }
                   function _jZ_(dnd){
                    return caml_call1(Bonsai_web_ui_drag_and_drop[6], dnd)
                            ? 1
                            : 0;
                   }
                   var _j0_ = caml_call3(Bonsai[49][5][8], _g_, dnd, _jZ_);
                   return caml_call3(Bonsai[49][5][1], _h_, _j0_, _jY_);
                  }
                  function _iN_(num_items){
                   function _iT_(drop_target){
                    function single_target
                    (is_the_extra_target, index, size, y_position){
                     function _jl_(is_the_extra_target){
                      function _jt_(param){
                       var
                        _jy_ = param[2],
                        _jz_ = _jy_[2],
                        match = _jz_[2],
                        drop_target = match[2],
                        is_the_extra_target = match[1],
                        y_position = _jz_[1],
                        size = _jy_[1],
                        index = param[1];
                       if(is_the_extra_target)
                        var
                         _jA_ =
                           [0, caml_call1(Ppx_string_runtime[1][2], cst_px$0), 0],
                         _jB_ = caml_call1(Core_Int[79], y_position),
                         _jC_ = [0, caml_call1(Ppx_string_runtime[1][3], _jB_), _jA_],
                         _jD_ =
                           [0,
                            caml_call1(Ppx_string_runtime[1][2], cst_calc_100),
                            _jC_],
                         _jE_ = caml_call1(Ppx_string_runtime[1][4], _jD_),
                         the_height = caml_call2(Css_gen[21], cst_height, _jE_);
                       else
                        var the_height = caml_call1(Css_gen[64], [0, 17960, size]);
                       var
                        _jF_ = 0,
                        _jG_ = 0,
                        _jH_ = caml_call1(Virtual_dom_Vdom[1][32], the_height);
                       if(enable_debug_overlay)
                        var
                         _jI_ = caml_call4(Css_gen[85], 0, 0, -423359734, 0),
                         _jJ_ = caml_call1(Css_gen[52], _i_),
                         _jK_ = caml_call2(Css_gen[30], _jJ_, _jI_),
                         _jL_ = caml_call1(Virtual_dom_Vdom[1][32], _jK_);
                       else
                        var _jL_ = Virtual_dom_Vdom[1][11];
                       var
                        _jM_ = caml_call2(Virtual_dom_Vdom[1][12], _jL_, _jH_),
                        _jN_ =
                          caml_call5
                           (Css_gen[24], _j_, 0, [0, left], [0, right], 491227799),
                        _jO_ = caml_call1(Virtual_dom_Vdom[1][32], _jN_),
                        _jP_ = caml_call2(Virtual_dom_Vdom[1][12], _jO_, _jM_),
                        _jQ_ = transform_xy(left, right, 0, y_position),
                        _jR_ = caml_call2(Virtual_dom_Vdom[1][12], _jQ_, _jP_),
                        _jS_ = caml_call1(drop_target, index),
                        _jT_ =
                          [0,
                           [0, caml_call2(Virtual_dom_Vdom[1][12], _jS_, _jR_), _jG_]],
                        _jU_ = caml_call1(Core_Int[79], index),
                        _jV_ = [0, caml_call1(Ppx_string_runtime[1][3], _jU_), 0],
                        _jW_ =
                          [0, caml_call1(Ppx_string_runtime[1][2], cst_target), _jV_],
                        _jX_ = [0, caml_call1(Ppx_string_runtime[1][4], _jW_)];
                       return caml_call3(Virtual_dom_Node[17], _jX_, _jT_, _jF_);
                      }
                      var
                       _ju_ =
                         caml_call2
                          (Bonsai[49][5][7], is_the_extra_target, drop_target),
                       _jv_ = caml_call2(Bonsai[49][5][7], y_position, _ju_),
                       _jw_ = caml_call2(Bonsai[49][5][7], size, _jv_),
                       _jx_ = caml_call2(Bonsai[49][5][7], index, _jw_);
                      return caml_call3(Bonsai[49][5][8], _k_, _jx_, _jt_);
                     }
                     function _jm_(param){
                      var
                       match = param[2],
                       num_items = match[2],
                       index = match[1],
                       should_render_extra_target = param[1],
                       _jq_ = 1 - should_render_extra_target,
                       _jr_ =
                         _jq_ ? caml_call2(Core[90], index, num_items - 1 | 0) : _jq_,
                       _js_ = _jr_ || is_the_extra_target;
                      return _js_;
                     }
                     var
                      _jn_ = caml_call2(Bonsai[49][5][7], index, num_items),
                      _jo_ =
                        caml_call2
                         (Bonsai[49][5][7], should_render_extra_target, _jn_),
                      _jp_ = caml_call3(Bonsai[49][5][8], _l_, _jo_, _jm_);
                     return caml_call3(Bonsai[49][5][1], _m_, _jp_, _jl_);
                    }
                    function _iW_(item_targets){
                     function _jb_(extra_target){
                      function _jj_(param){
                       var extra_target = param[2], item_targets = param[1];
                       return [0,
                               extra_target,
                               caml_call1(Core_Map[80], item_targets)];
                      }
                      var
                       _jk_ =
                         caml_call2(Bonsai[49][5][7], item_targets, extra_target);
                      return caml_call3(Bonsai[49][5][8], _n_, _jk_, _jj_);
                     }
                     function _jc_(pattern_syntax_097){
                      function _jf_(param){
                       if(0 === param)
                        return single_target
                                (1,
                                 num_items,
                                 caml_call1(Bonsai[2][1], default_item_height),
                                 total_height);
                       if(1 === param)
                        return caml_call1(Bonsai[7], Virtual_dom_Node[4]);
                       throw caml_maybe_attach_backtrace
                              ([0, Assert_failure, _o_], 1);
                      }
                      var _jg_ = 2;
                      function _jh_(param){return param ? 0 : 1;}
                      var
                       _ji_ =
                         caml_call3(Bonsai[49][5][4], 0, pattern_syntax_097, _jh_);
                      return caml_call4(Bonsai[49][5][3], _p_, _ji_, _jg_, _jf_);
                     }
                     var
                      _jd_ =
                        caml_call1(Bonsai[49][5][6], should_render_extra_target),
                      _je_ = caml_call3(Bonsai[49][5][1], _q_, _jd_, _jc_);
                     return caml_call3(Bonsai[49][5][1], _r_, _je_, _jb_);
                    }
                    function _iX_(param, data){
                     function _iZ_(pattern_syntax_092){
                      function _i1_(y_position){
                       function _i5_(size){
                        function _i9_(index){
                         return single_target(0, index, size, y_position);
                        }
                        function _i__(param){
                         var pattern_syntax_093 = param[2];
                         return pattern_syntax_093;
                        }
                        var
                         _i$_ =
                           caml_call3(Bonsai[49][5][4], _s_, pattern_syntax_092, _i__),
                         _ja_ = caml_call1(Bonsai[49][5][6], _i$_);
                        return caml_call3(Bonsai[49][5][1], _t_, _ja_, _i9_);
                       }
                       function _i6_(param){
                        var pattern_syntax_094 = param[5];
                        return pattern_syntax_094;
                       }
                       var
                        _i7_ =
                          caml_call3(Bonsai[49][5][4], _u_, pattern_syntax_092, _i6_),
                        _i8_ = caml_call1(Bonsai[49][5][6], _i7_);
                       return caml_call3(Bonsai[49][5][1], _v_, _i8_, _i5_);
                      }
                      function _i2_(param){
                       var pattern_syntax_095 = param[3];
                       return pattern_syntax_095;
                      }
                      var
                       _i3_ =
                         caml_call3(Bonsai[49][5][4], _w_, pattern_syntax_092, _i2_),
                       _i4_ = caml_call1(Bonsai[49][5][6], _i3_);
                      return caml_call3(Bonsai[49][5][1], _x_, _i4_, _i1_);
                     }
                     var _i0_ = caml_call1(Bonsai[49][1], data);
                     return caml_call3(Bonsai[49][5][1], _y_, _i0_, _iZ_);
                    }
                    var
                     _iY_ =
                       caml_call3
                        (Bonsai[34], [0, key[2], key[3]], map_for_targets, _iX_);
                    return caml_call3(Bonsai[49][5][1], _z_, _iY_, _iW_);
                   }
                   var
                    _iU_ =
                      caml_call2
                       (Bonsai[49][2], dnd, Bonsai_web_ui_drag_and_drop[5]),
                    _iV_ = caml_call1(Bonsai[49][1], _iU_);
                   return caml_call3(Bonsai[49][5][1], _A_, _iV_, _iT_);
                  }
                  function _iO_(map){
                   function _iR_(param, _iS_, acc){
                    var rank = _iS_[2];
                    return caml_call2(Core_Int[90], rank, acc);
                   }
                   return caml_call3(Core_Map[61], map, -1, _iR_) + 1 | 0;
                  }
                  var
                   _iP_ = caml_call3(Bonsai[49][5][8], _B_, input, _iO_),
                   _iQ_ = caml_call3(Bonsai[49][5][1], _C_, _iP_, _iN_);
                  return caml_call3(Bonsai[49][5][1], _D_, _iQ_, _iM_);
                 }
                 function _h8_(key$0, data){
                  function _h__(key_sexp){
                   function _ie_(size_attr){
                    function _ih_(pattern_syntax_065){
                     function _ij_(y_position){
                      function _in_(is_dragged_item){
                       function _ir_(data){
                        function _iv_(param){
                         var
                          _iB_ = param[2],
                          _iC_ = _iB_[2],
                          _iD_ = _iC_[2],
                          match = _iD_[2],
                          key_sexp = match[2],
                          size_attr = match[1],
                          extra_item_attrs = _iD_[1],
                          is_dragged_item = _iC_[1],
                          y_position = _iB_[1],
                          data = param[1],
                          _iE_ = [0, data, 0],
                          _iF_ = 0;
                         if(is_dragged_item)
                          var
                           _iG_ = caml_call1(Css_gen[42], 0.),
                           _iH_ = caml_call1(Virtual_dom_Vdom[1][32], _iG_);
                         else
                          var _iH_ = Virtual_dom_Vdom[1][11];
                         var
                          _iI_ =
                            caml_call2(Virtual_dom_Vdom[1][12], extra_item_attrs, _iH_),
                          _iJ_ = transform_xy(left, right, 0, y_position),
                          _iK_ = caml_call2(Virtual_dom_Vdom[1][12], _iJ_, _iI_),
                          _iL_ =
                            [0,
                             [0,
                              caml_call2(Virtual_dom_Vdom[1][12], size_attr, _iK_),
                              _iF_]];
                         return caml_call3
                                 (Virtual_dom_Node[17], [0, key_sexp], _iL_, _iE_);
                        }
                        var
                         _iw_ = caml_call2(Bonsai[49][5][7], size_attr, key_sexp),
                         _ix_ = caml_call2(Bonsai[49][5][7], extra_item_attrs, _iw_),
                         _iy_ = caml_call2(Bonsai[49][5][7], is_dragged_item, _ix_),
                         _iz_ = caml_call2(Bonsai[49][5][7], y_position, _iy_),
                         _iA_ = caml_call2(Bonsai[49][5][7], data, _iz_);
                        return caml_call3(Bonsai[49][5][8], _E_, _iA_, _iv_);
                       }
                       function _is_(param){
                        var pattern_syntax_066 = param[1];
                        return pattern_syntax_066;
                       }
                       var
                        _it_ =
                          caml_call3(Bonsai[49][5][4], _F_, pattern_syntax_065, _is_),
                        _iu_ = caml_call1(Bonsai[49][5][6], _it_);
                       return caml_call3(Bonsai[49][5][1], _G_, _iu_, _ir_);
                      }
                      function _io_(param){
                       var pattern_syntax_067 = param[6];
                       return pattern_syntax_067;
                      }
                      var
                       _ip_ =
                         caml_call3(Bonsai[49][5][4], _H_, pattern_syntax_065, _io_),
                       _iq_ = caml_call1(Bonsai[49][5][6], _ip_);
                      return caml_call3(Bonsai[49][5][1], _I_, _iq_, _in_);
                     }
                     function _ik_(param){
                      var pattern_syntax_068 = param[4];
                      return pattern_syntax_068;
                     }
                     var
                      _il_ =
                        caml_call3(Bonsai[49][5][4], _J_, pattern_syntax_065, _ik_),
                      _im_ = caml_call1(Bonsai[49][5][6], _il_);
                     return caml_call3(Bonsai[49][5][1], _K_, _im_, _ij_);
                    }
                    var _ii_ = caml_call1(Bonsai[49][1], data);
                    return caml_call3(Bonsai[49][5][1], _L_, _ii_, _ih_);
                   }
                   var
                    _if_ = caml_call2(Bonsai[49][3], size_attr, key$0),
                    _ig_ = caml_call1(Bonsai[49][1], _if_);
                   return caml_call3(Bonsai[49][5][1], _M_, _ig_, _ie_);
                  }
                  function _h$_(key$0){
                   var
                    key_sexp = caml_call1(key[2], key$0),
                    _ib_ = caml_call1(Core_Sexp[86], key_sexp),
                    _ic_ = [0, caml_call1(Ppx_string_runtime[1][3], _ib_), 0],
                    _id_ =
                      [0, caml_call1(Ppx_string_runtime[1][2], cst_source), _ic_];
                   return caml_call1(Ppx_string_runtime[1][4], _id_);
                  }
                  var _ia_ = caml_call3(Bonsai[49][5][8], _N_, key$0, _h$_);
                  return caml_call3(Bonsai[49][5][1], _O_, _ia_, _h__);
                 }
                 var
                  _h9_ =
                    caml_call3
                     (Bonsai[34], [0, key[2], key[3]], map_for_items, _h8_);
                 return caml_call3(Bonsai[49][5][1], _P_, _h9_, _h7_);
                }
                function _h0_(param){
                 var
                  model_info_at_index = param[2],
                  items = param[1],
                  items$0 = caml_call1(of_list, items);
                 caml_call2
                  (map_inplace,
                   items$0,
                   function(param){
                    var
                     item = param[2],
                     key = param[1],
                     match = caml_call1(model_info_at_index, item[2]),
                     adjusted_index = match[3],
                     is_target_of_external_item = match[2],
                     is_dragged_item = match[1];
                    return [0,
                            key,
                            [0,
                             item[1],
                             item[2],
                             item[3],
                             adjusted_index,
                             item[5],
                             is_dragged_item,
                             is_target_of_external_item]];
                   });
                 caml_call4
                  (sort,
                   0,
                   0,
                   items$0,
                   function(a, b){
                    function _h6_(param){
                     var adjusted = param[2][4];
                     return adjusted;
                    }
                    return caml_call4
                            (Core_Comparable[2], Core_Int[88], _h6_, a, b);
                   });
                 function _h3_(param, _h4_){
                  var
                   item = _h4_[2],
                   key = _h4_[1],
                   items = param[2],
                   acc = param[1],
                   adjusted = item[7] ? acc + default_item_height | 0 : acc,
                   _h5_ =
                     caml_call3
                      (Core_Map[37],
                       items,
                       key,
                       [0,
                        item[1],
                        item[2],
                        item[3],
                        adjusted,
                        item[5],
                        item[6],
                        item[7]]);
                  return [0, adjusted + item[5] | 0, _h5_];
                 }
                 return caml_call3
                          (fold,
                           items$0,
                           [0, 0, caml_call1(Core_Map[4], [0, key[3]])],
                           _h3_)
                         [2];
                }
                var
                 _h1_ =
                   caml_call2
                    (Bonsai[49][5][7], alist_for_targets, model_info_at_index),
                 _h2_ = caml_call3(Bonsai[49][5][8], _Q_, _h1_, _h0_);
                return caml_call3(Bonsai[49][5][1], _R_, _h2_, _hZ_);
               }
               var
                _hW_ = caml_call1(Core_Map[8], [0, key[3]]),
                _hX_ = caml_call2(Bonsai[49][2], alist_for_targets, _hW_),
                _hY_ = caml_call1(Bonsai[49][1], _hX_);
               return caml_call3(Bonsai[49][5][1], _S_, _hY_, _hV_);
              }
              function _hS_(param){
               var pattern_syntax_051 = param[2];
               return pattern_syntax_051;
              }
              var
               _hT_ =
                 caml_call3(Bonsai[49][5][4], _T_, pattern_syntax_050, _hS_),
               _hU_ = caml_call1(Bonsai[49][5][6], _hT_);
              return caml_call3(Bonsai[49][5][1], _U_, _hU_, _hR_);
             }
             function _hO_(param){
              var pattern_syntax_052 = param[1];
              return pattern_syntax_052;
             }
             var
              _hP_ =
                caml_call3(Bonsai[49][5][4], _V_, pattern_syntax_050, _hO_),
              _hQ_ = caml_call1(Bonsai[49][5][6], _hP_);
             return caml_call3(Bonsai[49][5][1], _W_, _hQ_, _hN_);
            }
            function _hF_(param){
             var sizes = param[2], input = param[1];
             function _hL_(param){
              var
               match = param[2],
               index = match[2],
               data = match[1],
               key = param[1],
               match$0 = caml_call2(Core_Map[44], sizes, key);
              if(match$0)
               var
                size = match$0[1],
                size$0 = caml_call1(Core_Int[3], size[2]);
              else
               var size$0 = default_item_height;
              return [0, key, [0, data, index, 0, 0, size$0, 0, 0]];
             }
             var
              items =
                caml_call2
                 (of_list_map, caml_call2(Core_Map[81], 0, input), _hL_);
             caml_call4
              (sort,
               0,
               0,
               items,
               function(a, b){
                function _hM_(param){var index = param[2][2]; return index;}
                return caml_call4
                        (Core_Comparable[2], Core_Int[88], _hM_, a, b);
               });
             var acc = [0, 0], _hJ_ = items.length - 1 - 1 | 0, _hI_ = 0;
             if(_hJ_ >= 0){
              var i = _hI_;
              for(;;){
               var
                x = runtime.caml_check_bound(items, i)[1 + i],
                acc$0 = acc[1],
                item = x[2],
                key = x[1],
                y =
                  [0,
                   key,
                   [0,
                    item[1],
                    item[2],
                    acc$0,
                    item[4],
                    item[5],
                    item[6],
                    item[7]]],
                new_acc = acc$0 + item[5] | 0;
               acc[1] = new_acc;
               items[1 + i] = y;
               var _hK_ = i + 1 | 0;
               if(_hJ_ === i) break;
               var i = _hK_;
              }
             }
             var total_height = acc[1];
             return [0, total_height, caml_call1(to_list, items)];
            }
            var
             _hG_ = caml_call2(Bonsai[49][5][7], input, sizes),
             _hH_ = caml_call3(Bonsai[49][5][8], _X_, _hG_, _hF_);
            return caml_call3(Bonsai[49][5][1], _Y_, _hH_, _hE_);
           }
           function _hz_(param, index){
            var historical_min_index = param[2], model = param[1];
            a:
            {
             if(model){
              var match = model[1];
              if(0 === match[0]){
               var
                source = match[1],
                is_dragged_item = caml_call2(Core[90], source, index);
               break a;
              }
             }
             var is_dragged_item = 0;
            }
            if(model){
             var _hC_ = model[1];
             if(0 === _hC_[0]){
              var match$0 = model[2], source$0 = _hC_[1];
              if(match$0){
               var
                target = match$0[1],
                target$0 =
                  caml_call2(Core[92], target, historical_min_index)
                   ? Core_Int[45]
                   : target;
               a:
               if(caml_call2(Core[90], source$0, index))
                var target$1 = target$0;
               else if(caml_call2(Core[90], source$0, target$0))
                var target$1 = index;
               else if(caml_call2(Core[92], source$0, target$0)){
                if
                 (caml_call2(Core[92], source$0, index)
                  && caml_call2(Core[89], index, target$0)){var target$1 = index - 1 | 0; break a;
                }
                var target$1 = index;
               }
               else{
                if
                 (caml_call2(Core[91], source$0, index)
                  && caml_call2(Core[88], index, target$0)){var target$1 = index + 1 | 0; break a;
                }
                var target$1 = index;
               }
               return [0, is_dragged_item, 0, target$1];
              }
              var target$2 = Core_Int[45];
              a:
              if(caml_call2(Core[90], source$0, index))
               var target$3 = target$2;
              else if(caml_call2(Core[90], source$0, target$2))
               var target$3 = index;
              else if(caml_call2(Core[92], source$0, target$2)){
               if
                (caml_call2(Core[92], source$0, index)
                 && caml_call2(Core[89], index, target$2)){var target$3 = index - 1 | 0; break a;
               }
               var target$3 = index;
              }
              else{
               if
                (caml_call2(Core[91], source$0, index)
                 && caml_call2(Core[88], index, target$2)){var target$3 = index + 1 | 0; break a;
               }
               var target$3 = index;
              }
              return [0, is_dragged_item, 0, target$3];
             }
             var match$1 = model[2];
             if(match$1){
              var
               target$4 = match$1[1],
               target$5 =
                 caml_call2(Core[92], target$4, historical_min_index)
                  ? Core_Int[45]
                  : target$4,
               _hD_ =
                 caml_call2(Core[88], index, target$5) ? index + 1 | 0 : index;
              return [0,
                      is_dragged_item,
                      caml_call2(Core[90], index, target$5),
                      _hD_];
             }
            }
            return [0, is_dragged_item, 0, index];
           }
           var
            _hA_ = caml_call2(Bonsai[49][5][7], model, historical_min_index),
            _hB_ = caml_call3(Bonsai[49][5][8], _Z_, _hA_, _hz_);
           return caml_call3(Bonsai[49][5][1], ___, _hB_, _hy_);
          }
          function _hv_(param){
           var pattern_syntax_041 = param[1];
           return pattern_syntax_041;
          }
          var
           _hw_ = caml_call3(Bonsai[49][5][4], _$_, pattern_syntax_040, _hv_),
           _hx_ = caml_call1(Bonsai[49][5][6], _hw_);
          return caml_call3(Bonsai[49][5][1], _aa_, _hx_, _hu_);
         }
         function _hr_(param){
          var pattern_syntax_042 = param[2];
          return pattern_syntax_042;
         }
         var
          _hs_ = caml_call3(Bonsai[49][5][4], _ab_, pattern_syntax_040, _hr_),
          _ht_ = caml_call1(Bonsai[49][5][6], _hs_);
         return caml_call3(Bonsai[49][5][1], _ac_, _ht_, _hq_);
        }
        var
         let_syntax_043 =
           caml_call2(Bonsai[49][2], dnd, Bonsai_web_ui_drag_and_drop[6]);
        function _hn_(param){
         var input = param[2], model = param[1];
         if(! model) return _ad_;
         var match = caml_call2(Core_Map[44], input, model[1]);
         if(! match) return [0, [0, [1, model[1]], model[2]], 1];
         var source = match[1][2];
         return [0, [0, [0, source], model[2]], 0];
        }
        var
         _ho_ = caml_call2(Bonsai[49][5][7], let_syntax_043, input),
         _hp_ = caml_call3(Bonsai[49][5][8], _ae_, _ho_, _hn_);
        return caml_call3(Bonsai[49][5][1], _af_, _hp_, _hm_);
       }
       function _gR_(pattern_syntax_027){
        function _gW_(set_historical_min_index){
         function _g0_(historical_min_index){
          function _g4_(min_index){
           function _hb_(update_min){
            function _hf_(pattern_syntax_037){
             function _hi_(param){
              return caml_call1(Bonsai[49][1], historical_min_index);
             }
             function _hj_(param){return 0;}
             var
              _hk_ =
                caml_call3(Bonsai[49][5][4], _ag_, pattern_syntax_037, _hj_),
              _hl_ = caml_call1(Bonsai[49][5][6], _hk_);
             return caml_call3(Bonsai[49][5][1], _ah_, _hl_, _hi_);
            }
            function _hg_(a_038, b_039){
             return caml_call2(Core_Int[87], a_038, b_039);
            }
            var
             _hh_ =
               caml_call4
                (Bonsai[44][1],
                 [0, Core_Int[77]],
                 _hg_,
                 min_index,
                 update_min);
            return caml_call3(Bonsai[49][5][1], _ai_, _hh_, _hf_);
           }
           function _hc_(param, min_index){
            var
             set_historical_min_index = param[2],
             historical_min_index = param[1];
            return caml_call2(Core[92], min_index, historical_min_index)
                    ? caml_call1(set_historical_min_index, min_index)
                    : Bonsai_web[5][1];
           }
           var
            _hd_ =
              caml_call2
               (Bonsai[49][5][7],
                historical_min_index,
                set_historical_min_index),
            _he_ = caml_call3(Bonsai[49][5][8], _aj_, _hd_, _hc_);
           return caml_call3(Bonsai[49][5][1], _ak_, _he_, _hb_);
          }
          function _g5_(map){
           var _g7_ = Core_Option[39], _g8_ = Core_Int[45];
           function _g9_(_ha_){return caml_call2(_g7_, _ha_, _g8_);}
           function _g__(param){var index = param[2]; return index;}
           var
            _g$_ =
              caml_call5(Incr_map[19], 0, 0, map, [0, Core_Int[97]], _g__);
           return caml_call2(Ui_incr[12], _g$_, _g9_);
          }
          var _g6_ = caml_call2(Bonsai[48][2], input, _g5_);
          return caml_call3(Bonsai[49][5][1], _al_, _g6_, _g4_);
         }
         function _g1_(param){
          var pattern_syntax_028 = param[1];
          return pattern_syntax_028;
         }
         var
          _g2_ = caml_call3(Bonsai[49][5][4], _am_, pattern_syntax_027, _g1_),
          _g3_ = caml_call1(Bonsai[49][5][6], _g2_);
         return caml_call3(Bonsai[49][5][1], _an_, _g3_, _g0_);
        }
        function _gX_(param){
         var pattern_syntax_029 = param[2];
         return pattern_syntax_029;
        }
        var
         _gY_ = caml_call3(Bonsai[49][5][4], _ao_, pattern_syntax_027, _gX_),
         _gZ_ = caml_call1(Bonsai[49][5][6], _gY_);
        return caml_call3(Bonsai[49][5][1], _ap_, _gZ_, _gW_);
       }
       var
        _gS_ = Core_Int[45],
        _gT_ =
          [0,
           function(a_030, b_031){
            return caml_call2(Core_Int[87], a_030, b_031);
           }],
        _gU_ = caml_call4(Bonsai[11], 0, [0, Core_Int[77]], _gT_, _gS_),
        _gV_ = caml_call3(Bonsai[49][5][1], _aq_, _gU_, _gR_);
       return caml_call3(Bonsai[49][5][1], _ar_, _gV_, _gQ_);
      }
      function _gN_(param){
       var pattern_syntax_024 = param[2];
       return pattern_syntax_024;
      }
      var
       _gO_ = caml_call3(Bonsai[49][5][4], _as_, pattern_syntax_023, _gN_),
       _gP_ = caml_call1(Bonsai[49][5][6], _gO_);
      return caml_call3(Bonsai[49][5][1], _at_, _gP_, _gM_);
     }
     function _gJ_(param){
      var pattern_syntax_025 = param[1];
      return pattern_syntax_025;
     }
     var
      _gK_ = caml_call3(Bonsai[49][5][4], _au_, pattern_syntax_023, _gJ_),
      _gL_ = caml_call1(Bonsai[49][5][6], _gK_);
     return caml_call3(Bonsai[49][5][1], _av_, _gL_, _gI_);
    }
    var
     _gH_ =
       caml_call2(Bonsai_web_ui_element_size_hoo[4], [0, key[2], key[3]], 0);
    return caml_call3(Bonsai[49][5][1], _aw_, _gH_, _gG_);
   }
   function Reorderable_list(Key){
    function sexp_of_t(x_114){
     return caml_call3(Core_Map[132], [0, Key[2]], Core[389], x_114);
    }
    function equal(a_115, b_116){
     function _gA_(a_117, b_118){return caml_call2(Core[384], a_117, b_118);}
     return caml_call4(Core_Map[136], [0], _gA_, a_115, b_116);
    }
    function of_list(sources){
     function _gy_(index, source){return [0, source, index];}
     var _gz_ = caml_call2(Core_List[41], sources, _gy_);
     return caml_call2(Core_Map[8], [0, Key[3]], _gz_);
    }
    var empty = caml_call1(Core_Map[4], [0, Key[3]]);
    function set(model, source){
     function _gx_(param){
      if(! param) return caml_call1(Core_Map[35], model);
      var index = param[1];
      return index;
     }
     return caml_call3(Core_Map[43], model, source, _gx_);
    }
    function move(model, source, target){
     var
      model$0 = set(model, source),
      source$0 = caml_call2(Core_Map[45], model$0, source);
     function _gw_(index){
      if(caml_call2(Core[90], source$0, index)) return target;
      if(caml_call2(Core[90], source$0, target)) return index;
      if(caml_call2(Core[92], source$0, target)){
       if
        (caml_call2(Core[92], source$0, index)
         && caml_call2(Core[89], index, target))
        return index - 1 | 0;
       return index;
      }
      if
       (caml_call2(Core[91], source$0, index)
        && caml_call2(Core[88], index, target))
       return index + 1 | 0;
      return index;
     }
     return caml_call2(Core_Map[57], model$0, _gw_);
    }
    function remove(model, source){
     var moved_to_end = move(model, source, caml_call1(Core_Map[35], model));
     return caml_call2(Core_Map[47], moved_to_end, source);
    }
    return [0, , sexp_of_t, equal, of_list, empty, move, set, remove];
   }
   function item_of_sexp(of_a_119, sexp_124){
    a:
    {
     if(0 === sexp_124[0]){
      var _gs_ = sexp_124[1];
      b:
      if(caml_string_notequal(_gs_, cst_Move)){
       c:
       if(caml_string_notequal(_gs_, cst_Overwrite)){
        d:
        if(caml_string_notequal(_gs_, cst_Remove)){
         if(caml_string_notequal(_gs_, cst_Set)){
          if(! caml_string_notequal(_gs_, cst_move)) break b;
          if(! caml_string_notequal(_gs_, cst_overwrite)) break c;
          if(! caml_string_notequal(_gs_, cst_remove)) break d;
          if(caml_string_notequal(_gs_, cst_set)) break a;
         }
         return caml_call2
                 (Sexplib0_Sexp_conv_error[9], error_source_122, sexp_124);
        }
        return caml_call2
                (Sexplib0_Sexp_conv_error[9], error_source_122, sexp_124);
       }
       return caml_call2
               (Sexplib0_Sexp_conv_error[9], error_source_122, sexp_124);
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[9], error_source_122, sexp_124);
     }
     var _gt_ = sexp_124[1];
     if(! _gt_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[11], error_source_122, sexp_124);
     var _gu_ = _gt_[1];
     if(0 !== _gu_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[10], error_source_122, sexp_124);
     var tag_125 = _gu_[1];
     b:
     if(caml_string_notequal(tag_125, cst_Move)){
      c:
      if(caml_string_notequal(tag_125, cst_Overwrite)){
       d:
       if(caml_string_notequal(tag_125, cst_Remove)){
        if(caml_string_notequal(tag_125, cst_Set)){
         if(! caml_string_notequal(tag_125, cst_move)) break b;
         if(! caml_string_notequal(tag_125, cst_overwrite)) break c;
         if(! caml_string_notequal(tag_125, cst_remove)) break d;
         if(caml_string_notequal(tag_125, cst_set)) break a;
        }
        var sexp_args_133 = _gt_[2];
        if(sexp_args_133 && ! sexp_args_133[2]){
         var
          arg0_134 = sexp_args_133[1],
          res0_135 = caml_call1(of_a_119, arg0_134);
         return [1, res0_135];
        }
        return caml_call3
                (Sexplib0_Sexp_conv_error[8],
                 error_source_122,
                 tag_125,
                 sexp_124);
       }
       var sexp_args_138 = _gt_[2];
       if(sexp_args_138 && ! sexp_args_138[2]){
        var
         arg0_139 = sexp_args_138[1],
         res0_140 = caml_call1(of_a_119, arg0_139);
        return [2, res0_140];
       }
       return caml_call3
               (Sexplib0_Sexp_conv_error[8],
                error_source_122,
                tag_125,
                sexp_124);
      }
      var sexp_args_143 = _gt_[2];
      if(sexp_args_143 && ! sexp_args_143[2]){
       var
        arg0_144 = sexp_args_143[1],
        res0_145 = caml_call2(Core[473], of_a_119, arg0_144);
       return [3, res0_145];
      }
      return caml_call3
              (Sexplib0_Sexp_conv_error[8],
               error_source_122,
               tag_125,
               sexp_124);
     }
     var sexp_args_126 = _gt_[2];
     if(sexp_args_126){
      var _gv_ = sexp_args_126[2];
      if(_gv_ && ! _gv_[2]){
       var
        arg1_128 = _gv_[1],
        arg0_127 = sexp_args_126[1],
        res0_129 = caml_call1(of_a_119, arg0_127),
        res1_130 = caml_call1(Core[390], arg1_128);
       return [0, res0_129, res1_130];
      }
     }
     return caml_call3
             (Sexplib0_Sexp_conv_error[8],
              error_source_122,
              tag_125,
              sexp_124);
    }
    return caml_call2
            (Sexplib0_Sexp_conv_error[12], error_source_122, sexp_124);
   }
   function sexp_of_item(of_a_147, param){
    switch(param[0]){
      case 0:
       var
        arg1_149 = param[2],
        arg0_148 = param[1],
        res0_150 = caml_call1(of_a_147, arg0_148),
        res1_151 = caml_call1(Core[389], arg1_149);
       return [1, [0, _az_, [0, res0_150, [0, res1_151, 0]]]];
      case 1:
       var arg0_152 = param[1], res0_153 = caml_call1(of_a_147, arg0_152);
       return [1, [0, _aA_, [0, res0_153, 0]]];
      case 2:
       var arg0_154 = param[1], res0_155 = caml_call1(of_a_147, arg0_154);
       return [1, [0, _aB_, [0, res0_155, 0]]];
      default:
       var
        arg0_156 = param[1],
        res0_157 = caml_call2(Core[472], of_a_147, arg0_156);
       return [1, [0, _aC_, [0, res0_157, 0]]];
    }
   }
   function t_of_sexp(of_a_159, x_161){
    function _gq_(_gr_){return item_of_sexp(of_a_159, _gr_);}
    return caml_call2(Core[473], _gq_, x_161);
   }
   function sexp_of_t(of_a_162, x_163){
    function _go_(_gp_){return sexp_of_item(of_a_162, _gp_);}
    return caml_call2(Core[472], _go_, x_163);
   }
   function with_inject
   (key,
    opt,
    enable_debug_overlay,
    extra_item_attrs,
    left,
    right,
    empty_list_placeholder,
    default_item_height,
    render){
    if(opt)
     var sth = opt[1], sentinel_name = sth;
    else
     var sentinel_name = cst_dnd;
    var t_of_sexp = key[1], sexp_of_t$0 = key[2], comparator = key[3];
    function equal(a, b){
     var _gn_ = caml_call2(comparator[1], a, b);
     return caml_call2(Core[90], _gn_, 0);
    }
    function sexp_of_t$1(x_164){return sexp_of_t(sexp_of_t$0, x_164);}
    var Model = Reorderable_list([0, t_of_sexp, sexp_of_t$0, comparator]);
    function apply_action(model, action){
     switch(action[0]){
       case 0:
        var target = action[2], source = action[1];
        return Model[6].call(null, model, source, target);
       case 1:
        var source$0 = action[1]; return Model[7].call(null, model, source$0);
       case 2:
        var source$1 = action[1]; return Model[8].call(null, model, source$1);
       default: var sources = action[1]; return Model[4].call(null, sources);
     }
    }
    function _e9_(pattern_syntax_165){
     function _fd_(ranked_input){
      function _fh_(inject){
       function _fl_(dnd){
        function _fp_(source){
         function _fs_(rendered_ranked_input){
          function _fC_(input){
           function _fL_(list){
            function _fN_(sentinel){
             function _fQ_(dragged_element){
              function _f__(view){
               function _ge_(ranking){
                var
                 _gm_ =
                   caml_call4
                    (Bonsai[2][13], ranking, view, inject, Core_Tuple[2][5]);
                return caml_call1(Bonsai[49][1], _gm_);
               }
               function _gf_(rendered_ranked_input){
                function _gh_(param){
                 var extra = param[2][1][1], key = param[1];
                 return [0, key, extra];
                }
                function _gi_(a, b){
                 function _gl_(param){var rank = param[2][2]; return rank;}
                 return caml_call4
                         (Core_Comparable[2], Core_Int[88], _gl_, a, b);
                }
                var
                 _gj_ = caml_call2(Core_Map[81], 0, rendered_ranked_input),
                 _gk_ = caml_call2(Core_List[79], _gj_, _gi_);
                return caml_call2(Core_List[51], _gk_, _gh_);
               }
               var
                _gg_ =
                  caml_call3
                   (Bonsai[49][5][8], _aD_, rendered_ranked_input, _gf_);
               return caml_call3(Bonsai[49][5][1], _aE_, _gg_, _ge_);
              }
              function _f$_(param){
               var
                match = param[2],
                dragged_element = match[2],
                sentinel = match[1],
                list = param[1],
                _gd_ = [0, [0, caml_call1(sentinel, sentinel_name), 0]];
               return caml_call3
                       (Virtual_dom_Node[17],
                        0,
                        _gd_,
                        [0, list, [0, dragged_element, 0]]);
              }
              var
               _ga_ = caml_call2(Bonsai[49][5][7], sentinel, dragged_element),
               _gb_ = caml_call2(Bonsai[49][5][7], list, _ga_),
               _gc_ = caml_call3(Bonsai[49][5][8], _aF_, _gb_, _f$_);
              return caml_call3(Bonsai[49][5][1], _aG_, _gc_, _f__);
             }
             function _fR_(key){
              function _fT_(result){
               function _f0_(pattern_syntax_192){
                function _f2_(param){
                 if(0 === param){
                  var
                   _f6_ =
                     function(view){return caml_call1(Bonsai[49][1], view);},
                   _f7_ =
                     function(param){
                      if(! param)
                       throw caml_maybe_attach_backtrace
                              ([0, Assert_failure, _aH_], 1);
                      var pattern_syntax_193 = param[1][1][2];
                      return pattern_syntax_193;
                     },
                   _f8_ =
                     caml_call3(Bonsai[49][5][4], _aI_, pattern_syntax_192, _f7_),
                   _f9_ = caml_call1(Bonsai[49][5][6], _f8_);
                  return caml_call3(Bonsai[49][5][1], _aJ_, _f9_, _f6_);
                 }
                 if(1 === param) return caml_call1(Bonsai[7], 0);
                 throw caml_maybe_attach_backtrace
                        ([0, Assert_failure, _aK_], 1);
                }
                var _f3_ = 2;
                function _f4_(param){return param ? 0 : 1;}
                var
                 _f5_ =
                   caml_call3(Bonsai[49][5][4], 0, pattern_syntax_192, _f4_);
                return caml_call4(Bonsai[49][5][3], _aL_, _f5_, _f3_, _f2_);
               }
               var _f1_ = caml_call1(Bonsai[49][5][6], result);
               return caml_call3(Bonsai[49][5][1], _aM_, _f1_, _f0_);
              }
              function _fU_(key_and_input){
               function _fX_(param){
                var pattern_syntax_189 = param[1];
                return pattern_syntax_189;
               }
               var key = caml_call2(Ui_incr[78][4][6], key_and_input, _fX_);
               function _fY_(param){
                var pattern_syntax_190 = param[2];
                return pattern_syntax_190;
               }
               var
                rendered_ranked_input =
                  caml_call2(Ui_incr[78][4][6], key_and_input, _fY_),
                lookup =
                  caml_call4
                   (Ui_incr[82][56][1],
                    0,
                    0,
                    rendered_ranked_input,
                    comparator);
               function _fZ_(key){
                return caml_call2(Ui_incr[82][56][2], lookup, key);
               }
               return caml_call2(Ui_incr[78][4][1], key, _fZ_);
              }
              var
               _fV_ = caml_call2(Bonsai[2][3], key, rendered_ranked_input),
               _fW_ = caml_call2(Bonsai[48][2], _fV_, _fU_);
              return caml_call3(Bonsai[49][5][1], _aN_, _fW_, _fT_);
             }
             var _fS_ = caml_call2(Bonsai_web_ui_drag_and_drop[8], dnd, _fR_);
             return caml_call3(Bonsai[49][5][1], _aO_, _fS_, _fQ_);
            }
            var
             _fO_ =
               caml_call2(Bonsai[49][2], dnd, Bonsai_web_ui_drag_and_drop[4]),
             _fP_ = caml_call1(Bonsai[49][1], _fO_);
            return caml_call3(Bonsai[49][5][1], _aP_, _fP_, _fN_);
           }
           var
            _fM_ =
              list
               ([0, t_of_sexp, sexp_of_t$0, comparator],
                dnd,
                enable_debug_overlay,
                extra_item_attrs,
                left,
                right,
                empty_list_placeholder,
                default_item_height,
                input);
           return caml_call3(Bonsai[49][5][1], _aQ_, _fM_, _fL_);
          }
          function _fD_(param, data){
           function _fF_(param){
            var rank = param[2], view = param[1][2];
            return [0, view, rank];
           }
           function _fG_(param, _fI_){
            var
             new_for_cutoff_180 = _fI_[2],
             new_for_cutoff_182 = _fI_[1][2],
             old_for_cutoff_181 = param[2],
             old_for_cutoff_183 = param[1][2],
             _fJ_ = old_for_cutoff_183 === new_for_cutoff_182 ? 1 : 0,
             _fK_ =
               _fJ_ ? old_for_cutoff_181 === new_for_cutoff_180 ? 1 : 0 : _fJ_;
            return _fK_;
           }
           var _fH_ = caml_call2(Bonsai[49][5][2], data, _fG_);
           return caml_call3(Bonsai[49][5][8], _aR_, _fH_, _fF_);
          }
          var
           _fE_ =
             caml_call3
              (Bonsai[34],
               [0, sexp_of_t$0, comparator],
               rendered_ranked_input,
               _fD_);
          return caml_call3(Bonsai[49][5][1], _aS_, _fE_, _fC_);
         }
         function _ft_(key, data){
          function _fv_(source){
           function _fz_(rendered){
            var _fB_ = caml_call2(Bonsai[2][3], rendered, data);
            return caml_call1(Bonsai[49][1], _fB_);
           }
           var _fA_ = caml_call3(render, data, source, key);
           return caml_call3(Bonsai[49][5][1], _aT_, _fA_, _fz_);
          }
          function _fw_(param){
           var source = param[2], key = param[1];
           return caml_call1(source, key);
          }
          var
           _fx_ = caml_call2(Bonsai[49][5][7], key, source),
           _fy_ = caml_call3(Bonsai[49][5][8], _aU_, _fx_, _fw_);
          return caml_call3(Bonsai[49][5][1], _aV_, _fy_, _fv_);
         }
         var
          _fu_ =
            caml_call3
             (Bonsai[34], [0, sexp_of_t$0, comparator], ranked_input, _ft_);
         return caml_call3(Bonsai[49][5][1], _aW_, _fu_, _fs_);
        }
        var
         _fq_ = caml_call2(Bonsai[49][2], dnd, Bonsai_web_ui_drag_and_drop[3]),
         _fr_ = caml_call1(Bonsai[49][1], _fq_);
        return caml_call3(Bonsai[49][5][1], _aX_, _fr_, _fp_);
       }
       function _fm_(inject, key, i){
        return caml_call1(inject, [0, [0, key, i], 0]);
       }
       var
        _fn_ = caml_call3(Bonsai[49][5][4], 0, inject, _fm_),
        _fo_ =
          caml_call3
           (Bonsai_web_ui_drag_and_drop[7],
            [0, t_of_sexp, sexp_of_t$0, equal],
            [0, Core_Int[76], Core_Int[77], Core_Int[87]],
            _fn_);
       return caml_call3(Bonsai[49][5][1], _aY_, _fo_, _fl_);
      }
      function _fi_(param){
       var pattern_syntax_166 = param[2];
       return pattern_syntax_166;
      }
      var
       _fj_ = caml_call3(Bonsai[49][5][4], _aZ_, pattern_syntax_165, _fi_),
       _fk_ = caml_call1(Bonsai[49][5][6], _fj_);
      return caml_call3(Bonsai[49][5][1], _a0_, _fk_, _fh_);
     }
     function _fe_(param){
      var pattern_syntax_167 = param[1];
      return pattern_syntax_167;
     }
     var
      _ff_ = caml_call3(Bonsai[49][5][4], _a1_, pattern_syntax_165, _fe_),
      _fg_ = caml_call1(Bonsai[49][5][6], _ff_);
     return caml_call3(Bonsai[49][5][1], _a2_, _fg_, _fd_);
    }
    var _e__ = 0;
    function _e$_(param, model, actions){
     return caml_call3(Core_List[20], actions, model, apply_action);
    }
    var
     _fa_ = caml_call1(Core_Map[4], [0, comparator]),
     _fb_ =
       [0, function(a_168, b_169){return Model[3].call(null, a_168, b_169);}],
     _fc_ =
       caml_call7
        (Bonsai[17],
         0,
         [0, Model[2]],
         [0, sexp_of_t$1],
         _fb_,
         _fa_,
         _e$_,
         _e__);
    return caml_call3(Bonsai[49][5][1], _a3_, _fc_, _e9_);
   }
   function sync_with_set(Key, input, inject, add, remove){
    function _eX_(callback){
     function _e8_(a_206, b_207){
      return caml_call3(Core_Set[89], [0], a_206, b_207);
     }
     return caml_call4(Bonsai[44][2], 0, _e8_, input, callback);
    }
    function _eY_(param, old, new$0){
     var
      match = param[2],
      remove = match[2],
      add = match[1],
      inject = param[1];
     if(old)
      var
       old$0 = old[1],
       _e2_ =
         function(acc, param){
          if(0 === param[0]){
           var k = param[1];
           return [0, caml_call1(remove, k), acc];
          }
          var k$0 = param[1];
          return [0, caml_call1(add, k$0), acc];
         },
       _e3_ = caml_call2(Core_Set[18], old$0, new$0),
       _e4_ = caml_call3(Core_Sequence[21], _e3_, 0, _e2_),
       _e5_ = caml_call1(Reversed_list[3], _e4_);
     else
      var
       _e6_ = function(acc, key){return [0, caml_call1(add, key), acc];},
       _e7_ = caml_call3(Core_Set[50], new$0, 0, _e6_),
       _e5_ = caml_call1(Reversed_list[3], _e7_);
     return caml_call1(inject, _e5_);
    }
    var
     _eZ_ = caml_call2(Bonsai[49][5][7], add, remove),
     _e0_ = caml_call2(Bonsai[49][5][7], inject, _eZ_),
     _e1_ = caml_call3(Bonsai[49][5][8], _a4_, _e0_, _eY_);
    return caml_call3(Bonsai[49][5][1], _a5_, _e1_, _eX_);
   }
   function simple
   (key,
    sentinel_name,
    enable_debug_overlay,
    extra_item_attrs,
    left,
    right,
    empty_list_placeholder,
    default_item_height,
    render,
    input){
    function _ez_(pattern_syntax_208){
     function _eB_(view){
      function _eF_(value){
       function _eJ_(inject){
        function _eN_(pattern_syntax_212){
         function _eS_(param){
          var _eW_ = caml_call2(Bonsai[2][3], value, view);
          return caml_call1(Bonsai[49][1], _eW_);
         }
         function _eT_(param){return 0;}
         var
          _eU_ = caml_call3(Bonsai[49][5][4], _a6_, pattern_syntax_212, _eT_),
          _eV_ = caml_call1(Bonsai[49][5][6], _eU_);
         return caml_call3(Bonsai[49][5][1], _a7_, _eV_, _eS_);
        }
        function _eO_(key){return [2, key];}
        var _eP_ = caml_call1(Bonsai[2][1], _eO_);
        function _eQ_(key){return [1, key];}
        var
         _eR_ =
           sync_with_set
            (key, input, inject, caml_call1(Bonsai[2][1], _eQ_), _eP_);
        return caml_call3(Bonsai[49][5][1], _a8_, _eR_, _eN_);
       }
       function _eK_(param){
        var pattern_syntax_209 = param[3];
        return pattern_syntax_209;
       }
       var
        _eL_ = caml_call3(Bonsai[49][5][4], _a9_, pattern_syntax_208, _eK_),
        _eM_ = caml_call1(Bonsai[49][5][6], _eL_);
       return caml_call3(Bonsai[49][5][1], _a__, _eM_, _eJ_);
      }
      function _eG_(param){
       var pattern_syntax_210 = param[1];
       return pattern_syntax_210;
      }
      var
       _eH_ = caml_call3(Bonsai[49][5][4], _a$_, pattern_syntax_208, _eG_),
       _eI_ = caml_call1(Bonsai[49][5][6], _eH_);
      return caml_call3(Bonsai[49][5][1], _ba_, _eI_, _eF_);
     }
     function _eC_(param){
      var pattern_syntax_211 = param[2];
      return pattern_syntax_211;
     }
     var
      _eD_ = caml_call3(Bonsai[49][5][4], _bb_, pattern_syntax_208, _eC_),
      _eE_ = caml_call1(Bonsai[49][5][6], _eD_);
     return caml_call3(Bonsai[49][5][1], _bc_, _eE_, _eB_);
    }
    var
     _eA_ =
       with_inject
        (key,
         sentinel_name,
         enable_debug_overlay,
         extra_item_attrs,
         left,
         right,
         empty_list_placeholder,
         default_item_height,
         render);
    return caml_call3(Bonsai[49][5][1], _bd_, _eA_, _ez_);
   }
   var Action = [0];
   function with_inject$0
   (key,
    which,
    opt,
    enable_debug_overlay,
    extra_item_attrs,
    left,
    right,
    empty_list_placeholder,
    default_item_height,
    lists,
    render){
    if(opt)
     var sth = opt[1], sentinel_name = sth;
    else
     var sentinel_name = cst_dnd$0;
    var t_of_sexp = key[1], sexp_of_t = key[2], comparator = key[3];
    function equal(a, b){
     var _ey_ = caml_call2(comparator[1], a, b);
     return caml_call2(Core[90], _ey_, 0);
    }
    var
     t_of_sexp$0 = which[1],
     sexp_of_t$0 = which[2],
     comparator$0 = which[3];
    function equal$0(a, b){
     var _ex_ = caml_call2(comparator$0[1], a, b);
     return caml_call2(Core[90], _ex_, 0);
    }
    var
     sexp_of_t$1 = Core[149],
     Key = [0, t_of_sexp, sexp_of_t, comparator],
     Reorderable_list$0 = Reorderable_list(Key),
     empty = caml_call1(Core_Map[4], [0, comparator$0]);
    function apply_action(model, action){
     switch(action[0]){
       case 0:
        var
         target = action[3],
         target_which = action[2],
         source = action[1],
         _eu_ =
           function(list){
            return Reorderable_list$0[8].call(null, list, source);
           },
         t = caml_call2(Core_Map[57], model, _eu_),
         f =
           function(list){
            return Reorderable_list$0[6].call(null, list, source, target);
           },
         _et_ =
           function(param){
            if(! param) return f(Reorderable_list$0[5]);
            var list = param[1];
            return f(list);
           };
        return caml_call3(Core_Map[43], t, target_which, _et_);
       case 1:
        var
         source$0 = action[2],
         which = action[1],
         _ev_ =
           function(list){
            var
             list$0 = caml_call2(Core_Option[39], list, Reorderable_list$0[5]);
            return Reorderable_list$0[7].call(null, list$0, source$0);
           };
        return caml_call3(Core_Map[43], model, which, _ev_);
       case 2:
        var
         source$1 = action[1],
         _ew_ =
           function(list){
            return Reorderable_list$0[8].call(null, list, source$1);
           };
        return caml_call2(Core_Map[57], model, _ew_);
       default:
        var sources = action[1];
        return caml_call2(Core_Map[57], sources, Reorderable_list$0[4]);
     }
    }
    function _cp_(pattern_syntax_220){
     function _cv_(ranked_input){
      function _cz_(inject){
       function _cD_(dnd){
        function _cK_(source){
         function _cN_(rendered_ranked_input){
          function _de_(results){
           function _dQ_(sentinel){
            function _dT_(dragged_element){
             function _ee_(results){
              function _en_(param){
               var
                _er_ = param[2],
                match = _er_[2],
                inject = match[2],
                dragged_element = match[1],
                sentinel = _er_[1],
                results = param[1],
                _es_ = [0, [0, caml_call1(sentinel, sentinel_name), 0]],
                view =
                  caml_call3
                   (Virtual_dom_Node[17], 0, _es_, [0, dragged_element, 0]);
               return [0, results, view, inject];
              }
              var
               _eo_ = caml_call2(Bonsai[49][5][7], dragged_element, inject),
               _ep_ = caml_call2(Bonsai[49][5][7], sentinel, _eo_),
               _eq_ = caml_call2(Bonsai[49][5][7], results, _ep_);
              return caml_call3(Bonsai[49][5][8], _be_, _eq_, _en_);
             }
             function _ef_(key, data){
              function _eh_(param){
               var view = param[2], value = param[1];
               return [0, value, view];
              }
              function _ei_(param, _ek_){
               var
                new_for_cutoff_284 = _ek_[2],
                new_for_cutoff_286 = _ek_[1],
                old_for_cutoff_285 = param[2],
                old_for_cutoff_287 = param[1],
                _el_ = old_for_cutoff_287 === new_for_cutoff_286 ? 1 : 0,
                _em_ =
                  _el_
                   ? old_for_cutoff_285 === new_for_cutoff_284 ? 1 : 0
                   : _el_;
               return _em_;
              }
              var _ej_ = caml_call2(Bonsai[49][5][2], data, _ei_);
              return caml_call3(Bonsai[49][5][8], _bf_, _ej_, _eh_);
             }
             var
              _eg_ =
                caml_call3
                 (Bonsai[34], [0, sexp_of_t$0, comparator$0], results, _ef_);
             return caml_call3(Bonsai[49][5][1], _bg_, _eg_, _ee_);
            }
            function _dU_(target){
             function _dW_(result){
              function _d6_(pattern_syntax_281){
               function _d8_(param){
                if(0 === param){
                 var
                  _ea_ =
                    function(view){return caml_call1(Bonsai[49][1], view);},
                  _eb_ =
                    function(param){
                     if(! param)
                      throw caml_maybe_attach_backtrace
                             ([0, Assert_failure, _bh_], 1);
                     var pattern_syntax_282 = param[1][1][2];
                     return pattern_syntax_282;
                    },
                  _ec_ =
                    caml_call3(Bonsai[49][5][4], _bi_, pattern_syntax_281, _eb_),
                  _ed_ = caml_call1(Bonsai[49][5][6], _ec_);
                 return caml_call3(Bonsai[49][5][1], _bj_, _ed_, _ea_);
                }
                if(1 === param) return caml_call1(Bonsai[7], 0);
                throw caml_maybe_attach_backtrace
                       ([0, Assert_failure, _bk_], 1);
               }
               var _d9_ = 2;
               function _d__(param){return param ? 0 : 1;}
               var
                _d$_ =
                  caml_call3(Bonsai[49][5][4], 0, pattern_syntax_281, _d__);
               return caml_call4(Bonsai[49][5][3], _bl_, _d$_, _d9_, _d8_);
              }
              var _d7_ = caml_call1(Bonsai[49][5][6], result);
              return caml_call3(Bonsai[49][5][1], _bm_, _d7_, _d6_);
             }
             function _dX_(target_and_results){
              function _d0_(param){
               var pattern_syntax_276 = param[2];
               return pattern_syntax_276;
              }
              var
               results =
                 caml_call2(Ui_incr[78][4][6], target_and_results, _d0_);
              function _d1_(param){
               var pattern_syntax_277 = param[1];
               return pattern_syntax_277;
              }
              var
               source =
                 caml_call2(Ui_incr[78][4][6], target_and_results, _d1_);
              function _d2_(param){
               var results = param[2], source = param[1];
               function _d4_(param){
                var list = param[2][3];
                return caml_call2(Core_Map[44], list, source);
               }
               var _d5_ = caml_call2(Core_Map[81], 0, results);
               return caml_call2(Core_List[28], _d5_, _d4_);
              }
              var _d3_ = caml_call2(Ui_incr[78][4][21], source, results);
              return caml_call2(Ui_incr[78][4][6], _d3_, _d2_);
             }
             var
              _dY_ = caml_call2(Bonsai[2][3], target, results),
              _dZ_ = caml_call2(Bonsai[48][2], _dY_, _dX_);
             return caml_call3(Bonsai[49][5][1], _bn_, _dZ_, _dW_);
            }
            var _dV_ = caml_call2(Bonsai_web_ui_drag_and_drop[8], dnd, _dU_);
            return caml_call3(Bonsai[49][5][1], _bo_, _dV_, _dT_);
           }
           var
            _dR_ =
              caml_call2(Bonsai[49][2], dnd, Bonsai_web_ui_drag_and_drop[4]),
            _dS_ = caml_call1(Bonsai[49][1], _dR_);
           return caml_call3(Bonsai[49][5][1], _bp_, _dS_, _dQ_);
          }
          function _df_(which){
           function _dh_(rendered_ranked_input){
            function _dp_(input){
             function _dy_(dnd){
              function _dE_(view){
               function _dH_(value){
                var
                 _dP_ =
                   caml_call4
                    (Bonsai[2][13],
                     value,
                     view,
                     rendered_ranked_input,
                     Core_Tuple[2][5]);
                return caml_call1(Bonsai[49][1], _dP_);
               }
               function _dI_(rendered_ranked_input){
                function _dK_(param){
                 var extra = param[2][1][1], key = param[1];
                 return [0, key, extra];
                }
                function _dL_(a, b){
                 function _dO_(param){var rank = param[2][2]; return rank;}
                 return caml_call4
                         (Core_Comparable[2], Core_Int[88], _dO_, a, b);
                }
                var
                 _dM_ = caml_call2(Core_Map[81], 0, rendered_ranked_input),
                 _dN_ = caml_call2(Core_List[79], _dM_, _dL_);
                return caml_call2(Core_List[51], _dN_, _dK_);
               }
               var
                _dJ_ =
                  caml_call3
                   (Bonsai[49][5][8], _bq_, rendered_ranked_input, _dI_);
               return caml_call3(Bonsai[49][5][1], _br_, _dJ_, _dH_);
              }
              function _dF_(f, item_is_hovered){
               return caml_call2(f, item_is_hovered, which);
              }
              var
               _dG_ =
                 list
                  ([0, t_of_sexp, sexp_of_t, comparator],
                   dnd,
                   enable_debug_overlay,
                   extra_item_attrs,
                   left,
                   right,
                   caml_call2(Core_Option[34], empty_list_placeholder, _dF_),
                   default_item_height,
                   input);
              return caml_call3(Bonsai[49][5][1], _bs_, _dG_, _dE_);
             }
             function _dz_(param){
              var which = param[2], dnd = param[1];
              function _dC_(index){return [0, which, index];}
              function _dD_(param){
               var index = param[2], target_which = param[1];
               return equal$0(target_which, which) ? index : -1;
              }
              return caml_call3
                      (Bonsai_web_ui_drag_and_drop[2], dnd, _dD_, _dC_);
             }
             var
              _dA_ = caml_call2(Bonsai[49][5][7], dnd, which),
              _dB_ = caml_call3(Bonsai[49][5][8], _bt_, _dA_, _dz_);
             return caml_call3(Bonsai[49][5][1], _bu_, _dB_, _dy_);
            }
            function _dq_(param, data){
             function _ds_(param){
              var rank = param[2], view = param[1][2];
              return [0, view, rank];
             }
             function _dt_(param, _dv_){
              var
               new_for_cutoff_261 = _dv_[2],
               new_for_cutoff_263 = _dv_[1][2],
               old_for_cutoff_262 = param[2],
               old_for_cutoff_264 = param[1][2],
               _dw_ = old_for_cutoff_264 === new_for_cutoff_263 ? 1 : 0,
               _dx_ =
                 _dw_
                  ? old_for_cutoff_262 === new_for_cutoff_261 ? 1 : 0
                  : _dw_;
              return _dx_;
             }
             var _du_ = caml_call2(Bonsai[49][5][2], data, _dt_);
             return caml_call3(Bonsai[49][5][8], _bv_, _du_, _ds_);
            }
            var
             _dr_ =
               caml_call3
                (Bonsai[34],
                 [0, sexp_of_t, comparator],
                 rendered_ranked_input,
                 _dq_);
            return caml_call3(Bonsai[49][5][1], _bw_, _dr_, _dp_);
           }
           function _di_(which_and_map){
            function _dl_(param){
             var pattern_syntax_257 = param[2];
             return pattern_syntax_257;
            }
            var map = caml_call2(Ui_incr[78][4][6], which_and_map, _dl_);
            function _dm_(param){
             var pattern_syntax_258 = param[1];
             return pattern_syntax_258;
            }
            var which = caml_call2(Ui_incr[78][4][6], which_and_map, _dm_);
            function _dn_(current_which){
             function _do_(param){
              var
               match = param[2],
               index = match[2],
               which = match[1],
               data = param[1];
              return equal$0(which, current_which) ? [0, [0, data, index]] : 0;
             }
             return caml_call4(Incr_map[4], 0, 0, map, _do_);
            }
            return caml_call2(Ui_incr[78][4][1], which, _dn_);
           }
           var
            _dj_ = caml_call2(Bonsai[2][3], which, rendered_ranked_input),
            _dk_ = caml_call2(Bonsai[48][2], _dj_, _di_);
           return caml_call3(Bonsai[49][5][1], _bx_, _dk_, _dh_);
          }
          var
           _dg_ =
             caml_call3
              (Bonsai[35], [0, sexp_of_t$0, comparator$0], lists, _df_);
          return caml_call3(Bonsai[49][5][1], _by_, _dg_, _de_);
         }
         function _cO_(ranked_input){
          function _cY_(key, data){
           function _cZ_(source){
            function _c3_(pattern_syntax_251){
             function _c5_(which){
              function _c9_(index){
               function _db_(rendered){
                var _dd_ = caml_call2(Bonsai[2][3], rendered, data);
                return caml_call1(Bonsai[49][1], _dd_);
               }
               var _dc_ = caml_call4(render, index, source, which, key);
               return caml_call3(Bonsai[49][5][1], _bz_, _dc_, _db_);
              }
              function _c__(param){
               var pattern_syntax_252 = param[2];
               return pattern_syntax_252;
              }
              var
               _c$_ =
                 caml_call3(Bonsai[49][5][4], _bA_, pattern_syntax_251, _c__),
               _da_ = caml_call1(Bonsai[49][5][6], _c$_);
              return caml_call3(Bonsai[49][5][1], _bB_, _da_, _c9_);
             }
             function _c6_(param){
              var pattern_syntax_253 = param[1];
              return pattern_syntax_253;
             }
             var
              _c7_ =
                caml_call3(Bonsai[49][5][4], _bC_, pattern_syntax_251, _c6_),
              _c8_ = caml_call1(Bonsai[49][5][6], _c7_);
             return caml_call3(Bonsai[49][5][1], _bD_, _c8_, _c5_);
            }
            var _c4_ = caml_call1(Bonsai[49][1], data);
            return caml_call3(Bonsai[49][5][1], _bE_, _c4_, _c3_);
           }
           function _c0_(param){
            var source = param[2], key = param[1];
            return caml_call1(source, key);
           }
           var
            _c1_ = caml_call2(Bonsai[49][5][7], key, source),
            _c2_ = caml_call3(Bonsai[49][5][8], _bF_, _c1_, _c0_);
           return caml_call3(Bonsai[49][5][1], _bG_, _c2_, _cZ_);
          }
          return caml_call3
                  (Bonsai[34], [0, sexp_of_t, comparator], ranked_input, _cY_);
         }
         function _cP_(ranked_input){
          function _cS_(param, _cX_){var key = param[2]; return key;}
          var _cT_ = [0, comparator];
          function _cU_(param, data){
           var which = param[1];
           return [0, which, data];
          }
          var
           _cV_ =
             caml_call4(Incr_map[45], 0, 0, ranked_input, [0, comparator]),
           _cW_ = caml_call4(Incr_map[3], 0, 0, _cV_, _cU_);
          return caml_call5(Incr_map[40], 0, 0, _cW_, _cT_, _cS_);
         }
         var
          _cQ_ = caml_call2(Bonsai[48][2], ranked_input, _cP_),
          _cR_ = caml_call3(Bonsai[49][5][1], _bH_, _cQ_, _cO_);
         return caml_call3(Bonsai[49][5][1], _bI_, _cR_, _cN_);
        }
        var
         _cL_ = caml_call2(Bonsai[49][2], dnd, Bonsai_web_ui_drag_and_drop[3]),
         _cM_ = caml_call1(Bonsai[49][1], _cL_);
        return caml_call3(Bonsai[49][5][1], _bJ_, _cM_, _cK_);
       }
       function _cE_(inject, source, param){
        var target = param[2], target_which = param[1];
        return caml_call1(inject, [0, [0, source, target_which, target], 0]);
       }
       var _cF_ = caml_call3(Bonsai[49][5][4], 0, inject, _cE_);
       function equal$1(a_226, b_227){
        var
         t_229 = a_226[2],
         t_228 = a_226[1],
         t_231 = b_227[2],
         t_230 = b_227[1],
         _cJ_ = equal$0(t_228, t_230);
        return _cJ_ ? caml_call2(Core_Int[87], t_229, t_231) : _cJ_;
       }
       function t_of_sexp$1(sexp_237){
        if(1 === sexp_237[0]){
         var _cH_ = sexp_237[1];
         if(_cH_){
          var _cI_ = _cH_[2];
          if(_cI_ && ! _cI_[2]){
           var
            arg1_234 = _cI_[1],
            arg0_233 = _cH_[1],
            res0_235 = caml_call1(t_of_sexp$0, arg0_233),
            res1_236 = caml_call1(Core_Int[76], arg1_234);
           return [0, res0_235, res1_236];
          }
         }
        }
        return caml_call3
                (Sexplib0_Sexp_conv_error[4], error_source_238, 2, sexp_237);
       }
       function sexp_of_t$1(param){
        var
         arg1_240 = param[2],
         arg0_239 = param[1],
         res0_241 = caml_call1(sexp_of_t$0, arg0_239),
         res1_242 = caml_call1(Core_Int[77], arg1_240);
        return [1, [0, res0_241, [0, res1_242, 0]]];
       }
       var
        _cG_ =
          caml_call3
           (Bonsai_web_ui_drag_and_drop[7],
            [0, t_of_sexp, sexp_of_t, equal],
            [0, t_of_sexp$1, sexp_of_t$1, equal$1],
            _cF_);
       return caml_call3(Bonsai[49][5][1], _bK_, _cG_, _cD_);
      }
      function _cA_(param){
       var pattern_syntax_221 = param[2];
       return pattern_syntax_221;
      }
      var
       _cB_ = caml_call3(Bonsai[49][5][4], _bL_, pattern_syntax_220, _cA_),
       _cC_ = caml_call1(Bonsai[49][5][6], _cB_);
      return caml_call3(Bonsai[49][5][1], _bM_, _cC_, _cz_);
     }
     function _cw_(param){
      var pattern_syntax_222 = param[1];
      return pattern_syntax_222;
     }
     var
      _cx_ = caml_call3(Bonsai[49][5][4], _bN_, pattern_syntax_220, _cw_),
      _cy_ = caml_call1(Bonsai[49][5][6], _cx_);
     return caml_call3(Bonsai[49][5][1], _bO_, _cy_, _cv_);
    }
    var _cq_ = 0;
    function _cr_(param, model, actions){
     return caml_call3(Core_List[20], actions, model, apply_action);
    }
    var
     _cs_ =
       [0,
        function(a_223, b_224){
         function _cu_(a_218, b_219){
          return Reorderable_list$0[3].call(null, a_218, b_219);
         }
         return caml_call4(Core_Map[136], [0], _cu_, a_223, b_224);
        }],
     _ct_ =
       caml_call7(Bonsai[17], 0, 0, [0, sexp_of_t$1], _cs_, empty, _cr_, _cq_);
    return caml_call3(Bonsai[49][5][1], _bP_, _ct_, _cp_);
   }
   function simple$0
   (key,
    which,
    sentinel_name,
    enable_debug_overlay,
    extra_item_attrs,
    left,
    right,
    empty_list_placeholder,
    default_item_height,
    render,
    lists,
    default_list,
    input){
    function _b2_(pattern_syntax_294){
     function _b4_(view){
      function _b8_(value){
       function _ca_(inject){
        function _ce_(pattern_syntax_298){
         function _ck_(param){
          var _co_ = caml_call2(Bonsai[2][3], value, view);
          return caml_call1(Bonsai[49][1], _co_);
         }
         function _cl_(param){return 0;}
         var
          _cm_ = caml_call3(Bonsai[49][5][4], _bQ_, pattern_syntax_298, _cl_),
          _cn_ = caml_call1(Bonsai[49][5][6], _cm_);
         return caml_call3(Bonsai[49][5][1], _bR_, _cn_, _ck_);
        }
        function _cf_(add){
         function _cj_(key){return [2, key];}
         return sync_with_set
                 (key, input, inject, add, caml_call1(Bonsai[2][1], _cj_));
        }
        function _cg_(default_list, k){return [1, default_list, k];}
        var
         _ch_ = caml_call3(Bonsai[49][5][8], _bS_, default_list, _cg_),
         _ci_ = caml_call3(Bonsai[49][5][1], _bT_, _ch_, _cf_);
        return caml_call3(Bonsai[49][5][1], _bU_, _ci_, _ce_);
       }
       function _cb_(param){
        var pattern_syntax_295 = param[3];
        return pattern_syntax_295;
       }
       var
        _cc_ = caml_call3(Bonsai[49][5][4], _bV_, pattern_syntax_294, _cb_),
        _cd_ = caml_call1(Bonsai[49][5][6], _cc_);
       return caml_call3(Bonsai[49][5][1], _bW_, _cd_, _ca_);
      }
      function _b9_(param){
       var pattern_syntax_296 = param[1];
       return pattern_syntax_296;
      }
      var
       _b__ = caml_call3(Bonsai[49][5][4], _bX_, pattern_syntax_294, _b9_),
       _b$_ = caml_call1(Bonsai[49][5][6], _b__);
      return caml_call3(Bonsai[49][5][1], _bY_, _b$_, _b8_);
     }
     function _b5_(param){
      var pattern_syntax_297 = param[2];
      return pattern_syntax_297;
     }
     var
      _b6_ = caml_call3(Bonsai[49][5][4], _bZ_, pattern_syntax_294, _b5_),
      _b7_ = caml_call1(Bonsai[49][5][6], _b6_);
     return caml_call3(Bonsai[49][5][1], _b0_, _b7_, _b4_);
    }
    var
     _b3_ =
       with_inject$0
        (key,
         which,
         sentinel_name,
         enable_debug_overlay,
         extra_item_attrs,
         left,
         right,
         empty_list_placeholder,
         default_item_height,
         lists,
         render);
    return caml_call3(Bonsai[49][5][1], _b1_, _b3_, _b2_);
   }
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_reorderable_);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_reorderable_);
   var
    Bonsai_web_ui_reorderable_list =
      [0,
       list,
       simple,
       [0, sexp_of_item, item_of_sexp, t_of_sexp, sexp_of_t],
       with_inject,
       [0, simple$0, Action, with_inject$0]];
   runtime.caml_register_global
    (250, Bonsai_web_ui_reorderable_list, cst_Bonsai_web_ui_reorderable_$0);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
