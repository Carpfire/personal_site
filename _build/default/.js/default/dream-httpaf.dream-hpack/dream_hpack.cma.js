// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Dream_hpack
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, Dream_hpack = [0];
   runtime.caml_register_global(0, Dream_hpack, "Dream_hpack");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Dream_hpack__Types
(function(globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, Dream_hpack_Types = [0];
   runtime.caml_register_global(0, Dream_hpack_Types, "Dream_hpack__Types");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Dream_hpack__Static_table
(function(globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst = "",
    cst_authority = ":authority",
    cst_method = ":method",
    cst_path = ":path",
    cst_scheme = ":scheme",
    cst_status = ":status",
    cst_accept = "accept",
    cst_accept_charset = "accept-charset",
    cst_accept_encoding = "accept-encoding",
    cst_accept_language = "accept-language",
    cst_accept_ranges = "accept-ranges",
    cst_access_control_allow_origi = "access-control-allow-origin",
    cst_age = "age",
    cst_allow = "allow",
    cst_authorization = "authorization",
    cst_cache_control = "cache-control",
    cst_content_disposition = "content-disposition",
    cst_content_encoding = "content-encoding",
    cst_content_language = "content-language",
    cst_content_length = "content-length",
    cst_content_location = "content-location",
    cst_content_range = "content-range",
    cst_content_type = "content-type",
    cst_cookie = "cookie",
    cst_date = "date",
    cst_etag = "etag",
    cst_expect = "expect",
    cst_expires = "expires",
    cst_from = "from",
    cst_host = "host",
    cst_if_match = "if-match",
    cst_if_modified_since = "if-modified-since",
    cst_if_none_match = "if-none-match",
    cst_if_range = "if-range",
    cst_if_unmodified_since = "if-unmodified-since",
    cst_last_modified = "last-modified",
    cst_link = "link",
    cst_location = "location",
    cst_max_forwards = "max-forwards",
    cst_proxy_authenticate = "proxy-authenticate",
    cst_proxy_authorization = "proxy-authorization",
    cst_range = "range",
    cst_referer = "referer",
    cst_refresh = "refresh",
    cst_retry_after = "retry-after",
    cst_server = "server",
    cst_set_cookie = "set-cookie",
    cst_strict_transport_security = "strict-transport-security",
    cst_transfer_encoding = "transfer-encoding",
    cst_user_agent = "user-agent",
    cst_vary = "vary",
    cst_via = "via",
    cst_www_authenticate = "www-authenticate",
    caml_string_equal = runtime.caml_string_equal,
    caml_string_get = runtime.caml_string_get,
    TokenIndices =
      [0,
       0,
       1,
       3,
       5,
       7,
       14,
       15,
       16,
       17,
       18,
       19,
       20,
       21,
       22,
       23,
       24,
       25,
       26,
       27,
       28,
       29,
       30,
       31,
       32,
       33,
       34,
       35,
       36,
       37,
       38,
       39,
       40,
       41,
       42,
       43,
       44,
       45,
       46,
       47,
       48,
       49,
       50,
       51,
       52,
       53,
       54,
       55,
       56,
       57,
       58,
       59,
       60],
    table =
      [0,
        [0, cst_authority, cst],
        [0, cst_method, "GET"],
        [0, cst_method, "POST"],
        [0, cst_path, "/"],
        [0, cst_path, "/index.html"],
        [0, cst_scheme, "http"],
        [0, cst_scheme, "https"],
        [0, cst_status, "200"],
        [0, cst_status, "204"],
        [0, cst_status, "206"],
        [0, cst_status, "304"],
        [0, cst_status, "400"],
        [0, cst_status, "404"],
        [0, cst_status, "500"],
        [0, cst_accept_charset, cst],
        [0, cst_accept_encoding, "gzip, deflate"],
        [0, cst_accept_language, cst],
        [0, cst_accept_ranges, cst],
        [0, cst_accept, cst],
        [0, cst_access_control_allow_origi, cst],
        [0, cst_age, cst],
        [0, cst_allow, cst],
        [0, cst_authorization, cst],
        [0, cst_cache_control, cst],
        [0, cst_content_disposition, cst],
        [0, cst_content_encoding, cst],
        [0, cst_content_language, cst],
        [0, cst_content_length, cst],
        [0, cst_content_location, cst],
        [0, cst_content_range, cst],
        [0, cst_content_type, cst],
        [0, cst_cookie, cst],
        [0, cst_date, cst],
        [0, cst_etag, cst],
        [0, cst_expect, cst],
        [0, cst_expires, cst],
        [0, cst_from, cst],
        [0, cst_host, cst],
        [0, cst_if_match, cst],
        [0, cst_if_modified_since, cst],
        [0, cst_if_none_match, cst],
        [0, cst_if_range, cst],
        [0, cst_if_unmodified_since, cst],
        [0, cst_last_modified, cst],
        [0, cst_link, cst],
        [0, cst_location, cst],
        [0, cst_max_forwards, cst],
        [0, cst_proxy_authenticate, cst],
        [0, cst_proxy_authorization, cst],
        [0, cst_range, cst],
        [0, cst_referer, cst],
        [0, cst_refresh, cst],
        [0, cst_retry_after, cst],
        [0, cst_server, cst],
        [0, cst_set_cookie, cst],
        [0, cst_strict_transport_security, cst],
        [0, cst_transfer_encoding, cst],
        [0, cst_user_agent, cst],
        [0, cst_vary, cst],
        [0, cst_via, cst],
        [0, cst_www_authenticate, cst]].slice
       (),
    table_size = 61;
   function lookup_token_index(name){
    var switcher = runtime.caml_ml_string_length(name) - 3 | 0;
    if(24 >= switcher >>> 0)
     switch(switcher){
       case 0:
        var match = caml_string_get(name, 0);
        if(97 === match){
         if(caml_string_equal(name, cst_age)) return 20;
        }
        else if(118 === match && caml_string_equal(name, cst_via)) return 59;
        return -1;
       case 1:
        var switcher$0 = caml_string_get(name, 0) - 100 | 0;
        if(18 >= switcher$0 >>> 0)
         switch(switcher$0){
           case 0:
            if(caml_string_equal(name, cst_date)) return 32; break;
           case 1:
            if(caml_string_equal(name, cst_etag)) return 33; break;
           case 2:
            if(caml_string_equal(name, cst_from)) return 36; break;
           case 4:
            if(caml_string_equal(name, cst_host)) return 37; break;
           case 8:
            if(caml_string_equal(name, cst_link)) return 44; break;
           case 18:
            if(caml_string_equal(name, cst_vary)) return 58; break;
         }
        return -1;
       case 2:
        var match$0 = caml_string_get(name, 0);
        if(58 === match$0){
         if(caml_string_equal(name, cst_path)) return 3;
        }
        else
         if(97 === match$0){
          if(caml_string_equal(name, cst_allow)) return 21;
         }
         else if(114 === match$0 && caml_string_equal(name, cst_range))
          return 49;
        return -1;
       case 3:
        var match$1 = caml_string_get(name, 0);
        if(102 <= match$1){
         if(115 === match$1 && caml_string_equal(name, cst_server)) return 53;
        }
        else if(97 <= match$1)
         switch(match$1 - 97 | 0){
           case 0:
            if(caml_string_equal(name, cst_accept)) return 18; break;
           case 2:
            if(caml_string_equal(name, cst_cookie)) return 31; break;
           case 4:
            if(caml_string_equal(name, cst_expect)) return 34; break;
         }
        return -1;
       case 4:
        var switcher$1 = caml_string_get(name, 3) - 97 | 0;
        if(19 >= switcher$1 >>> 0)
         switch(switcher$1){
           case 0:
            if(caml_string_equal(name, cst_status)) return 7; break;
           case 4:
            if(caml_string_equal(name, cst_referer)) return 50; break;
           case 7:
            if(caml_string_equal(name, cst_scheme)) return 5; break;
           case 8:
            if(caml_string_equal(name, cst_expires)) return 35; break;
           case 17:
            if(caml_string_equal(name, cst_refresh)) return 51; break;
           case 19:
            if(caml_string_equal(name, cst_method)) return 1; break;
         }
        return -1;
       case 5:
        var match$2 = caml_string_get(name, 3);
        if(97 === match$2){
         if(caml_string_equal(name, cst_location)) return 45;
        }
        else
         if(109 === match$2){
          if(caml_string_equal(name, cst_if_match)) return 38;
         }
         else if(114 === match$2 && caml_string_equal(name, cst_if_range))
          return 41;
        return -1;
       case 7:
        var match$3 = caml_string_get(name, 0);
        if(115 <= match$3){
         if(118 > match$3)
          switch(match$3 - 115 | 0){
            case 0:
             if(caml_string_equal(name, cst_set_cookie)) return 54; break;
            case 1: break;
            default: if(caml_string_equal(name, cst_user_agent)) return 57;
          }
        }
        else if(58 === match$3 && caml_string_equal(name, cst_authority))
         return 0;
        return -1;
       case 8:
        if
         (114 === caml_string_get(name, 0)
          && caml_string_equal(name, cst_retry_after))
         return 52;
        return -1;
       case 9:
        var match$4 = caml_string_get(name, 0);
        if(99 === match$4){
         if(caml_string_equal(name, cst_content_type)) return 30;
        }
        else if(109 === match$4 && caml_string_equal(name, cst_max_forwards))
         return 46;
        return -1;
       case 10:
        var match$5 = caml_string_get(name, 6);
        if(99 <= match$5){
         if(117 > match$5)
          switch(match$5 - 99 | 0){
            case 0:
             if(caml_string_equal(name, cst_cache_control)) return 23; break;
            case 2:
             if(caml_string_equal(name, cst_if_none_match)) return 40; break;
            case 6:
             if(caml_string_equal(name, cst_authorization)) return 22; break;
            case 12:
             if(caml_string_equal(name, cst_last_modified)) return 43; break;
            case 17:
             if(caml_string_equal(name, cst_content_range)) return 29; break;
          }
        }
        else if(45 === match$5 && caml_string_equal(name, cst_accept_ranges))
         return 17;
        return -1;
       case 11:
        var switcher$2 = caml_string_get(name, 0) - 97 | 0;
        if(2 >= switcher$2 >>> 0)
         switch(switcher$2){
           case 0:
            if(caml_string_equal(name, cst_accept_charset)) return 14; break;
           case 1: break;
           default: if(caml_string_equal(name, cst_content_length)) return 27;
         }
        return -1;
       case 12:
        var match$6 = caml_string_get(name, 7);
        if(101 === match$6){
         if(caml_string_equal(name, cst_accept_encoding)) return 15;
        }
        else if
         (108 === match$6 && caml_string_equal(name, cst_accept_language))
         return 16;
        return -1;
       case 13:
        var switcher$3 = caml_string_get(name, 11) - 97 | 0;
        if(14 >= switcher$3 >>> 0)
         switch(switcher$3){
           case 0:
            if(caml_string_equal(name, cst_content_location)) return 28;
            break;
           case 6:
            if(caml_string_equal(name, cst_content_language)) return 26;
            break;
           case 8:
            if(caml_string_equal(name, cst_www_authenticate)) return 60;
            break;
           case 14:
            if(caml_string_equal(name, cst_content_encoding)) return 25;
            break;
         }
        return -1;
       case 14:
        var match$7 = caml_string_get(name, 0);
        if(105 === match$7){
         if(caml_string_equal(name, cst_if_modified_since)) return 39;
        }
        else if
         (116 === match$7 && caml_string_equal(name, cst_transfer_encoding))
         return 56;
        return -1;
       case 15:
        if
         (112 === caml_string_get(name, 0)
          && caml_string_equal(name, cst_proxy_authenticate))
         return 47;
        return -1;
       case 16:
        var match$8 = caml_string_get(name, 0);
        if(99 === match$8){
         if(caml_string_equal(name, cst_content_disposition)) return 24;
        }
        else
         if(105 === match$8){
          if(caml_string_equal(name, cst_if_unmodified_since)) return 42;
         }
         else if
          (112 === match$8 && caml_string_equal(name, cst_proxy_authorization))
          return 48;
        return -1;
       case 22:
        if
         (115 === caml_string_get(name, 0)
          && caml_string_equal(name, cst_strict_transport_security))
         return 55;
        return -1;
       case 24:
        if
         (97 === caml_string_get(name, 0)
          && caml_string_equal(name, cst_access_control_allow_origi))
         return 19;
        return -1;
     }
    return -1;
   }
   var
    Dream_hpack_Static_table =
      [0, TokenIndices, table_size, table, lookup_token_index];
   runtime.caml_register_global
    (53, Dream_hpack_Static_table, "Dream_hpack__Static_table");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Dream_hpack__Huffman_table
(function(globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    encode_table =
      [0,
        [0, 8184, 13],
        [0, 8388568, 23],
        [0, 268435426, 28],
        [0, 268435427, 28],
        [0, 268435428, 28],
        [0, 268435429, 28],
        [0, 268435430, 28],
        [0, 268435431, 28],
        [0, 268435432, 28],
        [0, 16777194, 24],
        [0, 1073741820, 30],
        [0, 268435433, 28],
        [0, 268435434, 28],
        [0, 1073741821, 30],
        [0, 268435435, 28],
        [0, 268435436, 28],
        [0, 268435437, 28],
        [0, 268435438, 28],
        [0, 268435439, 28],
        [0, 268435440, 28],
        [0, 268435441, 28],
        [0, 268435442, 28],
        [0, 1073741822, 30],
        [0, 268435443, 28],
        [0, 268435444, 28],
        [0, 268435445, 28],
        [0, 268435446, 28],
        [0, 268435447, 28],
        [0, 268435448, 28],
        [0, 268435449, 28],
        [0, 268435450, 28],
        [0, 268435451, 28],
        [0, 20, 6],
        [0, 1016, 10],
        [0, 1017, 10],
        [0, 4090, 12],
        [0, 8185, 13],
        [0, 21, 6],
        [0, 248, 8],
        [0, 2042, 11],
        [0, 1018, 10],
        [0, 1019, 10],
        [0, 249, 8],
        [0, 2043, 11],
        [0, 250, 8],
        [0, 22, 6],
        [0, 23, 6],
        [0, 24, 6],
        [0, 0, 5],
        [0, 1, 5],
        [0, 2, 5],
        [0, 25, 6],
        [0, 26, 6],
        [0, 27, 6],
        [0, 28, 6],
        [0, 29, 6],
        [0, 30, 6],
        [0, 31, 6],
        [0, 92, 7],
        [0, 251, 8],
        [0, 32764, 15],
        [0, 32, 6],
        [0, 4091, 12],
        [0, 1020, 10],
        [0, 8186, 13],
        [0, 33, 6],
        [0, 93, 7],
        [0, 94, 7],
        [0, 95, 7],
        [0, 96, 7],
        [0, 97, 7],
        [0, 98, 7],
        [0, 99, 7],
        [0, 100, 7],
        [0, 101, 7],
        [0, 102, 7],
        [0, 103, 7],
        [0, 104, 7],
        [0, 105, 7],
        [0, 106, 7],
        [0, 107, 7],
        [0, 108, 7],
        [0, 109, 7],
        [0, 110, 7],
        [0, 111, 7],
        [0, 112, 7],
        [0, 113, 7],
        [0, 114, 7],
        [0, 252, 8],
        [0, 115, 7],
        [0, 253, 8],
        [0, 8187, 13],
        [0, 524272, 19],
        [0, 8188, 13],
        [0, 16380, 14],
        [0, 34, 6],
        [0, 32765, 15],
        [0, 3, 5],
        [0, 35, 6],
        [0, 4, 5],
        [0, 36, 6],
        [0, 5, 5],
        [0, 37, 6],
        [0, 38, 6],
        [0, 39, 6],
        [0, 6, 5],
        [0, 116, 7],
        [0, 117, 7],
        [0, 40, 6],
        [0, 41, 6],
        [0, 42, 6],
        [0, 7, 5],
        [0, 43, 6],
        [0, 118, 7],
        [0, 44, 6],
        [0, 8, 5],
        [0, 9, 5],
        [0, 45, 6],
        [0, 119, 7],
        [0, 120, 7],
        [0, 121, 7],
        [0, 122, 7],
        [0, 123, 7],
        [0, 32766, 15],
        [0, 2044, 11],
        [0, 16381, 14],
        [0, 8189, 13],
        [0, 268435452, 28],
        [0, 1048550, 20],
        [0, 4194258, 22],
        [0, 1048551, 20],
        [0, 1048552, 20],
        [0, 4194259, 22],
        [0, 4194260, 22],
        [0, 4194261, 22],
        [0, 8388569, 23],
        [0, 4194262, 22],
        [0, 8388570, 23],
        [0, 8388571, 23],
        [0, 8388572, 23],
        [0, 8388573, 23],
        [0, 8388574, 23],
        [0, 16777195, 24],
        [0, 8388575, 23],
        [0, 16777196, 24],
        [0, 16777197, 24],
        [0, 4194263, 22],
        [0, 8388576, 23],
        [0, 16777198, 24],
        [0, 8388577, 23],
        [0, 8388578, 23],
        [0, 8388579, 23],
        [0, 8388580, 23],
        [0, 2097116, 21],
        [0, 4194264, 22],
        [0, 8388581, 23],
        [0, 4194265, 22],
        [0, 8388582, 23],
        [0, 8388583, 23],
        [0, 16777199, 24],
        [0, 4194266, 22],
        [0, 2097117, 21],
        [0, 1048553, 20],
        [0, 4194267, 22],
        [0, 4194268, 22],
        [0, 8388584, 23],
        [0, 8388585, 23],
        [0, 2097118, 21],
        [0, 8388586, 23],
        [0, 4194269, 22],
        [0, 4194270, 22],
        [0, 16777200, 24],
        [0, 2097119, 21],
        [0, 4194271, 22],
        [0, 8388587, 23],
        [0, 8388588, 23],
        [0, 2097120, 21],
        [0, 2097121, 21],
        [0, 4194272, 22],
        [0, 2097122, 21],
        [0, 8388589, 23],
        [0, 4194273, 22],
        [0, 8388590, 23],
        [0, 8388591, 23],
        [0, 1048554, 20],
        [0, 4194274, 22],
        [0, 4194275, 22],
        [0, 4194276, 22],
        [0, 8388592, 23],
        [0, 4194277, 22],
        [0, 4194278, 22],
        [0, 8388593, 23],
        [0, 67108832, 26],
        [0, 67108833, 26],
        [0, 1048555, 20],
        [0, 524273, 19],
        [0, 4194279, 22],
        [0, 8388594, 23],
        [0, 4194280, 22],
        [0, 33554412, 25],
        [0, 67108834, 26],
        [0, 67108835, 26],
        [0, 67108836, 26],
        [0, 134217694, 27],
        [0, 134217695, 27],
        [0, 67108837, 26],
        [0, 16777201, 24],
        [0, 33554413, 25],
        [0, 524274, 19],
        [0, 2097123, 21],
        [0, 67108838, 26],
        [0, 134217696, 27],
        [0, 134217697, 27],
        [0, 67108839, 26],
        [0, 134217698, 27],
        [0, 16777202, 24],
        [0, 2097124, 21],
        [0, 2097125, 21],
        [0, 67108840, 26],
        [0, 67108841, 26],
        [0, 268435453, 28],
        [0, 134217699, 27],
        [0, 134217700, 27],
        [0, 134217701, 27],
        [0, 1048556, 20],
        [0, 16777203, 24],
        [0, 1048557, 20],
        [0, 2097126, 21],
        [0, 4194281, 22],
        [0, 2097127, 21],
        [0, 2097128, 21],
        [0, 8388595, 23],
        [0, 4194282, 22],
        [0, 4194283, 22],
        [0, 33554414, 25],
        [0, 33554415, 25],
        [0, 16777204, 24],
        [0, 16777205, 24],
        [0, 67108842, 26],
        [0, 8388596, 23],
        [0, 67108843, 26],
        [0, 134217702, 27],
        [0, 67108844, 26],
        [0, 67108845, 26],
        [0, 134217703, 27],
        [0, 134217704, 27],
        [0, 134217705, 27],
        [0, 134217706, 27],
        [0, 134217707, 27],
        [0, 268435454, 28],
        [0, 134217708, 27],
        [0, 134217709, 27],
        [0, 134217710, 27],
        [0, 134217711, 27],
        [0, 134217712, 27],
        [0, 67108846, 26]].slice
       (),
    decode_table =
      [0,
        [0, 4, 0, 0],
        [0, 5, 0, 0],
        [0, 7, 0, 0],
        [0, 8, 0, 0],
        [0, 11, 0, 0],
        [0, 12, 0, 0],
        [0, 16, 0, 0],
        [0, 19, 0, 0],
        [0, 25, 0, 0],
        [0, 28, 0, 0],
        [0, 32, 0, 0],
        [0, 35, 0, 0],
        [0, 42, 0, 0],
        [0, 49, 0, 0],
        [0, 57, 0, 0],
        [0, 64, 1, 0],
        [0, 0, 1, 48],
        [0, 0, 1, 49],
        [0, 0, 1, 50],
        [0, 0, 1, 97],
        [0, 0, 1, 99],
        [0, 0, 1, 101],
        [0, 0, 1, 105],
        [0, 0, 1, 111],
        [0, 0, 1, 115],
        [0, 0, 1, 116],
        [0, 13, 0, 0],
        [0, 14, 0, 0],
        [0, 17, 0, 0],
        [0, 18, 0, 0],
        [0, 20, 0, 0],
        [0, 21, 0, 0],
        [0, 1, 0, 48],
        [0, 22, 1, 48],
        [0, 1, 0, 49],
        [0, 22, 1, 49],
        [0, 1, 0, 50],
        [0, 22, 1, 50],
        [0, 1, 0, 97],
        [0, 22, 1, 97],
        [0, 1, 0, 99],
        [0, 22, 1, 99],
        [0, 1, 0, 101],
        [0, 22, 1, 101],
        [0, 1, 0, 105],
        [0, 22, 1, 105],
        [0, 1, 0, 111],
        [0, 22, 1, 111],
        [0, 2, 0, 48],
        [0, 9, 0, 48],
        [0, 23, 0, 48],
        [0, 40, 1, 48],
        [0, 2, 0, 49],
        [0, 9, 0, 49],
        [0, 23, 0, 49],
        [0, 40, 1, 49],
        [0, 2, 0, 50],
        [0, 9, 0, 50],
        [0, 23, 0, 50],
        [0, 40, 1, 50],
        [0, 2, 0, 97],
        [0, 9, 0, 97],
        [0, 23, 0, 97],
        [0, 40, 1, 97],
        [0, 3, 0, 48],
        [0, 6, 0, 48],
        [0, 10, 0, 48],
        [0, 15, 0, 48],
        [0, 24, 0, 48],
        [0, 31, 0, 48],
        [0, 41, 0, 48],
        [0, 56, 1, 48],
        [0, 3, 0, 49],
        [0, 6, 0, 49],
        [0, 10, 0, 49],
        [0, 15, 0, 49],
        [0, 24, 0, 49],
        [0, 31, 0, 49],
        [0, 41, 0, 49],
        [0, 56, 1, 49],
        [0, 3, 0, 50],
        [0, 6, 0, 50],
        [0, 10, 0, 50],
        [0, 15, 0, 50],
        [0, 24, 0, 50],
        [0, 31, 0, 50],
        [0, 41, 0, 50],
        [0, 56, 1, 50],
        [0, 3, 0, 97],
        [0, 6, 0, 97],
        [0, 10, 0, 97],
        [0, 15, 0, 97],
        [0, 24, 0, 97],
        [0, 31, 0, 97],
        [0, 41, 0, 97],
        [0, 56, 1, 97],
        [0, 2, 0, 99],
        [0, 9, 0, 99],
        [0, 23, 0, 99],
        [0, 40, 1, 99],
        [0, 2, 0, 101],
        [0, 9, 0, 101],
        [0, 23, 0, 101],
        [0, 40, 1, 101],
        [0, 2, 0, 105],
        [0, 9, 0, 105],
        [0, 23, 0, 105],
        [0, 40, 1, 105],
        [0, 2, 0, 111],
        [0, 9, 0, 111],
        [0, 23, 0, 111],
        [0, 40, 1, 111],
        [0, 3, 0, 99],
        [0, 6, 0, 99],
        [0, 10, 0, 99],
        [0, 15, 0, 99],
        [0, 24, 0, 99],
        [0, 31, 0, 99],
        [0, 41, 0, 99],
        [0, 56, 1, 99],
        [0, 3, 0, 101],
        [0, 6, 0, 101],
        [0, 10, 0, 101],
        [0, 15, 0, 101],
        [0, 24, 0, 101],
        [0, 31, 0, 101],
        [0, 41, 0, 101],
        [0, 56, 1, 101],
        [0, 3, 0, 105],
        [0, 6, 0, 105],
        [0, 10, 0, 105],
        [0, 15, 0, 105],
        [0, 24, 0, 105],
        [0, 31, 0, 105],
        [0, 41, 0, 105],
        [0, 56, 1, 105],
        [0, 3, 0, 111],
        [0, 6, 0, 111],
        [0, 10, 0, 111],
        [0, 15, 0, 111],
        [0, 24, 0, 111],
        [0, 31, 0, 111],
        [0, 41, 0, 111],
        [0, 56, 1, 111],
        [0, 1, 0, 115],
        [0, 22, 1, 115],
        [0, 1, 0, 116],
        [0, 22, 1, 116],
        [0, 0, 1, 32],
        [0, 0, 1, 37],
        [0, 0, 1, 45],
        [0, 0, 1, 46],
        [0, 0, 1, 47],
        [0, 0, 1, 51],
        [0, 0, 1, 52],
        [0, 0, 1, 53],
        [0, 0, 1, 54],
        [0, 0, 1, 55],
        [0, 0, 1, 56],
        [0, 0, 1, 57],
        [0, 2, 0, 115],
        [0, 9, 0, 115],
        [0, 23, 0, 115],
        [0, 40, 1, 115],
        [0, 2, 0, 116],
        [0, 9, 0, 116],
        [0, 23, 0, 116],
        [0, 40, 1, 116],
        [0, 1, 0, 32],
        [0, 22, 1, 32],
        [0, 1, 0, 37],
        [0, 22, 1, 37],
        [0, 1, 0, 45],
        [0, 22, 1, 45],
        [0, 1, 0, 46],
        [0, 22, 1, 46],
        [0, 3, 0, 115],
        [0, 6, 0, 115],
        [0, 10, 0, 115],
        [0, 15, 0, 115],
        [0, 24, 0, 115],
        [0, 31, 0, 115],
        [0, 41, 0, 115],
        [0, 56, 1, 115],
        [0, 3, 0, 116],
        [0, 6, 0, 116],
        [0, 10, 0, 116],
        [0, 15, 0, 116],
        [0, 24, 0, 116],
        [0, 31, 0, 116],
        [0, 41, 0, 116],
        [0, 56, 1, 116],
        [0, 2, 0, 32],
        [0, 9, 0, 32],
        [0, 23, 0, 32],
        [0, 40, 1, 32],
        [0, 2, 0, 37],
        [0, 9, 0, 37],
        [0, 23, 0, 37],
        [0, 40, 1, 37],
        [0, 2, 0, 45],
        [0, 9, 0, 45],
        [0, 23, 0, 45],
        [0, 40, 1, 45],
        [0, 2, 0, 46],
        [0, 9, 0, 46],
        [0, 23, 0, 46],
        [0, 40, 1, 46],
        [0, 3, 0, 32],
        [0, 6, 0, 32],
        [0, 10, 0, 32],
        [0, 15, 0, 32],
        [0, 24, 0, 32],
        [0, 31, 0, 32],
        [0, 41, 0, 32],
        [0, 56, 1, 32],
        [0, 3, 0, 37],
        [0, 6, 0, 37],
        [0, 10, 0, 37],
        [0, 15, 0, 37],
        [0, 24, 0, 37],
        [0, 31, 0, 37],
        [0, 41, 0, 37],
        [0, 56, 1, 37],
        [0, 3, 0, 45],
        [0, 6, 0, 45],
        [0, 10, 0, 45],
        [0, 15, 0, 45],
        [0, 24, 0, 45],
        [0, 31, 0, 45],
        [0, 41, 0, 45],
        [0, 56, 1, 45],
        [0, 3, 0, 46],
        [0, 6, 0, 46],
        [0, 10, 0, 46],
        [0, 15, 0, 46],
        [0, 24, 0, 46],
        [0, 31, 0, 46],
        [0, 41, 0, 46],
        [0, 56, 1, 46],
        [0, 1, 0, 47],
        [0, 22, 1, 47],
        [0, 1, 0, 51],
        [0, 22, 1, 51],
        [0, 1, 0, 52],
        [0, 22, 1, 52],
        [0, 1, 0, 53],
        [0, 22, 1, 53],
        [0, 1, 0, 54],
        [0, 22, 1, 54],
        [0, 1, 0, 55],
        [0, 22, 1, 55],
        [0, 1, 0, 56],
        [0, 22, 1, 56],
        [0, 1, 0, 57],
        [0, 22, 1, 57],
        [0, 2, 0, 47],
        [0, 9, 0, 47],
        [0, 23, 0, 47],
        [0, 40, 1, 47],
        [0, 2, 0, 51],
        [0, 9, 0, 51],
        [0, 23, 0, 51],
        [0, 40, 1, 51],
        [0, 2, 0, 52],
        [0, 9, 0, 52],
        [0, 23, 0, 52],
        [0, 40, 1, 52],
        [0, 2, 0, 53],
        [0, 9, 0, 53],
        [0, 23, 0, 53],
        [0, 40, 1, 53],
        [0, 3, 0, 47],
        [0, 6, 0, 47],
        [0, 10, 0, 47],
        [0, 15, 0, 47],
        [0, 24, 0, 47],
        [0, 31, 0, 47],
        [0, 41, 0, 47],
        [0, 56, 1, 47],
        [0, 3, 0, 51],
        [0, 6, 0, 51],
        [0, 10, 0, 51],
        [0, 15, 0, 51],
        [0, 24, 0, 51],
        [0, 31, 0, 51],
        [0, 41, 0, 51],
        [0, 56, 1, 51],
        [0, 3, 0, 52],
        [0, 6, 0, 52],
        [0, 10, 0, 52],
        [0, 15, 0, 52],
        [0, 24, 0, 52],
        [0, 31, 0, 52],
        [0, 41, 0, 52],
        [0, 56, 1, 52],
        [0, 3, 0, 53],
        [0, 6, 0, 53],
        [0, 10, 0, 53],
        [0, 15, 0, 53],
        [0, 24, 0, 53],
        [0, 31, 0, 53],
        [0, 41, 0, 53],
        [0, 56, 1, 53],
        [0, 2, 0, 54],
        [0, 9, 0, 54],
        [0, 23, 0, 54],
        [0, 40, 1, 54],
        [0, 2, 0, 55],
        [0, 9, 0, 55],
        [0, 23, 0, 55],
        [0, 40, 1, 55],
        [0, 2, 0, 56],
        [0, 9, 0, 56],
        [0, 23, 0, 56],
        [0, 40, 1, 56],
        [0, 2, 0, 57],
        [0, 9, 0, 57],
        [0, 23, 0, 57],
        [0, 40, 1, 57],
        [0, 3, 0, 54],
        [0, 6, 0, 54],
        [0, 10, 0, 54],
        [0, 15, 0, 54],
        [0, 24, 0, 54],
        [0, 31, 0, 54],
        [0, 41, 0, 54],
        [0, 56, 1, 54],
        [0, 3, 0, 55],
        [0, 6, 0, 55],
        [0, 10, 0, 55],
        [0, 15, 0, 55],
        [0, 24, 0, 55],
        [0, 31, 0, 55],
        [0, 41, 0, 55],
        [0, 56, 1, 55],
        [0, 3, 0, 56],
        [0, 6, 0, 56],
        [0, 10, 0, 56],
        [0, 15, 0, 56],
        [0, 24, 0, 56],
        [0, 31, 0, 56],
        [0, 41, 0, 56],
        [0, 56, 1, 56],
        [0, 3, 0, 57],
        [0, 6, 0, 57],
        [0, 10, 0, 57],
        [0, 15, 0, 57],
        [0, 24, 0, 57],
        [0, 31, 0, 57],
        [0, 41, 0, 57],
        [0, 56, 1, 57],
        [0, 26, 0, 0],
        [0, 27, 0, 0],
        [0, 29, 0, 0],
        [0, 30, 0, 0],
        [0, 33, 0, 0],
        [0, 34, 0, 0],
        [0, 36, 0, 0],
        [0, 37, 0, 0],
        [0, 43, 0, 0],
        [0, 46, 0, 0],
        [0, 50, 0, 0],
        [0, 53, 0, 0],
        [0, 58, 0, 0],
        [0, 61, 0, 0],
        [0, 65, 0, 0],
        [0, 68, 1, 0],
        [0, 0, 1, 61],
        [0, 0, 1, 65],
        [0, 0, 1, 95],
        [0, 0, 1, 98],
        [0, 0, 1, 100],
        [0, 0, 1, 102],
        [0, 0, 1, 103],
        [0, 0, 1, 104],
        [0, 0, 1, 108],
        [0, 0, 1, 109],
        [0, 0, 1, 110],
        [0, 0, 1, 112],
        [0, 0, 1, 114],
        [0, 0, 1, 117],
        [0, 38, 0, 0],
        [0, 39, 0, 0],
        [0, 1, 0, 61],
        [0, 22, 1, 61],
        [0, 1, 0, 65],
        [0, 22, 1, 65],
        [0, 1, 0, 95],
        [0, 22, 1, 95],
        [0, 1, 0, 98],
        [0, 22, 1, 98],
        [0, 1, 0, 100],
        [0, 22, 1, 100],
        [0, 1, 0, 102],
        [0, 22, 1, 102],
        [0, 1, 0, 103],
        [0, 22, 1, 103],
        [0, 1, 0, 104],
        [0, 22, 1, 104],
        [0, 2, 0, 61],
        [0, 9, 0, 61],
        [0, 23, 0, 61],
        [0, 40, 1, 61],
        [0, 2, 0, 65],
        [0, 9, 0, 65],
        [0, 23, 0, 65],
        [0, 40, 1, 65],
        [0, 2, 0, 95],
        [0, 9, 0, 95],
        [0, 23, 0, 95],
        [0, 40, 1, 95],
        [0, 2, 0, 98],
        [0, 9, 0, 98],
        [0, 23, 0, 98],
        [0, 40, 1, 98],
        [0, 3, 0, 61],
        [0, 6, 0, 61],
        [0, 10, 0, 61],
        [0, 15, 0, 61],
        [0, 24, 0, 61],
        [0, 31, 0, 61],
        [0, 41, 0, 61],
        [0, 56, 1, 61],
        [0, 3, 0, 65],
        [0, 6, 0, 65],
        [0, 10, 0, 65],
        [0, 15, 0, 65],
        [0, 24, 0, 65],
        [0, 31, 0, 65],
        [0, 41, 0, 65],
        [0, 56, 1, 65],
        [0, 3, 0, 95],
        [0, 6, 0, 95],
        [0, 10, 0, 95],
        [0, 15, 0, 95],
        [0, 24, 0, 95],
        [0, 31, 0, 95],
        [0, 41, 0, 95],
        [0, 56, 1, 95],
        [0, 3, 0, 98],
        [0, 6, 0, 98],
        [0, 10, 0, 98],
        [0, 15, 0, 98],
        [0, 24, 0, 98],
        [0, 31, 0, 98],
        [0, 41, 0, 98],
        [0, 56, 1, 98],
        [0, 2, 0, 100],
        [0, 9, 0, 100],
        [0, 23, 0, 100],
        [0, 40, 1, 100],
        [0, 2, 0, 102],
        [0, 9, 0, 102],
        [0, 23, 0, 102],
        [0, 40, 1, 102],
        [0, 2, 0, 103],
        [0, 9, 0, 103],
        [0, 23, 0, 103],
        [0, 40, 1, 103],
        [0, 2, 0, 104],
        [0, 9, 0, 104],
        [0, 23, 0, 104],
        [0, 40, 1, 104],
        [0, 3, 0, 100],
        [0, 6, 0, 100],
        [0, 10, 0, 100],
        [0, 15, 0, 100],
        [0, 24, 0, 100],
        [0, 31, 0, 100],
        [0, 41, 0, 100],
        [0, 56, 1, 100],
        [0, 3, 0, 102],
        [0, 6, 0, 102],
        [0, 10, 0, 102],
        [0, 15, 0, 102],
        [0, 24, 0, 102],
        [0, 31, 0, 102],
        [0, 41, 0, 102],
        [0, 56, 1, 102],
        [0, 3, 0, 103],
        [0, 6, 0, 103],
        [0, 10, 0, 103],
        [0, 15, 0, 103],
        [0, 24, 0, 103],
        [0, 31, 0, 103],
        [0, 41, 0, 103],
        [0, 56, 1, 103],
        [0, 3, 0, 104],
        [0, 6, 0, 104],
        [0, 10, 0, 104],
        [0, 15, 0, 104],
        [0, 24, 0, 104],
        [0, 31, 0, 104],
        [0, 41, 0, 104],
        [0, 56, 1, 104],
        [0, 1, 0, 108],
        [0, 22, 1, 108],
        [0, 1, 0, 109],
        [0, 22, 1, 109],
        [0, 1, 0, 110],
        [0, 22, 1, 110],
        [0, 1, 0, 112],
        [0, 22, 1, 112],
        [0, 1, 0, 114],
        [0, 22, 1, 114],
        [0, 1, 0, 117],
        [0, 22, 1, 117],
        [0, 0, 1, 58],
        [0, 0, 1, 66],
        [0, 0, 1, 67],
        [0, 0, 1, 68],
        [0, 2, 0, 108],
        [0, 9, 0, 108],
        [0, 23, 0, 108],
        [0, 40, 1, 108],
        [0, 2, 0, 109],
        [0, 9, 0, 109],
        [0, 23, 0, 109],
        [0, 40, 1, 109],
        [0, 2, 0, 110],
        [0, 9, 0, 110],
        [0, 23, 0, 110],
        [0, 40, 1, 110],
        [0, 2, 0, 112],
        [0, 9, 0, 112],
        [0, 23, 0, 112],
        [0, 40, 1, 112],
        [0, 3, 0, 108],
        [0, 6, 0, 108],
        [0, 10, 0, 108],
        [0, 15, 0, 108],
        [0, 24, 0, 108],
        [0, 31, 0, 108],
        [0, 41, 0, 108],
        [0, 56, 1, 108],
        [0, 3, 0, 109],
        [0, 6, 0, 109],
        [0, 10, 0, 109],
        [0, 15, 0, 109],
        [0, 24, 0, 109],
        [0, 31, 0, 109],
        [0, 41, 0, 109],
        [0, 56, 1, 109],
        [0, 3, 0, 110],
        [0, 6, 0, 110],
        [0, 10, 0, 110],
        [0, 15, 0, 110],
        [0, 24, 0, 110],
        [0, 31, 0, 110],
        [0, 41, 0, 110],
        [0, 56, 1, 110],
        [0, 3, 0, 112],
        [0, 6, 0, 112],
        [0, 10, 0, 112],
        [0, 15, 0, 112],
        [0, 24, 0, 112],
        [0, 31, 0, 112],
        [0, 41, 0, 112],
        [0, 56, 1, 112],
        [0, 2, 0, 114],
        [0, 9, 0, 114],
        [0, 23, 0, 114],
        [0, 40, 1, 114],
        [0, 2, 0, 117],
        [0, 9, 0, 117],
        [0, 23, 0, 117],
        [0, 40, 1, 117],
        [0, 1, 0, 58],
        [0, 22, 1, 58],
        [0, 1, 0, 66],
        [0, 22, 1, 66],
        [0, 1, 0, 67],
        [0, 22, 1, 67],
        [0, 1, 0, 68],
        [0, 22, 1, 68],
        [0, 3, 0, 114],
        [0, 6, 0, 114],
        [0, 10, 0, 114],
        [0, 15, 0, 114],
        [0, 24, 0, 114],
        [0, 31, 0, 114],
        [0, 41, 0, 114],
        [0, 56, 1, 114],
        [0, 3, 0, 117],
        [0, 6, 0, 117],
        [0, 10, 0, 117],
        [0, 15, 0, 117],
        [0, 24, 0, 117],
        [0, 31, 0, 117],
        [0, 41, 0, 117],
        [0, 56, 1, 117],
        [0, 2, 0, 58],
        [0, 9, 0, 58],
        [0, 23, 0, 58],
        [0, 40, 1, 58],
        [0, 2, 0, 66],
        [0, 9, 0, 66],
        [0, 23, 0, 66],
        [0, 40, 1, 66],
        [0, 2, 0, 67],
        [0, 9, 0, 67],
        [0, 23, 0, 67],
        [0, 40, 1, 67],
        [0, 2, 0, 68],
        [0, 9, 0, 68],
        [0, 23, 0, 68],
        [0, 40, 1, 68],
        [0, 3, 0, 58],
        [0, 6, 0, 58],
        [0, 10, 0, 58],
        [0, 15, 0, 58],
        [0, 24, 0, 58],
        [0, 31, 0, 58],
        [0, 41, 0, 58],
        [0, 56, 1, 58],
        [0, 3, 0, 66],
        [0, 6, 0, 66],
        [0, 10, 0, 66],
        [0, 15, 0, 66],
        [0, 24, 0, 66],
        [0, 31, 0, 66],
        [0, 41, 0, 66],
        [0, 56, 1, 66],
        [0, 3, 0, 67],
        [0, 6, 0, 67],
        [0, 10, 0, 67],
        [0, 15, 0, 67],
        [0, 24, 0, 67],
        [0, 31, 0, 67],
        [0, 41, 0, 67],
        [0, 56, 1, 67],
        [0, 3, 0, 68],
        [0, 6, 0, 68],
        [0, 10, 0, 68],
        [0, 15, 0, 68],
        [0, 24, 0, 68],
        [0, 31, 0, 68],
        [0, 41, 0, 68],
        [0, 56, 1, 68],
        [0, 44, 0, 0],
        [0, 45, 0, 0],
        [0, 47, 0, 0],
        [0, 48, 0, 0],
        [0, 51, 0, 0],
        [0, 52, 0, 0],
        [0, 54, 0, 0],
        [0, 55, 0, 0],
        [0, 59, 0, 0],
        [0, 60, 0, 0],
        [0, 62, 0, 0],
        [0, 63, 0, 0],
        [0, 66, 0, 0],
        [0, 67, 0, 0],
        [0, 69, 0, 0],
        [0, 72, 1, 0],
        [0, 0, 1, 69],
        [0, 0, 1, 70],
        [0, 0, 1, 71],
        [0, 0, 1, 72],
        [0, 0, 1, 73],
        [0, 0, 1, 74],
        [0, 0, 1, 75],
        [0, 0, 1, 76],
        [0, 0, 1, 77],
        [0, 0, 1, 78],
        [0, 0, 1, 79],
        [0, 0, 1, 80],
        [0, 0, 1, 81],
        [0, 0, 1, 82],
        [0, 0, 1, 83],
        [0, 0, 1, 84],
        [0, 1, 0, 69],
        [0, 22, 1, 69],
        [0, 1, 0, 70],
        [0, 22, 1, 70],
        [0, 1, 0, 71],
        [0, 22, 1, 71],
        [0, 1, 0, 72],
        [0, 22, 1, 72],
        [0, 1, 0, 73],
        [0, 22, 1, 73],
        [0, 1, 0, 74],
        [0, 22, 1, 74],
        [0, 1, 0, 75],
        [0, 22, 1, 75],
        [0, 1, 0, 76],
        [0, 22, 1, 76],
        [0, 2, 0, 69],
        [0, 9, 0, 69],
        [0, 23, 0, 69],
        [0, 40, 1, 69],
        [0, 2, 0, 70],
        [0, 9, 0, 70],
        [0, 23, 0, 70],
        [0, 40, 1, 70],
        [0, 2, 0, 71],
        [0, 9, 0, 71],
        [0, 23, 0, 71],
        [0, 40, 1, 71],
        [0, 2, 0, 72],
        [0, 9, 0, 72],
        [0, 23, 0, 72],
        [0, 40, 1, 72],
        [0, 3, 0, 69],
        [0, 6, 0, 69],
        [0, 10, 0, 69],
        [0, 15, 0, 69],
        [0, 24, 0, 69],
        [0, 31, 0, 69],
        [0, 41, 0, 69],
        [0, 56, 1, 69],
        [0, 3, 0, 70],
        [0, 6, 0, 70],
        [0, 10, 0, 70],
        [0, 15, 0, 70],
        [0, 24, 0, 70],
        [0, 31, 0, 70],
        [0, 41, 0, 70],
        [0, 56, 1, 70],
        [0, 3, 0, 71],
        [0, 6, 0, 71],
        [0, 10, 0, 71],
        [0, 15, 0, 71],
        [0, 24, 0, 71],
        [0, 31, 0, 71],
        [0, 41, 0, 71],
        [0, 56, 1, 71],
        [0, 3, 0, 72],
        [0, 6, 0, 72],
        [0, 10, 0, 72],
        [0, 15, 0, 72],
        [0, 24, 0, 72],
        [0, 31, 0, 72],
        [0, 41, 0, 72],
        [0, 56, 1, 72],
        [0, 2, 0, 73],
        [0, 9, 0, 73],
        [0, 23, 0, 73],
        [0, 40, 1, 73],
        [0, 2, 0, 74],
        [0, 9, 0, 74],
        [0, 23, 0, 74],
        [0, 40, 1, 74],
        [0, 2, 0, 75],
        [0, 9, 0, 75],
        [0, 23, 0, 75],
        [0, 40, 1, 75],
        [0, 2, 0, 76],
        [0, 9, 0, 76],
        [0, 23, 0, 76],
        [0, 40, 1, 76],
        [0, 3, 0, 73],
        [0, 6, 0, 73],
        [0, 10, 0, 73],
        [0, 15, 0, 73],
        [0, 24, 0, 73],
        [0, 31, 0, 73],
        [0, 41, 0, 73],
        [0, 56, 1, 73],
        [0, 3, 0, 74],
        [0, 6, 0, 74],
        [0, 10, 0, 74],
        [0, 15, 0, 74],
        [0, 24, 0, 74],
        [0, 31, 0, 74],
        [0, 41, 0, 74],
        [0, 56, 1, 74],
        [0, 3, 0, 75],
        [0, 6, 0, 75],
        [0, 10, 0, 75],
        [0, 15, 0, 75],
        [0, 24, 0, 75],
        [0, 31, 0, 75],
        [0, 41, 0, 75],
        [0, 56, 1, 75],
        [0, 3, 0, 76],
        [0, 6, 0, 76],
        [0, 10, 0, 76],
        [0, 15, 0, 76],
        [0, 24, 0, 76],
        [0, 31, 0, 76],
        [0, 41, 0, 76],
        [0, 56, 1, 76],
        [0, 1, 0, 77],
        [0, 22, 1, 77],
        [0, 1, 0, 78],
        [0, 22, 1, 78],
        [0, 1, 0, 79],
        [0, 22, 1, 79],
        [0, 1, 0, 80],
        [0, 22, 1, 80],
        [0, 1, 0, 81],
        [0, 22, 1, 81],
        [0, 1, 0, 82],
        [0, 22, 1, 82],
        [0, 1, 0, 83],
        [0, 22, 1, 83],
        [0, 1, 0, 84],
        [0, 22, 1, 84],
        [0, 2, 0, 77],
        [0, 9, 0, 77],
        [0, 23, 0, 77],
        [0, 40, 1, 77],
        [0, 2, 0, 78],
        [0, 9, 0, 78],
        [0, 23, 0, 78],
        [0, 40, 1, 78],
        [0, 2, 0, 79],
        [0, 9, 0, 79],
        [0, 23, 0, 79],
        [0, 40, 1, 79],
        [0, 2, 0, 80],
        [0, 9, 0, 80],
        [0, 23, 0, 80],
        [0, 40, 1, 80],
        [0, 3, 0, 77],
        [0, 6, 0, 77],
        [0, 10, 0, 77],
        [0, 15, 0, 77],
        [0, 24, 0, 77],
        [0, 31, 0, 77],
        [0, 41, 0, 77],
        [0, 56, 1, 77],
        [0, 3, 0, 78],
        [0, 6, 0, 78],
        [0, 10, 0, 78],
        [0, 15, 0, 78],
        [0, 24, 0, 78],
        [0, 31, 0, 78],
        [0, 41, 0, 78],
        [0, 56, 1, 78],
        [0, 3, 0, 79],
        [0, 6, 0, 79],
        [0, 10, 0, 79],
        [0, 15, 0, 79],
        [0, 24, 0, 79],
        [0, 31, 0, 79],
        [0, 41, 0, 79],
        [0, 56, 1, 79],
        [0, 3, 0, 80],
        [0, 6, 0, 80],
        [0, 10, 0, 80],
        [0, 15, 0, 80],
        [0, 24, 0, 80],
        [0, 31, 0, 80],
        [0, 41, 0, 80],
        [0, 56, 1, 80],
        [0, 2, 0, 81],
        [0, 9, 0, 81],
        [0, 23, 0, 81],
        [0, 40, 1, 81],
        [0, 2, 0, 82],
        [0, 9, 0, 82],
        [0, 23, 0, 82],
        [0, 40, 1, 82],
        [0, 2, 0, 83],
        [0, 9, 0, 83],
        [0, 23, 0, 83],
        [0, 40, 1, 83],
        [0, 2, 0, 84],
        [0, 9, 0, 84],
        [0, 23, 0, 84],
        [0, 40, 1, 84],
        [0, 3, 0, 81],
        [0, 6, 0, 81],
        [0, 10, 0, 81],
        [0, 15, 0, 81],
        [0, 24, 0, 81],
        [0, 31, 0, 81],
        [0, 41, 0, 81],
        [0, 56, 1, 81],
        [0, 3, 0, 82],
        [0, 6, 0, 82],
        [0, 10, 0, 82],
        [0, 15, 0, 82],
        [0, 24, 0, 82],
        [0, 31, 0, 82],
        [0, 41, 0, 82],
        [0, 56, 1, 82],
        [0, 3, 0, 83],
        [0, 6, 0, 83],
        [0, 10, 0, 83],
        [0, 15, 0, 83],
        [0, 24, 0, 83],
        [0, 31, 0, 83],
        [0, 41, 0, 83],
        [0, 56, 1, 83],
        [0, 3, 0, 84],
        [0, 6, 0, 84],
        [0, 10, 0, 84],
        [0, 15, 0, 84],
        [0, 24, 0, 84],
        [0, 31, 0, 84],
        [0, 41, 0, 84],
        [0, 56, 1, 84],
        [0, 0, 1, 85],
        [0, 0, 1, 86],
        [0, 0, 1, 87],
        [0, 0, 1, 89],
        [0, 0, 1, 106],
        [0, 0, 1, 107],
        [0, 0, 1, 113],
        [0, 0, 1, 118],
        [0, 0, 1, 119],
        [0, 0, 1, 120],
        [0, 0, 1, 121],
        [0, 0, 1, 122],
        [0, 70, 0, 0],
        [0, 71, 0, 0],
        [0, 73, 0, 0],
        [0, 74, 1, 0],
        [0, 1, 0, 85],
        [0, 22, 1, 85],
        [0, 1, 0, 86],
        [0, 22, 1, 86],
        [0, 1, 0, 87],
        [0, 22, 1, 87],
        [0, 1, 0, 89],
        [0, 22, 1, 89],
        [0, 1, 0, 106],
        [0, 22, 1, 106],
        [0, 1, 0, 107],
        [0, 22, 1, 107],
        [0, 1, 0, 113],
        [0, 22, 1, 113],
        [0, 1, 0, 118],
        [0, 22, 1, 118],
        [0, 2, 0, 85],
        [0, 9, 0, 85],
        [0, 23, 0, 85],
        [0, 40, 1, 85],
        [0, 2, 0, 86],
        [0, 9, 0, 86],
        [0, 23, 0, 86],
        [0, 40, 1, 86],
        [0, 2, 0, 87],
        [0, 9, 0, 87],
        [0, 23, 0, 87],
        [0, 40, 1, 87],
        [0, 2, 0, 89],
        [0, 9, 0, 89],
        [0, 23, 0, 89],
        [0, 40, 1, 89],
        [0, 3, 0, 85],
        [0, 6, 0, 85],
        [0, 10, 0, 85],
        [0, 15, 0, 85],
        [0, 24, 0, 85],
        [0, 31, 0, 85],
        [0, 41, 0, 85],
        [0, 56, 1, 85],
        [0, 3, 0, 86],
        [0, 6, 0, 86],
        [0, 10, 0, 86],
        [0, 15, 0, 86],
        [0, 24, 0, 86],
        [0, 31, 0, 86],
        [0, 41, 0, 86],
        [0, 56, 1, 86],
        [0, 3, 0, 87],
        [0, 6, 0, 87],
        [0, 10, 0, 87],
        [0, 15, 0, 87],
        [0, 24, 0, 87],
        [0, 31, 0, 87],
        [0, 41, 0, 87],
        [0, 56, 1, 87],
        [0, 3, 0, 89],
        [0, 6, 0, 89],
        [0, 10, 0, 89],
        [0, 15, 0, 89],
        [0, 24, 0, 89],
        [0, 31, 0, 89],
        [0, 41, 0, 89],
        [0, 56, 1, 89],
        [0, 2, 0, 106],
        [0, 9, 0, 106],
        [0, 23, 0, 106],
        [0, 40, 1, 106],
        [0, 2, 0, 107],
        [0, 9, 0, 107],
        [0, 23, 0, 107],
        [0, 40, 1, 107],
        [0, 2, 0, 113],
        [0, 9, 0, 113],
        [0, 23, 0, 113],
        [0, 40, 1, 113],
        [0, 2, 0, 118],
        [0, 9, 0, 118],
        [0, 23, 0, 118],
        [0, 40, 1, 118],
        [0, 3, 0, 106],
        [0, 6, 0, 106],
        [0, 10, 0, 106],
        [0, 15, 0, 106],
        [0, 24, 0, 106],
        [0, 31, 0, 106],
        [0, 41, 0, 106],
        [0, 56, 1, 106],
        [0, 3, 0, 107],
        [0, 6, 0, 107],
        [0, 10, 0, 107],
        [0, 15, 0, 107],
        [0, 24, 0, 107],
        [0, 31, 0, 107],
        [0, 41, 0, 107],
        [0, 56, 1, 107],
        [0, 3, 0, 113],
        [0, 6, 0, 113],
        [0, 10, 0, 113],
        [0, 15, 0, 113],
        [0, 24, 0, 113],
        [0, 31, 0, 113],
        [0, 41, 0, 113],
        [0, 56, 1, 113],
        [0, 3, 0, 118],
        [0, 6, 0, 118],
        [0, 10, 0, 118],
        [0, 15, 0, 118],
        [0, 24, 0, 118],
        [0, 31, 0, 118],
        [0, 41, 0, 118],
        [0, 56, 1, 118],
        [0, 1, 0, 119],
        [0, 22, 1, 119],
        [0, 1, 0, 120],
        [0, 22, 1, 120],
        [0, 1, 0, 121],
        [0, 22, 1, 121],
        [0, 1, 0, 122],
        [0, 22, 1, 122],
        [0, 0, 1, 38],
        [0, 0, 1, 42],
        [0, 0, 1, 44],
        [0, 0, 1, 59],
        [0, 0, 1, 88],
        [0, 0, 1, 90],
        [0, 75, 0, 0],
        [0, 78, 0, 0],
        [0, 2, 0, 119],
        [0, 9, 0, 119],
        [0, 23, 0, 119],
        [0, 40, 1, 119],
        [0, 2, 0, 120],
        [0, 9, 0, 120],
        [0, 23, 0, 120],
        [0, 40, 1, 120],
        [0, 2, 0, 121],
        [0, 9, 0, 121],
        [0, 23, 0, 121],
        [0, 40, 1, 121],
        [0, 2, 0, 122],
        [0, 9, 0, 122],
        [0, 23, 0, 122],
        [0, 40, 1, 122],
        [0, 3, 0, 119],
        [0, 6, 0, 119],
        [0, 10, 0, 119],
        [0, 15, 0, 119],
        [0, 24, 0, 119],
        [0, 31, 0, 119],
        [0, 41, 0, 119],
        [0, 56, 1, 119],
        [0, 3, 0, 120],
        [0, 6, 0, 120],
        [0, 10, 0, 120],
        [0, 15, 0, 120],
        [0, 24, 0, 120],
        [0, 31, 0, 120],
        [0, 41, 0, 120],
        [0, 56, 1, 120],
        [0, 3, 0, 121],
        [0, 6, 0, 121],
        [0, 10, 0, 121],
        [0, 15, 0, 121],
        [0, 24, 0, 121],
        [0, 31, 0, 121],
        [0, 41, 0, 121],
        [0, 56, 1, 121],
        [0, 3, 0, 122],
        [0, 6, 0, 122],
        [0, 10, 0, 122],
        [0, 15, 0, 122],
        [0, 24, 0, 122],
        [0, 31, 0, 122],
        [0, 41, 0, 122],
        [0, 56, 1, 122],
        [0, 1, 0, 38],
        [0, 22, 1, 38],
        [0, 1, 0, 42],
        [0, 22, 1, 42],
        [0, 1, 0, 44],
        [0, 22, 1, 44],
        [0, 1, 0, 59],
        [0, 22, 1, 59],
        [0, 1, 0, 88],
        [0, 22, 1, 88],
        [0, 1, 0, 90],
        [0, 22, 1, 90],
        [0, 76, 0, 0],
        [0, 77, 0, 0],
        [0, 79, 0, 0],
        [0, 81, 0, 0],
        [0, 2, 0, 38],
        [0, 9, 0, 38],
        [0, 23, 0, 38],
        [0, 40, 1, 38],
        [0, 2, 0, 42],
        [0, 9, 0, 42],
        [0, 23, 0, 42],
        [0, 40, 1, 42],
        [0, 2, 0, 44],
        [0, 9, 0, 44],
        [0, 23, 0, 44],
        [0, 40, 1, 44],
        [0, 2, 0, 59],
        [0, 9, 0, 59],
        [0, 23, 0, 59],
        [0, 40, 1, 59],
        [0, 3, 0, 38],
        [0, 6, 0, 38],
        [0, 10, 0, 38],
        [0, 15, 0, 38],
        [0, 24, 0, 38],
        [0, 31, 0, 38],
        [0, 41, 0, 38],
        [0, 56, 1, 38],
        [0, 3, 0, 42],
        [0, 6, 0, 42],
        [0, 10, 0, 42],
        [0, 15, 0, 42],
        [0, 24, 0, 42],
        [0, 31, 0, 42],
        [0, 41, 0, 42],
        [0, 56, 1, 42],
        [0, 3, 0, 44],
        [0, 6, 0, 44],
        [0, 10, 0, 44],
        [0, 15, 0, 44],
        [0, 24, 0, 44],
        [0, 31, 0, 44],
        [0, 41, 0, 44],
        [0, 56, 1, 44],
        [0, 3, 0, 59],
        [0, 6, 0, 59],
        [0, 10, 0, 59],
        [0, 15, 0, 59],
        [0, 24, 0, 59],
        [0, 31, 0, 59],
        [0, 41, 0, 59],
        [0, 56, 1, 59],
        [0, 2, 0, 88],
        [0, 9, 0, 88],
        [0, 23, 0, 88],
        [0, 40, 1, 88],
        [0, 2, 0, 90],
        [0, 9, 0, 90],
        [0, 23, 0, 90],
        [0, 40, 1, 90],
        [0, 0, 1, 33],
        [0, 0, 1, 34],
        [0, 0, 1, 40],
        [0, 0, 1, 41],
        [0, 0, 1, 63],
        [0, 80, 0, 0],
        [0, 82, 0, 0],
        [0, 84, 0, 0],
        [0, 3, 0, 88],
        [0, 6, 0, 88],
        [0, 10, 0, 88],
        [0, 15, 0, 88],
        [0, 24, 0, 88],
        [0, 31, 0, 88],
        [0, 41, 0, 88],
        [0, 56, 1, 88],
        [0, 3, 0, 90],
        [0, 6, 0, 90],
        [0, 10, 0, 90],
        [0, 15, 0, 90],
        [0, 24, 0, 90],
        [0, 31, 0, 90],
        [0, 41, 0, 90],
        [0, 56, 1, 90],
        [0, 1, 0, 33],
        [0, 22, 1, 33],
        [0, 1, 0, 34],
        [0, 22, 1, 34],
        [0, 1, 0, 40],
        [0, 22, 1, 40],
        [0, 1, 0, 41],
        [0, 22, 1, 41],
        [0, 1, 0, 63],
        [0, 22, 1, 63],
        [0, 0, 1, 39],
        [0, 0, 1, 43],
        [0, 0, 1, 124],
        [0, 83, 0, 0],
        [0, 85, 0, 0],
        [0, 88, 0, 0],
        [0, 2, 0, 33],
        [0, 9, 0, 33],
        [0, 23, 0, 33],
        [0, 40, 1, 33],
        [0, 2, 0, 34],
        [0, 9, 0, 34],
        [0, 23, 0, 34],
        [0, 40, 1, 34],
        [0, 2, 0, 40],
        [0, 9, 0, 40],
        [0, 23, 0, 40],
        [0, 40, 1, 40],
        [0, 2, 0, 41],
        [0, 9, 0, 41],
        [0, 23, 0, 41],
        [0, 40, 1, 41],
        [0, 3, 0, 33],
        [0, 6, 0, 33],
        [0, 10, 0, 33],
        [0, 15, 0, 33],
        [0, 24, 0, 33],
        [0, 31, 0, 33],
        [0, 41, 0, 33],
        [0, 56, 1, 33],
        [0, 3, 0, 34],
        [0, 6, 0, 34],
        [0, 10, 0, 34],
        [0, 15, 0, 34],
        [0, 24, 0, 34],
        [0, 31, 0, 34],
        [0, 41, 0, 34],
        [0, 56, 1, 34],
        [0, 3, 0, 40],
        [0, 6, 0, 40],
        [0, 10, 0, 40],
        [0, 15, 0, 40],
        [0, 24, 0, 40],
        [0, 31, 0, 40],
        [0, 41, 0, 40],
        [0, 56, 1, 40],
        [0, 3, 0, 41],
        [0, 6, 0, 41],
        [0, 10, 0, 41],
        [0, 15, 0, 41],
        [0, 24, 0, 41],
        [0, 31, 0, 41],
        [0, 41, 0, 41],
        [0, 56, 1, 41],
        [0, 2, 0, 63],
        [0, 9, 0, 63],
        [0, 23, 0, 63],
        [0, 40, 1, 63],
        [0, 1, 0, 39],
        [0, 22, 1, 39],
        [0, 1, 0, 43],
        [0, 22, 1, 43],
        [0, 1, 0, 124],
        [0, 22, 1, 124],
        [0, 0, 1, 35],
        [0, 0, 1, 62],
        [0, 86, 0, 0],
        [0, 87, 0, 0],
        [0, 89, 0, 0],
        [0, 90, 0, 0],
        [0, 3, 0, 63],
        [0, 6, 0, 63],
        [0, 10, 0, 63],
        [0, 15, 0, 63],
        [0, 24, 0, 63],
        [0, 31, 0, 63],
        [0, 41, 0, 63],
        [0, 56, 1, 63],
        [0, 2, 0, 39],
        [0, 9, 0, 39],
        [0, 23, 0, 39],
        [0, 40, 1, 39],
        [0, 2, 0, 43],
        [0, 9, 0, 43],
        [0, 23, 0, 43],
        [0, 40, 1, 43],
        [0, 3, 0, 39],
        [0, 6, 0, 39],
        [0, 10, 0, 39],
        [0, 15, 0, 39],
        [0, 24, 0, 39],
        [0, 31, 0, 39],
        [0, 41, 0, 39],
        [0, 56, 1, 39],
        [0, 3, 0, 43],
        [0, 6, 0, 43],
        [0, 10, 0, 43],
        [0, 15, 0, 43],
        [0, 24, 0, 43],
        [0, 31, 0, 43],
        [0, 41, 0, 43],
        [0, 56, 1, 43],
        [0, 2, 0, 124],
        [0, 9, 0, 124],
        [0, 23, 0, 124],
        [0, 40, 1, 124],
        [0, 1, 0, 35],
        [0, 22, 1, 35],
        [0, 1, 0, 62],
        [0, 22, 1, 62],
        [0, 0, 1, 0],
        [0, 0, 1, 36],
        [0, 0, 1, 64],
        [0, 0, 1, 91],
        [0, 0, 1, 93],
        [0, 0, 1, 126],
        [0, 91, 0, 0],
        [0, 92, 0, 0],
        [0, 3, 0, 124],
        [0, 6, 0, 124],
        [0, 10, 0, 124],
        [0, 15, 0, 124],
        [0, 24, 0, 124],
        [0, 31, 0, 124],
        [0, 41, 0, 124],
        [0, 56, 1, 124],
        [0, 2, 0, 35],
        [0, 9, 0, 35],
        [0, 23, 0, 35],
        [0, 40, 1, 35],
        [0, 2, 0, 62],
        [0, 9, 0, 62],
        [0, 23, 0, 62],
        [0, 40, 1, 62],
        [0, 3, 0, 35],
        [0, 6, 0, 35],
        [0, 10, 0, 35],
        [0, 15, 0, 35],
        [0, 24, 0, 35],
        [0, 31, 0, 35],
        [0, 41, 0, 35],
        [0, 56, 1, 35],
        [0, 3, 0, 62],
        [0, 6, 0, 62],
        [0, 10, 0, 62],
        [0, 15, 0, 62],
        [0, 24, 0, 62],
        [0, 31, 0, 62],
        [0, 41, 0, 62],
        [0, 56, 1, 62],
        [0, 1, 0, 0],
        [0, 22, 1, 0],
        [0, 1, 0, 36],
        [0, 22, 1, 36],
        [0, 1, 0, 64],
        [0, 22, 1, 64],
        [0, 1, 0, 91],
        [0, 22, 1, 91],
        [0, 1, 0, 93],
        [0, 22, 1, 93],
        [0, 1, 0, 126],
        [0, 22, 1, 126],
        [0, 0, 1, 94],
        [0, 0, 1, 125],
        [0, 93, 0, 0],
        [0, 94, 0, 0],
        [0, 2, 0, 0],
        [0, 9, 0, 0],
        [0, 23, 0, 0],
        [0, 40, 1, 0],
        [0, 2, 0, 36],
        [0, 9, 0, 36],
        [0, 23, 0, 36],
        [0, 40, 1, 36],
        [0, 2, 0, 64],
        [0, 9, 0, 64],
        [0, 23, 0, 64],
        [0, 40, 1, 64],
        [0, 2, 0, 91],
        [0, 9, 0, 91],
        [0, 23, 0, 91],
        [0, 40, 1, 91],
        [0, 3, 0, 0],
        [0, 6, 0, 0],
        [0, 10, 0, 0],
        [0, 15, 0, 0],
        [0, 24, 0, 0],
        [0, 31, 0, 0],
        [0, 41, 0, 0],
        [0, 56, 1, 0],
        [0, 3, 0, 36],
        [0, 6, 0, 36],
        [0, 10, 0, 36],
        [0, 15, 0, 36],
        [0, 24, 0, 36],
        [0, 31, 0, 36],
        [0, 41, 0, 36],
        [0, 56, 1, 36],
        [0, 3, 0, 64],
        [0, 6, 0, 64],
        [0, 10, 0, 64],
        [0, 15, 0, 64],
        [0, 24, 0, 64],
        [0, 31, 0, 64],
        [0, 41, 0, 64],
        [0, 56, 1, 64],
        [0, 3, 0, 91],
        [0, 6, 0, 91],
        [0, 10, 0, 91],
        [0, 15, 0, 91],
        [0, 24, 0, 91],
        [0, 31, 0, 91],
        [0, 41, 0, 91],
        [0, 56, 1, 91],
        [0, 2, 0, 93],
        [0, 9, 0, 93],
        [0, 23, 0, 93],
        [0, 40, 1, 93],
        [0, 2, 0, 126],
        [0, 9, 0, 126],
        [0, 23, 0, 126],
        [0, 40, 1, 126],
        [0, 1, 0, 94],
        [0, 22, 1, 94],
        [0, 1, 0, 125],
        [0, 22, 1, 125],
        [0, 0, 1, 60],
        [0, 0, 1, 96],
        [0, 0, 1, 123],
        [0, 95, 0, 0],
        [0, 3, 0, 93],
        [0, 6, 0, 93],
        [0, 10, 0, 93],
        [0, 15, 0, 93],
        [0, 24, 0, 93],
        [0, 31, 0, 93],
        [0, 41, 0, 93],
        [0, 56, 1, 93],
        [0, 3, 0, 126],
        [0, 6, 0, 126],
        [0, 10, 0, 126],
        [0, 15, 0, 126],
        [0, 24, 0, 126],
        [0, 31, 0, 126],
        [0, 41, 0, 126],
        [0, 56, 1, 126],
        [0, 2, 0, 94],
        [0, 9, 0, 94],
        [0, 23, 0, 94],
        [0, 40, 1, 94],
        [0, 2, 0, 125],
        [0, 9, 0, 125],
        [0, 23, 0, 125],
        [0, 40, 1, 125],
        [0, 1, 0, 60],
        [0, 22, 1, 60],
        [0, 1, 0, 96],
        [0, 22, 1, 96],
        [0, 1, 0, 123],
        [0, 22, 1, 123],
        [0, 96, 0, 0],
        [0, 110, 0, 0],
        [0, 3, 0, 94],
        [0, 6, 0, 94],
        [0, 10, 0, 94],
        [0, 15, 0, 94],
        [0, 24, 0, 94],
        [0, 31, 0, 94],
        [0, 41, 0, 94],
        [0, 56, 1, 94],
        [0, 3, 0, 125],
        [0, 6, 0, 125],
        [0, 10, 0, 125],
        [0, 15, 0, 125],
        [0, 24, 0, 125],
        [0, 31, 0, 125],
        [0, 41, 0, 125],
        [0, 56, 1, 125],
        [0, 2, 0, 60],
        [0, 9, 0, 60],
        [0, 23, 0, 60],
        [0, 40, 1, 60],
        [0, 2, 0, 96],
        [0, 9, 0, 96],
        [0, 23, 0, 96],
        [0, 40, 1, 96],
        [0, 2, 0, 123],
        [0, 9, 0, 123],
        [0, 23, 0, 123],
        [0, 40, 1, 123],
        [0, 97, 0, 0],
        [0, 101, 0, 0],
        [0, 111, 0, 0],
        [0, 133, 0, 0],
        [0, 3, 0, 60],
        [0, 6, 0, 60],
        [0, 10, 0, 60],
        [0, 15, 0, 60],
        [0, 24, 0, 60],
        [0, 31, 0, 60],
        [0, 41, 0, 60],
        [0, 56, 1, 60],
        [0, 3, 0, 96],
        [0, 6, 0, 96],
        [0, 10, 0, 96],
        [0, 15, 0, 96],
        [0, 24, 0, 96],
        [0, 31, 0, 96],
        [0, 41, 0, 96],
        [0, 56, 1, 96],
        [0, 3, 0, 123],
        [0, 6, 0, 123],
        [0, 10, 0, 123],
        [0, 15, 0, 123],
        [0, 24, 0, 123],
        [0, 31, 0, 123],
        [0, 41, 0, 123],
        [0, 56, 1, 123],
        [0, 98, 0, 0],
        [0, 99, 0, 0],
        [0, 102, 0, 0],
        [0, 105, 0, 0],
        [0, 112, 0, 0],
        [0, 119, 0, 0],
        [0, 134, 0, 0],
        [0, 153, 0, 0],
        [0, 0, 1, 92],
        [0, 0, 1, 195],
        [0, 0, 1, 208],
        [0, 100, 0, 0],
        [0, 103, 0, 0],
        [0, 104, 0, 0],
        [0, 106, 0, 0],
        [0, 107, 0, 0],
        [0, 113, 0, 0],
        [0, 116, 0, 0],
        [0, 120, 0, 0],
        [0, 126, 0, 0],
        [0, 135, 0, 0],
        [0, 142, 0, 0],
        [0, 154, 0, 0],
        [0, 169, 0, 0],
        [0, 1, 0, 92],
        [0, 22, 1, 92],
        [0, 1, 0, 195],
        [0, 22, 1, 195],
        [0, 1, 0, 208],
        [0, 22, 1, 208],
        [0, 0, 1, 128],
        [0, 0, 1, 130],
        [0, 0, 1, 131],
        [0, 0, 1, 162],
        [0, 0, 1, 184],
        [0, 0, 1, 194],
        [0, 0, 1, 224],
        [0, 0, 1, 226],
        [0, 108, 0, 0],
        [0, 109, 0, 0],
        [0, 2, 0, 92],
        [0, 9, 0, 92],
        [0, 23, 0, 92],
        [0, 40, 1, 92],
        [0, 2, 0, 195],
        [0, 9, 0, 195],
        [0, 23, 0, 195],
        [0, 40, 1, 195],
        [0, 2, 0, 208],
        [0, 9, 0, 208],
        [0, 23, 0, 208],
        [0, 40, 1, 208],
        [0, 1, 0, 128],
        [0, 22, 1, 128],
        [0, 1, 0, 130],
        [0, 22, 1, 130],
        [0, 3, 0, 92],
        [0, 6, 0, 92],
        [0, 10, 0, 92],
        [0, 15, 0, 92],
        [0, 24, 0, 92],
        [0, 31, 0, 92],
        [0, 41, 0, 92],
        [0, 56, 1, 92],
        [0, 3, 0, 195],
        [0, 6, 0, 195],
        [0, 10, 0, 195],
        [0, 15, 0, 195],
        [0, 24, 0, 195],
        [0, 31, 0, 195],
        [0, 41, 0, 195],
        [0, 56, 1, 195],
        [0, 3, 0, 208],
        [0, 6, 0, 208],
        [0, 10, 0, 208],
        [0, 15, 0, 208],
        [0, 24, 0, 208],
        [0, 31, 0, 208],
        [0, 41, 0, 208],
        [0, 56, 1, 208],
        [0, 2, 0, 128],
        [0, 9, 0, 128],
        [0, 23, 0, 128],
        [0, 40, 1, 128],
        [0, 2, 0, 130],
        [0, 9, 0, 130],
        [0, 23, 0, 130],
        [0, 40, 1, 130],
        [0, 3, 0, 128],
        [0, 6, 0, 128],
        [0, 10, 0, 128],
        [0, 15, 0, 128],
        [0, 24, 0, 128],
        [0, 31, 0, 128],
        [0, 41, 0, 128],
        [0, 56, 1, 128],
        [0, 3, 0, 130],
        [0, 6, 0, 130],
        [0, 10, 0, 130],
        [0, 15, 0, 130],
        [0, 24, 0, 130],
        [0, 31, 0, 130],
        [0, 41, 0, 130],
        [0, 56, 1, 130],
        [0, 1, 0, 131],
        [0, 22, 1, 131],
        [0, 1, 0, 162],
        [0, 22, 1, 162],
        [0, 1, 0, 184],
        [0, 22, 1, 184],
        [0, 1, 0, 194],
        [0, 22, 1, 194],
        [0, 1, 0, 224],
        [0, 22, 1, 224],
        [0, 1, 0, 226],
        [0, 22, 1, 226],
        [0, 0, 1, 153],
        [0, 0, 1, 161],
        [0, 0, 1, 167],
        [0, 0, 1, 172],
        [0, 2, 0, 131],
        [0, 9, 0, 131],
        [0, 23, 0, 131],
        [0, 40, 1, 131],
        [0, 2, 0, 162],
        [0, 9, 0, 162],
        [0, 23, 0, 162],
        [0, 40, 1, 162],
        [0, 2, 0, 184],
        [0, 9, 0, 184],
        [0, 23, 0, 184],
        [0, 40, 1, 184],
        [0, 2, 0, 194],
        [0, 9, 0, 194],
        [0, 23, 0, 194],
        [0, 40, 1, 194],
        [0, 3, 0, 131],
        [0, 6, 0, 131],
        [0, 10, 0, 131],
        [0, 15, 0, 131],
        [0, 24, 0, 131],
        [0, 31, 0, 131],
        [0, 41, 0, 131],
        [0, 56, 1, 131],
        [0, 3, 0, 162],
        [0, 6, 0, 162],
        [0, 10, 0, 162],
        [0, 15, 0, 162],
        [0, 24, 0, 162],
        [0, 31, 0, 162],
        [0, 41, 0, 162],
        [0, 56, 1, 162],
        [0, 3, 0, 184],
        [0, 6, 0, 184],
        [0, 10, 0, 184],
        [0, 15, 0, 184],
        [0, 24, 0, 184],
        [0, 31, 0, 184],
        [0, 41, 0, 184],
        [0, 56, 1, 184],
        [0, 3, 0, 194],
        [0, 6, 0, 194],
        [0, 10, 0, 194],
        [0, 15, 0, 194],
        [0, 24, 0, 194],
        [0, 31, 0, 194],
        [0, 41, 0, 194],
        [0, 56, 1, 194],
        [0, 2, 0, 224],
        [0, 9, 0, 224],
        [0, 23, 0, 224],
        [0, 40, 1, 224],
        [0, 2, 0, 226],
        [0, 9, 0, 226],
        [0, 23, 0, 226],
        [0, 40, 1, 226],
        [0, 1, 0, 153],
        [0, 22, 1, 153],
        [0, 1, 0, 161],
        [0, 22, 1, 161],
        [0, 1, 0, 167],
        [0, 22, 1, 167],
        [0, 1, 0, 172],
        [0, 22, 1, 172],
        [0, 3, 0, 224],
        [0, 6, 0, 224],
        [0, 10, 0, 224],
        [0, 15, 0, 224],
        [0, 24, 0, 224],
        [0, 31, 0, 224],
        [0, 41, 0, 224],
        [0, 56, 1, 224],
        [0, 3, 0, 226],
        [0, 6, 0, 226],
        [0, 10, 0, 226],
        [0, 15, 0, 226],
        [0, 24, 0, 226],
        [0, 31, 0, 226],
        [0, 41, 0, 226],
        [0, 56, 1, 226],
        [0, 2, 0, 153],
        [0, 9, 0, 153],
        [0, 23, 0, 153],
        [0, 40, 1, 153],
        [0, 2, 0, 161],
        [0, 9, 0, 161],
        [0, 23, 0, 161],
        [0, 40, 1, 161],
        [0, 2, 0, 167],
        [0, 9, 0, 167],
        [0, 23, 0, 167],
        [0, 40, 1, 167],
        [0, 2, 0, 172],
        [0, 9, 0, 172],
        [0, 23, 0, 172],
        [0, 40, 1, 172],
        [0, 3, 0, 153],
        [0, 6, 0, 153],
        [0, 10, 0, 153],
        [0, 15, 0, 153],
        [0, 24, 0, 153],
        [0, 31, 0, 153],
        [0, 41, 0, 153],
        [0, 56, 1, 153],
        [0, 3, 0, 161],
        [0, 6, 0, 161],
        [0, 10, 0, 161],
        [0, 15, 0, 161],
        [0, 24, 0, 161],
        [0, 31, 0, 161],
        [0, 41, 0, 161],
        [0, 56, 1, 161],
        [0, 3, 0, 167],
        [0, 6, 0, 167],
        [0, 10, 0, 167],
        [0, 15, 0, 167],
        [0, 24, 0, 167],
        [0, 31, 0, 167],
        [0, 41, 0, 167],
        [0, 56, 1, 167],
        [0, 3, 0, 172],
        [0, 6, 0, 172],
        [0, 10, 0, 172],
        [0, 15, 0, 172],
        [0, 24, 0, 172],
        [0, 31, 0, 172],
        [0, 41, 0, 172],
        [0, 56, 1, 172],
        [0, 114, 0, 0],
        [0, 115, 0, 0],
        [0, 117, 0, 0],
        [0, 118, 0, 0],
        [0, 121, 0, 0],
        [0, 123, 0, 0],
        [0, 127, 0, 0],
        [0, 130, 0, 0],
        [0, 136, 0, 0],
        [0, 139, 0, 0],
        [0, 143, 0, 0],
        [0, 146, 0, 0],
        [0, 155, 0, 0],
        [0, 162, 0, 0],
        [0, 170, 0, 0],
        [0, 180, 0, 0],
        [0, 0, 1, 176],
        [0, 0, 1, 177],
        [0, 0, 1, 179],
        [0, 0, 1, 209],
        [0, 0, 1, 216],
        [0, 0, 1, 217],
        [0, 0, 1, 227],
        [0, 0, 1, 229],
        [0, 0, 1, 230],
        [0, 122, 0, 0],
        [0, 124, 0, 0],
        [0, 125, 0, 0],
        [0, 128, 0, 0],
        [0, 129, 0, 0],
        [0, 131, 0, 0],
        [0, 132, 0, 0],
        [0, 1, 0, 176],
        [0, 22, 1, 176],
        [0, 1, 0, 177],
        [0, 22, 1, 177],
        [0, 1, 0, 179],
        [0, 22, 1, 179],
        [0, 1, 0, 209],
        [0, 22, 1, 209],
        [0, 1, 0, 216],
        [0, 22, 1, 216],
        [0, 1, 0, 217],
        [0, 22, 1, 217],
        [0, 1, 0, 227],
        [0, 22, 1, 227],
        [0, 1, 0, 229],
        [0, 22, 1, 229],
        [0, 2, 0, 176],
        [0, 9, 0, 176],
        [0, 23, 0, 176],
        [0, 40, 1, 176],
        [0, 2, 0, 177],
        [0, 9, 0, 177],
        [0, 23, 0, 177],
        [0, 40, 1, 177],
        [0, 2, 0, 179],
        [0, 9, 0, 179],
        [0, 23, 0, 179],
        [0, 40, 1, 179],
        [0, 2, 0, 209],
        [0, 9, 0, 209],
        [0, 23, 0, 209],
        [0, 40, 1, 209],
        [0, 3, 0, 176],
        [0, 6, 0, 176],
        [0, 10, 0, 176],
        [0, 15, 0, 176],
        [0, 24, 0, 176],
        [0, 31, 0, 176],
        [0, 41, 0, 176],
        [0, 56, 1, 176],
        [0, 3, 0, 177],
        [0, 6, 0, 177],
        [0, 10, 0, 177],
        [0, 15, 0, 177],
        [0, 24, 0, 177],
        [0, 31, 0, 177],
        [0, 41, 0, 177],
        [0, 56, 1, 177],
        [0, 3, 0, 179],
        [0, 6, 0, 179],
        [0, 10, 0, 179],
        [0, 15, 0, 179],
        [0, 24, 0, 179],
        [0, 31, 0, 179],
        [0, 41, 0, 179],
        [0, 56, 1, 179],
        [0, 3, 0, 209],
        [0, 6, 0, 209],
        [0, 10, 0, 209],
        [0, 15, 0, 209],
        [0, 24, 0, 209],
        [0, 31, 0, 209],
        [0, 41, 0, 209],
        [0, 56, 1, 209],
        [0, 2, 0, 216],
        [0, 9, 0, 216],
        [0, 23, 0, 216],
        [0, 40, 1, 216],
        [0, 2, 0, 217],
        [0, 9, 0, 217],
        [0, 23, 0, 217],
        [0, 40, 1, 217],
        [0, 2, 0, 227],
        [0, 9, 0, 227],
        [0, 23, 0, 227],
        [0, 40, 1, 227],
        [0, 2, 0, 229],
        [0, 9, 0, 229],
        [0, 23, 0, 229],
        [0, 40, 1, 229],
        [0, 3, 0, 216],
        [0, 6, 0, 216],
        [0, 10, 0, 216],
        [0, 15, 0, 216],
        [0, 24, 0, 216],
        [0, 31, 0, 216],
        [0, 41, 0, 216],
        [0, 56, 1, 216],
        [0, 3, 0, 217],
        [0, 6, 0, 217],
        [0, 10, 0, 217],
        [0, 15, 0, 217],
        [0, 24, 0, 217],
        [0, 31, 0, 217],
        [0, 41, 0, 217],
        [0, 56, 1, 217],
        [0, 3, 0, 227],
        [0, 6, 0, 227],
        [0, 10, 0, 227],
        [0, 15, 0, 227],
        [0, 24, 0, 227],
        [0, 31, 0, 227],
        [0, 41, 0, 227],
        [0, 56, 1, 227],
        [0, 3, 0, 229],
        [0, 6, 0, 229],
        [0, 10, 0, 229],
        [0, 15, 0, 229],
        [0, 24, 0, 229],
        [0, 31, 0, 229],
        [0, 41, 0, 229],
        [0, 56, 1, 229],
        [0, 1, 0, 230],
        [0, 22, 1, 230],
        [0, 0, 1, 129],
        [0, 0, 1, 132],
        [0, 0, 1, 133],
        [0, 0, 1, 134],
        [0, 0, 1, 136],
        [0, 0, 1, 146],
        [0, 0, 1, 154],
        [0, 0, 1, 156],
        [0, 0, 1, 160],
        [0, 0, 1, 163],
        [0, 0, 1, 164],
        [0, 0, 1, 169],
        [0, 0, 1, 170],
        [0, 0, 1, 173],
        [0, 2, 0, 230],
        [0, 9, 0, 230],
        [0, 23, 0, 230],
        [0, 40, 1, 230],
        [0, 1, 0, 129],
        [0, 22, 1, 129],
        [0, 1, 0, 132],
        [0, 22, 1, 132],
        [0, 1, 0, 133],
        [0, 22, 1, 133],
        [0, 1, 0, 134],
        [0, 22, 1, 134],
        [0, 1, 0, 136],
        [0, 22, 1, 136],
        [0, 1, 0, 146],
        [0, 22, 1, 146],
        [0, 3, 0, 230],
        [0, 6, 0, 230],
        [0, 10, 0, 230],
        [0, 15, 0, 230],
        [0, 24, 0, 230],
        [0, 31, 0, 230],
        [0, 41, 0, 230],
        [0, 56, 1, 230],
        [0, 2, 0, 129],
        [0, 9, 0, 129],
        [0, 23, 0, 129],
        [0, 40, 1, 129],
        [0, 2, 0, 132],
        [0, 9, 0, 132],
        [0, 23, 0, 132],
        [0, 40, 1, 132],
        [0, 3, 0, 129],
        [0, 6, 0, 129],
        [0, 10, 0, 129],
        [0, 15, 0, 129],
        [0, 24, 0, 129],
        [0, 31, 0, 129],
        [0, 41, 0, 129],
        [0, 56, 1, 129],
        [0, 3, 0, 132],
        [0, 6, 0, 132],
        [0, 10, 0, 132],
        [0, 15, 0, 132],
        [0, 24, 0, 132],
        [0, 31, 0, 132],
        [0, 41, 0, 132],
        [0, 56, 1, 132],
        [0, 2, 0, 133],
        [0, 9, 0, 133],
        [0, 23, 0, 133],
        [0, 40, 1, 133],
        [0, 2, 0, 134],
        [0, 9, 0, 134],
        [0, 23, 0, 134],
        [0, 40, 1, 134],
        [0, 2, 0, 136],
        [0, 9, 0, 136],
        [0, 23, 0, 136],
        [0, 40, 1, 136],
        [0, 2, 0, 146],
        [0, 9, 0, 146],
        [0, 23, 0, 146],
        [0, 40, 1, 146],
        [0, 3, 0, 133],
        [0, 6, 0, 133],
        [0, 10, 0, 133],
        [0, 15, 0, 133],
        [0, 24, 0, 133],
        [0, 31, 0, 133],
        [0, 41, 0, 133],
        [0, 56, 1, 133],
        [0, 3, 0, 134],
        [0, 6, 0, 134],
        [0, 10, 0, 134],
        [0, 15, 0, 134],
        [0, 24, 0, 134],
        [0, 31, 0, 134],
        [0, 41, 0, 134],
        [0, 56, 1, 134],
        [0, 3, 0, 136],
        [0, 6, 0, 136],
        [0, 10, 0, 136],
        [0, 15, 0, 136],
        [0, 24, 0, 136],
        [0, 31, 0, 136],
        [0, 41, 0, 136],
        [0, 56, 1, 136],
        [0, 3, 0, 146],
        [0, 6, 0, 146],
        [0, 10, 0, 146],
        [0, 15, 0, 146],
        [0, 24, 0, 146],
        [0, 31, 0, 146],
        [0, 41, 0, 146],
        [0, 56, 1, 146],
        [0, 1, 0, 154],
        [0, 22, 1, 154],
        [0, 1, 0, 156],
        [0, 22, 1, 156],
        [0, 1, 0, 160],
        [0, 22, 1, 160],
        [0, 1, 0, 163],
        [0, 22, 1, 163],
        [0, 1, 0, 164],
        [0, 22, 1, 164],
        [0, 1, 0, 169],
        [0, 22, 1, 169],
        [0, 1, 0, 170],
        [0, 22, 1, 170],
        [0, 1, 0, 173],
        [0, 22, 1, 173],
        [0, 2, 0, 154],
        [0, 9, 0, 154],
        [0, 23, 0, 154],
        [0, 40, 1, 154],
        [0, 2, 0, 156],
        [0, 9, 0, 156],
        [0, 23, 0, 156],
        [0, 40, 1, 156],
        [0, 2, 0, 160],
        [0, 9, 0, 160],
        [0, 23, 0, 160],
        [0, 40, 1, 160],
        [0, 2, 0, 163],
        [0, 9, 0, 163],
        [0, 23, 0, 163],
        [0, 40, 1, 163],
        [0, 3, 0, 154],
        [0, 6, 0, 154],
        [0, 10, 0, 154],
        [0, 15, 0, 154],
        [0, 24, 0, 154],
        [0, 31, 0, 154],
        [0, 41, 0, 154],
        [0, 56, 1, 154],
        [0, 3, 0, 156],
        [0, 6, 0, 156],
        [0, 10, 0, 156],
        [0, 15, 0, 156],
        [0, 24, 0, 156],
        [0, 31, 0, 156],
        [0, 41, 0, 156],
        [0, 56, 1, 156],
        [0, 3, 0, 160],
        [0, 6, 0, 160],
        [0, 10, 0, 160],
        [0, 15, 0, 160],
        [0, 24, 0, 160],
        [0, 31, 0, 160],
        [0, 41, 0, 160],
        [0, 56, 1, 160],
        [0, 3, 0, 163],
        [0, 6, 0, 163],
        [0, 10, 0, 163],
        [0, 15, 0, 163],
        [0, 24, 0, 163],
        [0, 31, 0, 163],
        [0, 41, 0, 163],
        [0, 56, 1, 163],
        [0, 2, 0, 164],
        [0, 9, 0, 164],
        [0, 23, 0, 164],
        [0, 40, 1, 164],
        [0, 2, 0, 169],
        [0, 9, 0, 169],
        [0, 23, 0, 169],
        [0, 40, 1, 169],
        [0, 2, 0, 170],
        [0, 9, 0, 170],
        [0, 23, 0, 170],
        [0, 40, 1, 170],
        [0, 2, 0, 173],
        [0, 9, 0, 173],
        [0, 23, 0, 173],
        [0, 40, 1, 173],
        [0, 3, 0, 164],
        [0, 6, 0, 164],
        [0, 10, 0, 164],
        [0, 15, 0, 164],
        [0, 24, 0, 164],
        [0, 31, 0, 164],
        [0, 41, 0, 164],
        [0, 56, 1, 164],
        [0, 3, 0, 169],
        [0, 6, 0, 169],
        [0, 10, 0, 169],
        [0, 15, 0, 169],
        [0, 24, 0, 169],
        [0, 31, 0, 169],
        [0, 41, 0, 169],
        [0, 56, 1, 169],
        [0, 3, 0, 170],
        [0, 6, 0, 170],
        [0, 10, 0, 170],
        [0, 15, 0, 170],
        [0, 24, 0, 170],
        [0, 31, 0, 170],
        [0, 41, 0, 170],
        [0, 56, 1, 170],
        [0, 3, 0, 173],
        [0, 6, 0, 173],
        [0, 10, 0, 173],
        [0, 15, 0, 173],
        [0, 24, 0, 173],
        [0, 31, 0, 173],
        [0, 41, 0, 173],
        [0, 56, 1, 173],
        [0, 137, 0, 0],
        [0, 138, 0, 0],
        [0, 140, 0, 0],
        [0, 141, 0, 0],
        [0, 144, 0, 0],
        [0, 145, 0, 0],
        [0, 147, 0, 0],
        [0, 150, 0, 0],
        [0, 156, 0, 0],
        [0, 159, 0, 0],
        [0, 163, 0, 0],
        [0, 166, 0, 0],
        [0, 171, 0, 0],
        [0, 174, 0, 0],
        [0, 181, 0, 0],
        [0, 190, 0, 0],
        [0, 0, 1, 178],
        [0, 0, 1, 181],
        [0, 0, 1, 185],
        [0, 0, 1, 186],
        [0, 0, 1, 187],
        [0, 0, 1, 189],
        [0, 0, 1, 190],
        [0, 0, 1, 196],
        [0, 0, 1, 198],
        [0, 0, 1, 228],
        [0, 0, 1, 232],
        [0, 0, 1, 233],
        [0, 148, 0, 0],
        [0, 149, 0, 0],
        [0, 151, 0, 0],
        [0, 152, 0, 0],
        [0, 1, 0, 178],
        [0, 22, 1, 178],
        [0, 1, 0, 181],
        [0, 22, 1, 181],
        [0, 1, 0, 185],
        [0, 22, 1, 185],
        [0, 1, 0, 186],
        [0, 22, 1, 186],
        [0, 1, 0, 187],
        [0, 22, 1, 187],
        [0, 1, 0, 189],
        [0, 22, 1, 189],
        [0, 1, 0, 190],
        [0, 22, 1, 190],
        [0, 1, 0, 196],
        [0, 22, 1, 196],
        [0, 2, 0, 178],
        [0, 9, 0, 178],
        [0, 23, 0, 178],
        [0, 40, 1, 178],
        [0, 2, 0, 181],
        [0, 9, 0, 181],
        [0, 23, 0, 181],
        [0, 40, 1, 181],
        [0, 2, 0, 185],
        [0, 9, 0, 185],
        [0, 23, 0, 185],
        [0, 40, 1, 185],
        [0, 2, 0, 186],
        [0, 9, 0, 186],
        [0, 23, 0, 186],
        [0, 40, 1, 186],
        [0, 3, 0, 178],
        [0, 6, 0, 178],
        [0, 10, 0, 178],
        [0, 15, 0, 178],
        [0, 24, 0, 178],
        [0, 31, 0, 178],
        [0, 41, 0, 178],
        [0, 56, 1, 178],
        [0, 3, 0, 181],
        [0, 6, 0, 181],
        [0, 10, 0, 181],
        [0, 15, 0, 181],
        [0, 24, 0, 181],
        [0, 31, 0, 181],
        [0, 41, 0, 181],
        [0, 56, 1, 181],
        [0, 3, 0, 185],
        [0, 6, 0, 185],
        [0, 10, 0, 185],
        [0, 15, 0, 185],
        [0, 24, 0, 185],
        [0, 31, 0, 185],
        [0, 41, 0, 185],
        [0, 56, 1, 185],
        [0, 3, 0, 186],
        [0, 6, 0, 186],
        [0, 10, 0, 186],
        [0, 15, 0, 186],
        [0, 24, 0, 186],
        [0, 31, 0, 186],
        [0, 41, 0, 186],
        [0, 56, 1, 186],
        [0, 2, 0, 187],
        [0, 9, 0, 187],
        [0, 23, 0, 187],
        [0, 40, 1, 187],
        [0, 2, 0, 189],
        [0, 9, 0, 189],
        [0, 23, 0, 189],
        [0, 40, 1, 189],
        [0, 2, 0, 190],
        [0, 9, 0, 190],
        [0, 23, 0, 190],
        [0, 40, 1, 190],
        [0, 2, 0, 196],
        [0, 9, 0, 196],
        [0, 23, 0, 196],
        [0, 40, 1, 196],
        [0, 3, 0, 187],
        [0, 6, 0, 187],
        [0, 10, 0, 187],
        [0, 15, 0, 187],
        [0, 24, 0, 187],
        [0, 31, 0, 187],
        [0, 41, 0, 187],
        [0, 56, 1, 187],
        [0, 3, 0, 189],
        [0, 6, 0, 189],
        [0, 10, 0, 189],
        [0, 15, 0, 189],
        [0, 24, 0, 189],
        [0, 31, 0, 189],
        [0, 41, 0, 189],
        [0, 56, 1, 189],
        [0, 3, 0, 190],
        [0, 6, 0, 190],
        [0, 10, 0, 190],
        [0, 15, 0, 190],
        [0, 24, 0, 190],
        [0, 31, 0, 190],
        [0, 41, 0, 190],
        [0, 56, 1, 190],
        [0, 3, 0, 196],
        [0, 6, 0, 196],
        [0, 10, 0, 196],
        [0, 15, 0, 196],
        [0, 24, 0, 196],
        [0, 31, 0, 196],
        [0, 41, 0, 196],
        [0, 56, 1, 196],
        [0, 1, 0, 198],
        [0, 22, 1, 198],
        [0, 1, 0, 228],
        [0, 22, 1, 228],
        [0, 1, 0, 232],
        [0, 22, 1, 232],
        [0, 1, 0, 233],
        [0, 22, 1, 233],
        [0, 0, 1, 1],
        [0, 0, 1, 135],
        [0, 0, 1, 137],
        [0, 0, 1, 138],
        [0, 0, 1, 139],
        [0, 0, 1, 140],
        [0, 0, 1, 141],
        [0, 0, 1, 143],
        [0, 2, 0, 198],
        [0, 9, 0, 198],
        [0, 23, 0, 198],
        [0, 40, 1, 198],
        [0, 2, 0, 228],
        [0, 9, 0, 228],
        [0, 23, 0, 228],
        [0, 40, 1, 228],
        [0, 2, 0, 232],
        [0, 9, 0, 232],
        [0, 23, 0, 232],
        [0, 40, 1, 232],
        [0, 2, 0, 233],
        [0, 9, 0, 233],
        [0, 23, 0, 233],
        [0, 40, 1, 233],
        [0, 3, 0, 198],
        [0, 6, 0, 198],
        [0, 10, 0, 198],
        [0, 15, 0, 198],
        [0, 24, 0, 198],
        [0, 31, 0, 198],
        [0, 41, 0, 198],
        [0, 56, 1, 198],
        [0, 3, 0, 228],
        [0, 6, 0, 228],
        [0, 10, 0, 228],
        [0, 15, 0, 228],
        [0, 24, 0, 228],
        [0, 31, 0, 228],
        [0, 41, 0, 228],
        [0, 56, 1, 228],
        [0, 3, 0, 232],
        [0, 6, 0, 232],
        [0, 10, 0, 232],
        [0, 15, 0, 232],
        [0, 24, 0, 232],
        [0, 31, 0, 232],
        [0, 41, 0, 232],
        [0, 56, 1, 232],
        [0, 3, 0, 233],
        [0, 6, 0, 233],
        [0, 10, 0, 233],
        [0, 15, 0, 233],
        [0, 24, 0, 233],
        [0, 31, 0, 233],
        [0, 41, 0, 233],
        [0, 56, 1, 233],
        [0, 1, 0, 1],
        [0, 22, 1, 1],
        [0, 1, 0, 135],
        [0, 22, 1, 135],
        [0, 1, 0, 137],
        [0, 22, 1, 137],
        [0, 1, 0, 138],
        [0, 22, 1, 138],
        [0, 1, 0, 139],
        [0, 22, 1, 139],
        [0, 1, 0, 140],
        [0, 22, 1, 140],
        [0, 1, 0, 141],
        [0, 22, 1, 141],
        [0, 1, 0, 143],
        [0, 22, 1, 143],
        [0, 2, 0, 1],
        [0, 9, 0, 1],
        [0, 23, 0, 1],
        [0, 40, 1, 1],
        [0, 2, 0, 135],
        [0, 9, 0, 135],
        [0, 23, 0, 135],
        [0, 40, 1, 135],
        [0, 2, 0, 137],
        [0, 9, 0, 137],
        [0, 23, 0, 137],
        [0, 40, 1, 137],
        [0, 2, 0, 138],
        [0, 9, 0, 138],
        [0, 23, 0, 138],
        [0, 40, 1, 138],
        [0, 3, 0, 1],
        [0, 6, 0, 1],
        [0, 10, 0, 1],
        [0, 15, 0, 1],
        [0, 24, 0, 1],
        [0, 31, 0, 1],
        [0, 41, 0, 1],
        [0, 56, 1, 1],
        [0, 3, 0, 135],
        [0, 6, 0, 135],
        [0, 10, 0, 135],
        [0, 15, 0, 135],
        [0, 24, 0, 135],
        [0, 31, 0, 135],
        [0, 41, 0, 135],
        [0, 56, 1, 135],
        [0, 3, 0, 137],
        [0, 6, 0, 137],
        [0, 10, 0, 137],
        [0, 15, 0, 137],
        [0, 24, 0, 137],
        [0, 31, 0, 137],
        [0, 41, 0, 137],
        [0, 56, 1, 137],
        [0, 3, 0, 138],
        [0, 6, 0, 138],
        [0, 10, 0, 138],
        [0, 15, 0, 138],
        [0, 24, 0, 138],
        [0, 31, 0, 138],
        [0, 41, 0, 138],
        [0, 56, 1, 138],
        [0, 2, 0, 139],
        [0, 9, 0, 139],
        [0, 23, 0, 139],
        [0, 40, 1, 139],
        [0, 2, 0, 140],
        [0, 9, 0, 140],
        [0, 23, 0, 140],
        [0, 40, 1, 140],
        [0, 2, 0, 141],
        [0, 9, 0, 141],
        [0, 23, 0, 141],
        [0, 40, 1, 141],
        [0, 2, 0, 143],
        [0, 9, 0, 143],
        [0, 23, 0, 143],
        [0, 40, 1, 143],
        [0, 3, 0, 139],
        [0, 6, 0, 139],
        [0, 10, 0, 139],
        [0, 15, 0, 139],
        [0, 24, 0, 139],
        [0, 31, 0, 139],
        [0, 41, 0, 139],
        [0, 56, 1, 139],
        [0, 3, 0, 140],
        [0, 6, 0, 140],
        [0, 10, 0, 140],
        [0, 15, 0, 140],
        [0, 24, 0, 140],
        [0, 31, 0, 140],
        [0, 41, 0, 140],
        [0, 56, 1, 140],
        [0, 3, 0, 141],
        [0, 6, 0, 141],
        [0, 10, 0, 141],
        [0, 15, 0, 141],
        [0, 24, 0, 141],
        [0, 31, 0, 141],
        [0, 41, 0, 141],
        [0, 56, 1, 141],
        [0, 3, 0, 143],
        [0, 6, 0, 143],
        [0, 10, 0, 143],
        [0, 15, 0, 143],
        [0, 24, 0, 143],
        [0, 31, 0, 143],
        [0, 41, 0, 143],
        [0, 56, 1, 143],
        [0, 157, 0, 0],
        [0, 158, 0, 0],
        [0, 160, 0, 0],
        [0, 161, 0, 0],
        [0, 164, 0, 0],
        [0, 165, 0, 0],
        [0, 167, 0, 0],
        [0, 168, 0, 0],
        [0, 172, 0, 0],
        [0, 173, 0, 0],
        [0, 175, 0, 0],
        [0, 177, 0, 0],
        [0, 182, 0, 0],
        [0, 185, 0, 0],
        [0, 191, 0, 0],
        [0, 207, 0, 0],
        [0, 0, 1, 147],
        [0, 0, 1, 149],
        [0, 0, 1, 150],
        [0, 0, 1, 151],
        [0, 0, 1, 152],
        [0, 0, 1, 155],
        [0, 0, 1, 157],
        [0, 0, 1, 158],
        [0, 0, 1, 165],
        [0, 0, 1, 166],
        [0, 0, 1, 168],
        [0, 0, 1, 174],
        [0, 0, 1, 175],
        [0, 0, 1, 180],
        [0, 0, 1, 182],
        [0, 0, 1, 183],
        [0, 1, 0, 147],
        [0, 22, 1, 147],
        [0, 1, 0, 149],
        [0, 22, 1, 149],
        [0, 1, 0, 150],
        [0, 22, 1, 150],
        [0, 1, 0, 151],
        [0, 22, 1, 151],
        [0, 1, 0, 152],
        [0, 22, 1, 152],
        [0, 1, 0, 155],
        [0, 22, 1, 155],
        [0, 1, 0, 157],
        [0, 22, 1, 157],
        [0, 1, 0, 158],
        [0, 22, 1, 158],
        [0, 2, 0, 147],
        [0, 9, 0, 147],
        [0, 23, 0, 147],
        [0, 40, 1, 147],
        [0, 2, 0, 149],
        [0, 9, 0, 149],
        [0, 23, 0, 149],
        [0, 40, 1, 149],
        [0, 2, 0, 150],
        [0, 9, 0, 150],
        [0, 23, 0, 150],
        [0, 40, 1, 150],
        [0, 2, 0, 151],
        [0, 9, 0, 151],
        [0, 23, 0, 151],
        [0, 40, 1, 151],
        [0, 3, 0, 147],
        [0, 6, 0, 147],
        [0, 10, 0, 147],
        [0, 15, 0, 147],
        [0, 24, 0, 147],
        [0, 31, 0, 147],
        [0, 41, 0, 147],
        [0, 56, 1, 147],
        [0, 3, 0, 149],
        [0, 6, 0, 149],
        [0, 10, 0, 149],
        [0, 15, 0, 149],
        [0, 24, 0, 149],
        [0, 31, 0, 149],
        [0, 41, 0, 149],
        [0, 56, 1, 149],
        [0, 3, 0, 150],
        [0, 6, 0, 150],
        [0, 10, 0, 150],
        [0, 15, 0, 150],
        [0, 24, 0, 150],
        [0, 31, 0, 150],
        [0, 41, 0, 150],
        [0, 56, 1, 150],
        [0, 3, 0, 151],
        [0, 6, 0, 151],
        [0, 10, 0, 151],
        [0, 15, 0, 151],
        [0, 24, 0, 151],
        [0, 31, 0, 151],
        [0, 41, 0, 151],
        [0, 56, 1, 151],
        [0, 2, 0, 152],
        [0, 9, 0, 152],
        [0, 23, 0, 152],
        [0, 40, 1, 152],
        [0, 2, 0, 155],
        [0, 9, 0, 155],
        [0, 23, 0, 155],
        [0, 40, 1, 155],
        [0, 2, 0, 157],
        [0, 9, 0, 157],
        [0, 23, 0, 157],
        [0, 40, 1, 157],
        [0, 2, 0, 158],
        [0, 9, 0, 158],
        [0, 23, 0, 158],
        [0, 40, 1, 158],
        [0, 3, 0, 152],
        [0, 6, 0, 152],
        [0, 10, 0, 152],
        [0, 15, 0, 152],
        [0, 24, 0, 152],
        [0, 31, 0, 152],
        [0, 41, 0, 152],
        [0, 56, 1, 152],
        [0, 3, 0, 155],
        [0, 6, 0, 155],
        [0, 10, 0, 155],
        [0, 15, 0, 155],
        [0, 24, 0, 155],
        [0, 31, 0, 155],
        [0, 41, 0, 155],
        [0, 56, 1, 155],
        [0, 3, 0, 157],
        [0, 6, 0, 157],
        [0, 10, 0, 157],
        [0, 15, 0, 157],
        [0, 24, 0, 157],
        [0, 31, 0, 157],
        [0, 41, 0, 157],
        [0, 56, 1, 157],
        [0, 3, 0, 158],
        [0, 6, 0, 158],
        [0, 10, 0, 158],
        [0, 15, 0, 158],
        [0, 24, 0, 158],
        [0, 31, 0, 158],
        [0, 41, 0, 158],
        [0, 56, 1, 158],
        [0, 1, 0, 165],
        [0, 22, 1, 165],
        [0, 1, 0, 166],
        [0, 22, 1, 166],
        [0, 1, 0, 168],
        [0, 22, 1, 168],
        [0, 1, 0, 174],
        [0, 22, 1, 174],
        [0, 1, 0, 175],
        [0, 22, 1, 175],
        [0, 1, 0, 180],
        [0, 22, 1, 180],
        [0, 1, 0, 182],
        [0, 22, 1, 182],
        [0, 1, 0, 183],
        [0, 22, 1, 183],
        [0, 2, 0, 165],
        [0, 9, 0, 165],
        [0, 23, 0, 165],
        [0, 40, 1, 165],
        [0, 2, 0, 166],
        [0, 9, 0, 166],
        [0, 23, 0, 166],
        [0, 40, 1, 166],
        [0, 2, 0, 168],
        [0, 9, 0, 168],
        [0, 23, 0, 168],
        [0, 40, 1, 168],
        [0, 2, 0, 174],
        [0, 9, 0, 174],
        [0, 23, 0, 174],
        [0, 40, 1, 174],
        [0, 3, 0, 165],
        [0, 6, 0, 165],
        [0, 10, 0, 165],
        [0, 15, 0, 165],
        [0, 24, 0, 165],
        [0, 31, 0, 165],
        [0, 41, 0, 165],
        [0, 56, 1, 165],
        [0, 3, 0, 166],
        [0, 6, 0, 166],
        [0, 10, 0, 166],
        [0, 15, 0, 166],
        [0, 24, 0, 166],
        [0, 31, 0, 166],
        [0, 41, 0, 166],
        [0, 56, 1, 166],
        [0, 3, 0, 168],
        [0, 6, 0, 168],
        [0, 10, 0, 168],
        [0, 15, 0, 168],
        [0, 24, 0, 168],
        [0, 31, 0, 168],
        [0, 41, 0, 168],
        [0, 56, 1, 168],
        [0, 3, 0, 174],
        [0, 6, 0, 174],
        [0, 10, 0, 174],
        [0, 15, 0, 174],
        [0, 24, 0, 174],
        [0, 31, 0, 174],
        [0, 41, 0, 174],
        [0, 56, 1, 174],
        [0, 2, 0, 175],
        [0, 9, 0, 175],
        [0, 23, 0, 175],
        [0, 40, 1, 175],
        [0, 2, 0, 180],
        [0, 9, 0, 180],
        [0, 23, 0, 180],
        [0, 40, 1, 180],
        [0, 2, 0, 182],
        [0, 9, 0, 182],
        [0, 23, 0, 182],
        [0, 40, 1, 182],
        [0, 2, 0, 183],
        [0, 9, 0, 183],
        [0, 23, 0, 183],
        [0, 40, 1, 183],
        [0, 3, 0, 175],
        [0, 6, 0, 175],
        [0, 10, 0, 175],
        [0, 15, 0, 175],
        [0, 24, 0, 175],
        [0, 31, 0, 175],
        [0, 41, 0, 175],
        [0, 56, 1, 175],
        [0, 3, 0, 180],
        [0, 6, 0, 180],
        [0, 10, 0, 180],
        [0, 15, 0, 180],
        [0, 24, 0, 180],
        [0, 31, 0, 180],
        [0, 41, 0, 180],
        [0, 56, 1, 180],
        [0, 3, 0, 182],
        [0, 6, 0, 182],
        [0, 10, 0, 182],
        [0, 15, 0, 182],
        [0, 24, 0, 182],
        [0, 31, 0, 182],
        [0, 41, 0, 182],
        [0, 56, 1, 182],
        [0, 3, 0, 183],
        [0, 6, 0, 183],
        [0, 10, 0, 183],
        [0, 15, 0, 183],
        [0, 24, 0, 183],
        [0, 31, 0, 183],
        [0, 41, 0, 183],
        [0, 56, 1, 183],
        [0, 0, 1, 188],
        [0, 0, 1, 191],
        [0, 0, 1, 197],
        [0, 0, 1, 231],
        [0, 0, 1, 239],
        [0, 176, 0, 0],
        [0, 178, 0, 0],
        [0, 179, 0, 0],
        [0, 183, 0, 0],
        [0, 184, 0, 0],
        [0, 186, 0, 0],
        [0, 187, 0, 0],
        [0, 192, 0, 0],
        [0, 199, 0, 0],
        [0, 208, 0, 0],
        [0, 223, 0, 0],
        [0, 1, 0, 188],
        [0, 22, 1, 188],
        [0, 1, 0, 191],
        [0, 22, 1, 191],
        [0, 1, 0, 197],
        [0, 22, 1, 197],
        [0, 1, 0, 231],
        [0, 22, 1, 231],
        [0, 1, 0, 239],
        [0, 22, 1, 239],
        [0, 0, 1, 9],
        [0, 0, 1, 142],
        [0, 0, 1, 144],
        [0, 0, 1, 145],
        [0, 0, 1, 148],
        [0, 0, 1, 159],
        [0, 2, 0, 188],
        [0, 9, 0, 188],
        [0, 23, 0, 188],
        [0, 40, 1, 188],
        [0, 2, 0, 191],
        [0, 9, 0, 191],
        [0, 23, 0, 191],
        [0, 40, 1, 191],
        [0, 2, 0, 197],
        [0, 9, 0, 197],
        [0, 23, 0, 197],
        [0, 40, 1, 197],
        [0, 2, 0, 231],
        [0, 9, 0, 231],
        [0, 23, 0, 231],
        [0, 40, 1, 231],
        [0, 3, 0, 188],
        [0, 6, 0, 188],
        [0, 10, 0, 188],
        [0, 15, 0, 188],
        [0, 24, 0, 188],
        [0, 31, 0, 188],
        [0, 41, 0, 188],
        [0, 56, 1, 188],
        [0, 3, 0, 191],
        [0, 6, 0, 191],
        [0, 10, 0, 191],
        [0, 15, 0, 191],
        [0, 24, 0, 191],
        [0, 31, 0, 191],
        [0, 41, 0, 191],
        [0, 56, 1, 191],
        [0, 3, 0, 197],
        [0, 6, 0, 197],
        [0, 10, 0, 197],
        [0, 15, 0, 197],
        [0, 24, 0, 197],
        [0, 31, 0, 197],
        [0, 41, 0, 197],
        [0, 56, 1, 197],
        [0, 3, 0, 231],
        [0, 6, 0, 231],
        [0, 10, 0, 231],
        [0, 15, 0, 231],
        [0, 24, 0, 231],
        [0, 31, 0, 231],
        [0, 41, 0, 231],
        [0, 56, 1, 231],
        [0, 2, 0, 239],
        [0, 9, 0, 239],
        [0, 23, 0, 239],
        [0, 40, 1, 239],
        [0, 1, 0, 9],
        [0, 22, 1, 9],
        [0, 1, 0, 142],
        [0, 22, 1, 142],
        [0, 1, 0, 144],
        [0, 22, 1, 144],
        [0, 1, 0, 145],
        [0, 22, 1, 145],
        [0, 1, 0, 148],
        [0, 22, 1, 148],
        [0, 1, 0, 159],
        [0, 22, 1, 159],
        [0, 3, 0, 239],
        [0, 6, 0, 239],
        [0, 10, 0, 239],
        [0, 15, 0, 239],
        [0, 24, 0, 239],
        [0, 31, 0, 239],
        [0, 41, 0, 239],
        [0, 56, 1, 239],
        [0, 2, 0, 9],
        [0, 9, 0, 9],
        [0, 23, 0, 9],
        [0, 40, 1, 9],
        [0, 2, 0, 142],
        [0, 9, 0, 142],
        [0, 23, 0, 142],
        [0, 40, 1, 142],
        [0, 3, 0, 9],
        [0, 6, 0, 9],
        [0, 10, 0, 9],
        [0, 15, 0, 9],
        [0, 24, 0, 9],
        [0, 31, 0, 9],
        [0, 41, 0, 9],
        [0, 56, 1, 9],
        [0, 3, 0, 142],
        [0, 6, 0, 142],
        [0, 10, 0, 142],
        [0, 15, 0, 142],
        [0, 24, 0, 142],
        [0, 31, 0, 142],
        [0, 41, 0, 142],
        [0, 56, 1, 142],
        [0, 2, 0, 144],
        [0, 9, 0, 144],
        [0, 23, 0, 144],
        [0, 40, 1, 144],
        [0, 2, 0, 145],
        [0, 9, 0, 145],
        [0, 23, 0, 145],
        [0, 40, 1, 145],
        [0, 2, 0, 148],
        [0, 9, 0, 148],
        [0, 23, 0, 148],
        [0, 40, 1, 148],
        [0, 2, 0, 159],
        [0, 9, 0, 159],
        [0, 23, 0, 159],
        [0, 40, 1, 159],
        [0, 3, 0, 144],
        [0, 6, 0, 144],
        [0, 10, 0, 144],
        [0, 15, 0, 144],
        [0, 24, 0, 144],
        [0, 31, 0, 144],
        [0, 41, 0, 144],
        [0, 56, 1, 144],
        [0, 3, 0, 145],
        [0, 6, 0, 145],
        [0, 10, 0, 145],
        [0, 15, 0, 145],
        [0, 24, 0, 145],
        [0, 31, 0, 145],
        [0, 41, 0, 145],
        [0, 56, 1, 145],
        [0, 3, 0, 148],
        [0, 6, 0, 148],
        [0, 10, 0, 148],
        [0, 15, 0, 148],
        [0, 24, 0, 148],
        [0, 31, 0, 148],
        [0, 41, 0, 148],
        [0, 56, 1, 148],
        [0, 3, 0, 159],
        [0, 6, 0, 159],
        [0, 10, 0, 159],
        [0, 15, 0, 159],
        [0, 24, 0, 159],
        [0, 31, 0, 159],
        [0, 41, 0, 159],
        [0, 56, 1, 159],
        [0, 0, 1, 171],
        [0, 0, 1, 206],
        [0, 0, 1, 215],
        [0, 0, 1, 225],
        [0, 0, 1, 236],
        [0, 0, 1, 237],
        [0, 188, 0, 0],
        [0, 189, 0, 0],
        [0, 193, 0, 0],
        [0, 196, 0, 0],
        [0, 200, 0, 0],
        [0, 203, 0, 0],
        [0, 209, 0, 0],
        [0, 216, 0, 0],
        [0, 224, 0, 0],
        [0, 238, 0, 0],
        [0, 1, 0, 171],
        [0, 22, 1, 171],
        [0, 1, 0, 206],
        [0, 22, 1, 206],
        [0, 1, 0, 215],
        [0, 22, 1, 215],
        [0, 1, 0, 225],
        [0, 22, 1, 225],
        [0, 1, 0, 236],
        [0, 22, 1, 236],
        [0, 1, 0, 237],
        [0, 22, 1, 237],
        [0, 0, 1, 199],
        [0, 0, 1, 207],
        [0, 0, 1, 234],
        [0, 0, 1, 235],
        [0, 2, 0, 171],
        [0, 9, 0, 171],
        [0, 23, 0, 171],
        [0, 40, 1, 171],
        [0, 2, 0, 206],
        [0, 9, 0, 206],
        [0, 23, 0, 206],
        [0, 40, 1, 206],
        [0, 2, 0, 215],
        [0, 9, 0, 215],
        [0, 23, 0, 215],
        [0, 40, 1, 215],
        [0, 2, 0, 225],
        [0, 9, 0, 225],
        [0, 23, 0, 225],
        [0, 40, 1, 225],
        [0, 3, 0, 171],
        [0, 6, 0, 171],
        [0, 10, 0, 171],
        [0, 15, 0, 171],
        [0, 24, 0, 171],
        [0, 31, 0, 171],
        [0, 41, 0, 171],
        [0, 56, 1, 171],
        [0, 3, 0, 206],
        [0, 6, 0, 206],
        [0, 10, 0, 206],
        [0, 15, 0, 206],
        [0, 24, 0, 206],
        [0, 31, 0, 206],
        [0, 41, 0, 206],
        [0, 56, 1, 206],
        [0, 3, 0, 215],
        [0, 6, 0, 215],
        [0, 10, 0, 215],
        [0, 15, 0, 215],
        [0, 24, 0, 215],
        [0, 31, 0, 215],
        [0, 41, 0, 215],
        [0, 56, 1, 215],
        [0, 3, 0, 225],
        [0, 6, 0, 225],
        [0, 10, 0, 225],
        [0, 15, 0, 225],
        [0, 24, 0, 225],
        [0, 31, 0, 225],
        [0, 41, 0, 225],
        [0, 56, 1, 225],
        [0, 2, 0, 236],
        [0, 9, 0, 236],
        [0, 23, 0, 236],
        [0, 40, 1, 236],
        [0, 2, 0, 237],
        [0, 9, 0, 237],
        [0, 23, 0, 237],
        [0, 40, 1, 237],
        [0, 1, 0, 199],
        [0, 22, 1, 199],
        [0, 1, 0, 207],
        [0, 22, 1, 207],
        [0, 1, 0, 234],
        [0, 22, 1, 234],
        [0, 1, 0, 235],
        [0, 22, 1, 235],
        [0, 3, 0, 236],
        [0, 6, 0, 236],
        [0, 10, 0, 236],
        [0, 15, 0, 236],
        [0, 24, 0, 236],
        [0, 31, 0, 236],
        [0, 41, 0, 236],
        [0, 56, 1, 236],
        [0, 3, 0, 237],
        [0, 6, 0, 237],
        [0, 10, 0, 237],
        [0, 15, 0, 237],
        [0, 24, 0, 237],
        [0, 31, 0, 237],
        [0, 41, 0, 237],
        [0, 56, 1, 237],
        [0, 2, 0, 199],
        [0, 9, 0, 199],
        [0, 23, 0, 199],
        [0, 40, 1, 199],
        [0, 2, 0, 207],
        [0, 9, 0, 207],
        [0, 23, 0, 207],
        [0, 40, 1, 207],
        [0, 2, 0, 234],
        [0, 9, 0, 234],
        [0, 23, 0, 234],
        [0, 40, 1, 234],
        [0, 2, 0, 235],
        [0, 9, 0, 235],
        [0, 23, 0, 235],
        [0, 40, 1, 235],
        [0, 3, 0, 199],
        [0, 6, 0, 199],
        [0, 10, 0, 199],
        [0, 15, 0, 199],
        [0, 24, 0, 199],
        [0, 31, 0, 199],
        [0, 41, 0, 199],
        [0, 56, 1, 199],
        [0, 3, 0, 207],
        [0, 6, 0, 207],
        [0, 10, 0, 207],
        [0, 15, 0, 207],
        [0, 24, 0, 207],
        [0, 31, 0, 207],
        [0, 41, 0, 207],
        [0, 56, 1, 207],
        [0, 3, 0, 234],
        [0, 6, 0, 234],
        [0, 10, 0, 234],
        [0, 15, 0, 234],
        [0, 24, 0, 234],
        [0, 31, 0, 234],
        [0, 41, 0, 234],
        [0, 56, 1, 234],
        [0, 3, 0, 235],
        [0, 6, 0, 235],
        [0, 10, 0, 235],
        [0, 15, 0, 235],
        [0, 24, 0, 235],
        [0, 31, 0, 235],
        [0, 41, 0, 235],
        [0, 56, 1, 235],
        [0, 194, 0, 0],
        [0, 195, 0, 0],
        [0, 197, 0, 0],
        [0, 198, 0, 0],
        [0, 201, 0, 0],
        [0, 202, 0, 0],
        [0, 204, 0, 0],
        [0, 205, 0, 0],
        [0, 210, 0, 0],
        [0, 213, 0, 0],
        [0, 217, 0, 0],
        [0, 220, 0, 0],
        [0, 225, 0, 0],
        [0, 231, 0, 0],
        [0, 239, 0, 0],
        [0, 246, 0, 0],
        [0, 0, 1, 192],
        [0, 0, 1, 193],
        [0, 0, 1, 200],
        [0, 0, 1, 201],
        [0, 0, 1, 202],
        [0, 0, 1, 205],
        [0, 0, 1, 210],
        [0, 0, 1, 213],
        [0, 0, 1, 218],
        [0, 0, 1, 219],
        [0, 0, 1, 238],
        [0, 0, 1, 240],
        [0, 0, 1, 242],
        [0, 0, 1, 243],
        [0, 0, 1, 255],
        [0, 206, 0, 0],
        [0, 1, 0, 192],
        [0, 22, 1, 192],
        [0, 1, 0, 193],
        [0, 22, 1, 193],
        [0, 1, 0, 200],
        [0, 22, 1, 200],
        [0, 1, 0, 201],
        [0, 22, 1, 201],
        [0, 1, 0, 202],
        [0, 22, 1, 202],
        [0, 1, 0, 205],
        [0, 22, 1, 205],
        [0, 1, 0, 210],
        [0, 22, 1, 210],
        [0, 1, 0, 213],
        [0, 22, 1, 213],
        [0, 2, 0, 192],
        [0, 9, 0, 192],
        [0, 23, 0, 192],
        [0, 40, 1, 192],
        [0, 2, 0, 193],
        [0, 9, 0, 193],
        [0, 23, 0, 193],
        [0, 40, 1, 193],
        [0, 2, 0, 200],
        [0, 9, 0, 200],
        [0, 23, 0, 200],
        [0, 40, 1, 200],
        [0, 2, 0, 201],
        [0, 9, 0, 201],
        [0, 23, 0, 201],
        [0, 40, 1, 201],
        [0, 3, 0, 192],
        [0, 6, 0, 192],
        [0, 10, 0, 192],
        [0, 15, 0, 192],
        [0, 24, 0, 192],
        [0, 31, 0, 192],
        [0, 41, 0, 192],
        [0, 56, 1, 192],
        [0, 3, 0, 193],
        [0, 6, 0, 193],
        [0, 10, 0, 193],
        [0, 15, 0, 193],
        [0, 24, 0, 193],
        [0, 31, 0, 193],
        [0, 41, 0, 193],
        [0, 56, 1, 193],
        [0, 3, 0, 200],
        [0, 6, 0, 200],
        [0, 10, 0, 200],
        [0, 15, 0, 200],
        [0, 24, 0, 200],
        [0, 31, 0, 200],
        [0, 41, 0, 200],
        [0, 56, 1, 200],
        [0, 3, 0, 201],
        [0, 6, 0, 201],
        [0, 10, 0, 201],
        [0, 15, 0, 201],
        [0, 24, 0, 201],
        [0, 31, 0, 201],
        [0, 41, 0, 201],
        [0, 56, 1, 201],
        [0, 2, 0, 202],
        [0, 9, 0, 202],
        [0, 23, 0, 202],
        [0, 40, 1, 202],
        [0, 2, 0, 205],
        [0, 9, 0, 205],
        [0, 23, 0, 205],
        [0, 40, 1, 205],
        [0, 2, 0, 210],
        [0, 9, 0, 210],
        [0, 23, 0, 210],
        [0, 40, 1, 210],
        [0, 2, 0, 213],
        [0, 9, 0, 213],
        [0, 23, 0, 213],
        [0, 40, 1, 213],
        [0, 3, 0, 202],
        [0, 6, 0, 202],
        [0, 10, 0, 202],
        [0, 15, 0, 202],
        [0, 24, 0, 202],
        [0, 31, 0, 202],
        [0, 41, 0, 202],
        [0, 56, 1, 202],
        [0, 3, 0, 205],
        [0, 6, 0, 205],
        [0, 10, 0, 205],
        [0, 15, 0, 205],
        [0, 24, 0, 205],
        [0, 31, 0, 205],
        [0, 41, 0, 205],
        [0, 56, 1, 205],
        [0, 3, 0, 210],
        [0, 6, 0, 210],
        [0, 10, 0, 210],
        [0, 15, 0, 210],
        [0, 24, 0, 210],
        [0, 31, 0, 210],
        [0, 41, 0, 210],
        [0, 56, 1, 210],
        [0, 3, 0, 213],
        [0, 6, 0, 213],
        [0, 10, 0, 213],
        [0, 15, 0, 213],
        [0, 24, 0, 213],
        [0, 31, 0, 213],
        [0, 41, 0, 213],
        [0, 56, 1, 213],
        [0, 1, 0, 218],
        [0, 22, 1, 218],
        [0, 1, 0, 219],
        [0, 22, 1, 219],
        [0, 1, 0, 238],
        [0, 22, 1, 238],
        [0, 1, 0, 240],
        [0, 22, 1, 240],
        [0, 1, 0, 242],
        [0, 22, 1, 242],
        [0, 1, 0, 243],
        [0, 22, 1, 243],
        [0, 1, 0, 255],
        [0, 22, 1, 255],
        [0, 0, 1, 203],
        [0, 0, 1, 204],
        [0, 2, 0, 218],
        [0, 9, 0, 218],
        [0, 23, 0, 218],
        [0, 40, 1, 218],
        [0, 2, 0, 219],
        [0, 9, 0, 219],
        [0, 23, 0, 219],
        [0, 40, 1, 219],
        [0, 2, 0, 238],
        [0, 9, 0, 238],
        [0, 23, 0, 238],
        [0, 40, 1, 238],
        [0, 2, 0, 240],
        [0, 9, 0, 240],
        [0, 23, 0, 240],
        [0, 40, 1, 240],
        [0, 3, 0, 218],
        [0, 6, 0, 218],
        [0, 10, 0, 218],
        [0, 15, 0, 218],
        [0, 24, 0, 218],
        [0, 31, 0, 218],
        [0, 41, 0, 218],
        [0, 56, 1, 218],
        [0, 3, 0, 219],
        [0, 6, 0, 219],
        [0, 10, 0, 219],
        [0, 15, 0, 219],
        [0, 24, 0, 219],
        [0, 31, 0, 219],
        [0, 41, 0, 219],
        [0, 56, 1, 219],
        [0, 3, 0, 238],
        [0, 6, 0, 238],
        [0, 10, 0, 238],
        [0, 15, 0, 238],
        [0, 24, 0, 238],
        [0, 31, 0, 238],
        [0, 41, 0, 238],
        [0, 56, 1, 238],
        [0, 3, 0, 240],
        [0, 6, 0, 240],
        [0, 10, 0, 240],
        [0, 15, 0, 240],
        [0, 24, 0, 240],
        [0, 31, 0, 240],
        [0, 41, 0, 240],
        [0, 56, 1, 240],
        [0, 2, 0, 242],
        [0, 9, 0, 242],
        [0, 23, 0, 242],
        [0, 40, 1, 242],
        [0, 2, 0, 243],
        [0, 9, 0, 243],
        [0, 23, 0, 243],
        [0, 40, 1, 243],
        [0, 2, 0, 255],
        [0, 9, 0, 255],
        [0, 23, 0, 255],
        [0, 40, 1, 255],
        [0, 1, 0, 203],
        [0, 22, 1, 203],
        [0, 1, 0, 204],
        [0, 22, 1, 204],
        [0, 3, 0, 242],
        [0, 6, 0, 242],
        [0, 10, 0, 242],
        [0, 15, 0, 242],
        [0, 24, 0, 242],
        [0, 31, 0, 242],
        [0, 41, 0, 242],
        [0, 56, 1, 242],
        [0, 3, 0, 243],
        [0, 6, 0, 243],
        [0, 10, 0, 243],
        [0, 15, 0, 243],
        [0, 24, 0, 243],
        [0, 31, 0, 243],
        [0, 41, 0, 243],
        [0, 56, 1, 243],
        [0, 3, 0, 255],
        [0, 6, 0, 255],
        [0, 10, 0, 255],
        [0, 15, 0, 255],
        [0, 24, 0, 255],
        [0, 31, 0, 255],
        [0, 41, 0, 255],
        [0, 56, 1, 255],
        [0, 2, 0, 203],
        [0, 9, 0, 203],
        [0, 23, 0, 203],
        [0, 40, 1, 203],
        [0, 2, 0, 204],
        [0, 9, 0, 204],
        [0, 23, 0, 204],
        [0, 40, 1, 204],
        [0, 3, 0, 203],
        [0, 6, 0, 203],
        [0, 10, 0, 203],
        [0, 15, 0, 203],
        [0, 24, 0, 203],
        [0, 31, 0, 203],
        [0, 41, 0, 203],
        [0, 56, 1, 203],
        [0, 3, 0, 204],
        [0, 6, 0, 204],
        [0, 10, 0, 204],
        [0, 15, 0, 204],
        [0, 24, 0, 204],
        [0, 31, 0, 204],
        [0, 41, 0, 204],
        [0, 56, 1, 204],
        [0, 211, 0, 0],
        [0, 212, 0, 0],
        [0, 214, 0, 0],
        [0, 215, 0, 0],
        [0, 218, 0, 0],
        [0, 219, 0, 0],
        [0, 221, 0, 0],
        [0, 222, 0, 0],
        [0, 226, 0, 0],
        [0, 228, 0, 0],
        [0, 232, 0, 0],
        [0, 235, 0, 0],
        [0, 240, 0, 0],
        [0, 243, 0, 0],
        [0, 247, 0, 0],
        [0, 250, 0, 0],
        [0, 0, 1, 211],
        [0, 0, 1, 212],
        [0, 0, 1, 214],
        [0, 0, 1, 221],
        [0, 0, 1, 222],
        [0, 0, 1, 223],
        [0, 0, 1, 241],
        [0, 0, 1, 244],
        [0, 0, 1, 245],
        [0, 0, 1, 246],
        [0, 0, 1, 247],
        [0, 0, 1, 248],
        [0, 0, 1, 250],
        [0, 0, 1, 251],
        [0, 0, 1, 252],
        [0, 0, 1, 253],
        [0, 1, 0, 211],
        [0, 22, 1, 211],
        [0, 1, 0, 212],
        [0, 22, 1, 212],
        [0, 1, 0, 214],
        [0, 22, 1, 214],
        [0, 1, 0, 221],
        [0, 22, 1, 221],
        [0, 1, 0, 222],
        [0, 22, 1, 222],
        [0, 1, 0, 223],
        [0, 22, 1, 223],
        [0, 1, 0, 241],
        [0, 22, 1, 241],
        [0, 1, 0, 244],
        [0, 22, 1, 244],
        [0, 2, 0, 211],
        [0, 9, 0, 211],
        [0, 23, 0, 211],
        [0, 40, 1, 211],
        [0, 2, 0, 212],
        [0, 9, 0, 212],
        [0, 23, 0, 212],
        [0, 40, 1, 212],
        [0, 2, 0, 214],
        [0, 9, 0, 214],
        [0, 23, 0, 214],
        [0, 40, 1, 214],
        [0, 2, 0, 221],
        [0, 9, 0, 221],
        [0, 23, 0, 221],
        [0, 40, 1, 221],
        [0, 3, 0, 211],
        [0, 6, 0, 211],
        [0, 10, 0, 211],
        [0, 15, 0, 211],
        [0, 24, 0, 211],
        [0, 31, 0, 211],
        [0, 41, 0, 211],
        [0, 56, 1, 211],
        [0, 3, 0, 212],
        [0, 6, 0, 212],
        [0, 10, 0, 212],
        [0, 15, 0, 212],
        [0, 24, 0, 212],
        [0, 31, 0, 212],
        [0, 41, 0, 212],
        [0, 56, 1, 212],
        [0, 3, 0, 214],
        [0, 6, 0, 214],
        [0, 10, 0, 214],
        [0, 15, 0, 214],
        [0, 24, 0, 214],
        [0, 31, 0, 214],
        [0, 41, 0, 214],
        [0, 56, 1, 214],
        [0, 3, 0, 221],
        [0, 6, 0, 221],
        [0, 10, 0, 221],
        [0, 15, 0, 221],
        [0, 24, 0, 221],
        [0, 31, 0, 221],
        [0, 41, 0, 221],
        [0, 56, 1, 221],
        [0, 2, 0, 222],
        [0, 9, 0, 222],
        [0, 23, 0, 222],
        [0, 40, 1, 222],
        [0, 2, 0, 223],
        [0, 9, 0, 223],
        [0, 23, 0, 223],
        [0, 40, 1, 223],
        [0, 2, 0, 241],
        [0, 9, 0, 241],
        [0, 23, 0, 241],
        [0, 40, 1, 241],
        [0, 2, 0, 244],
        [0, 9, 0, 244],
        [0, 23, 0, 244],
        [0, 40, 1, 244],
        [0, 3, 0, 222],
        [0, 6, 0, 222],
        [0, 10, 0, 222],
        [0, 15, 0, 222],
        [0, 24, 0, 222],
        [0, 31, 0, 222],
        [0, 41, 0, 222],
        [0, 56, 1, 222],
        [0, 3, 0, 223],
        [0, 6, 0, 223],
        [0, 10, 0, 223],
        [0, 15, 0, 223],
        [0, 24, 0, 223],
        [0, 31, 0, 223],
        [0, 41, 0, 223],
        [0, 56, 1, 223],
        [0, 3, 0, 241],
        [0, 6, 0, 241],
        [0, 10, 0, 241],
        [0, 15, 0, 241],
        [0, 24, 0, 241],
        [0, 31, 0, 241],
        [0, 41, 0, 241],
        [0, 56, 1, 241],
        [0, 3, 0, 244],
        [0, 6, 0, 244],
        [0, 10, 0, 244],
        [0, 15, 0, 244],
        [0, 24, 0, 244],
        [0, 31, 0, 244],
        [0, 41, 0, 244],
        [0, 56, 1, 244],
        [0, 1, 0, 245],
        [0, 22, 1, 245],
        [0, 1, 0, 246],
        [0, 22, 1, 246],
        [0, 1, 0, 247],
        [0, 22, 1, 247],
        [0, 1, 0, 248],
        [0, 22, 1, 248],
        [0, 1, 0, 250],
        [0, 22, 1, 250],
        [0, 1, 0, 251],
        [0, 22, 1, 251],
        [0, 1, 0, 252],
        [0, 22, 1, 252],
        [0, 1, 0, 253],
        [0, 22, 1, 253],
        [0, 2, 0, 245],
        [0, 9, 0, 245],
        [0, 23, 0, 245],
        [0, 40, 1, 245],
        [0, 2, 0, 246],
        [0, 9, 0, 246],
        [0, 23, 0, 246],
        [0, 40, 1, 246],
        [0, 2, 0, 247],
        [0, 9, 0, 247],
        [0, 23, 0, 247],
        [0, 40, 1, 247],
        [0, 2, 0, 248],
        [0, 9, 0, 248],
        [0, 23, 0, 248],
        [0, 40, 1, 248],
        [0, 3, 0, 245],
        [0, 6, 0, 245],
        [0, 10, 0, 245],
        [0, 15, 0, 245],
        [0, 24, 0, 245],
        [0, 31, 0, 245],
        [0, 41, 0, 245],
        [0, 56, 1, 245],
        [0, 3, 0, 246],
        [0, 6, 0, 246],
        [0, 10, 0, 246],
        [0, 15, 0, 246],
        [0, 24, 0, 246],
        [0, 31, 0, 246],
        [0, 41, 0, 246],
        [0, 56, 1, 246],
        [0, 3, 0, 247],
        [0, 6, 0, 247],
        [0, 10, 0, 247],
        [0, 15, 0, 247],
        [0, 24, 0, 247],
        [0, 31, 0, 247],
        [0, 41, 0, 247],
        [0, 56, 1, 247],
        [0, 3, 0, 248],
        [0, 6, 0, 248],
        [0, 10, 0, 248],
        [0, 15, 0, 248],
        [0, 24, 0, 248],
        [0, 31, 0, 248],
        [0, 41, 0, 248],
        [0, 56, 1, 248],
        [0, 2, 0, 250],
        [0, 9, 0, 250],
        [0, 23, 0, 250],
        [0, 40, 1, 250],
        [0, 2, 0, 251],
        [0, 9, 0, 251],
        [0, 23, 0, 251],
        [0, 40, 1, 251],
        [0, 2, 0, 252],
        [0, 9, 0, 252],
        [0, 23, 0, 252],
        [0, 40, 1, 252],
        [0, 2, 0, 253],
        [0, 9, 0, 253],
        [0, 23, 0, 253],
        [0, 40, 1, 253],
        [0, 3, 0, 250],
        [0, 6, 0, 250],
        [0, 10, 0, 250],
        [0, 15, 0, 250],
        [0, 24, 0, 250],
        [0, 31, 0, 250],
        [0, 41, 0, 250],
        [0, 56, 1, 250],
        [0, 3, 0, 251],
        [0, 6, 0, 251],
        [0, 10, 0, 251],
        [0, 15, 0, 251],
        [0, 24, 0, 251],
        [0, 31, 0, 251],
        [0, 41, 0, 251],
        [0, 56, 1, 251],
        [0, 3, 0, 252],
        [0, 6, 0, 252],
        [0, 10, 0, 252],
        [0, 15, 0, 252],
        [0, 24, 0, 252],
        [0, 31, 0, 252],
        [0, 41, 0, 252],
        [0, 56, 1, 252],
        [0, 3, 0, 253],
        [0, 6, 0, 253],
        [0, 10, 0, 253],
        [0, 15, 0, 253],
        [0, 24, 0, 253],
        [0, 31, 0, 253],
        [0, 41, 0, 253],
        [0, 56, 1, 253],
        [0, 0, 1, 254],
        [0, 227, 0, 0],
        [0, 229, 0, 0],
        [0, 230, 0, 0],
        [0, 233, 0, 0],
        [0, 234, 0, 0],
        [0, 236, 0, 0],
        [0, 237, 0, 0],
        [0, 241, 0, 0],
        [0, 242, 0, 0],
        [0, 244, 0, 0],
        [0, 245, 0, 0],
        [0, 248, 0, 0],
        [0, 249, 0, 0],
        [0, 251, 0, 0],
        [0, 252, 0, 0],
        [0, 1, 0, 254],
        [0, 22, 1, 254],
        [0, 0, 1, 2],
        [0, 0, 1, 3],
        [0, 0, 1, 4],
        [0, 0, 1, 5],
        [0, 0, 1, 6],
        [0, 0, 1, 7],
        [0, 0, 1, 8],
        [0, 0, 1, 11],
        [0, 0, 1, 12],
        [0, 0, 1, 14],
        [0, 0, 1, 15],
        [0, 0, 1, 16],
        [0, 0, 1, 17],
        [0, 0, 1, 18],
        [0, 2, 0, 254],
        [0, 9, 0, 254],
        [0, 23, 0, 254],
        [0, 40, 1, 254],
        [0, 1, 0, 2],
        [0, 22, 1, 2],
        [0, 1, 0, 3],
        [0, 22, 1, 3],
        [0, 1, 0, 4],
        [0, 22, 1, 4],
        [0, 1, 0, 5],
        [0, 22, 1, 5],
        [0, 1, 0, 6],
        [0, 22, 1, 6],
        [0, 1, 0, 7],
        [0, 22, 1, 7],
        [0, 3, 0, 254],
        [0, 6, 0, 254],
        [0, 10, 0, 254],
        [0, 15, 0, 254],
        [0, 24, 0, 254],
        [0, 31, 0, 254],
        [0, 41, 0, 254],
        [0, 56, 1, 254],
        [0, 2, 0, 2],
        [0, 9, 0, 2],
        [0, 23, 0, 2],
        [0, 40, 1, 2],
        [0, 2, 0, 3],
        [0, 9, 0, 3],
        [0, 23, 0, 3],
        [0, 40, 1, 3],
        [0, 3, 0, 2],
        [0, 6, 0, 2],
        [0, 10, 0, 2],
        [0, 15, 0, 2],
        [0, 24, 0, 2],
        [0, 31, 0, 2],
        [0, 41, 0, 2],
        [0, 56, 1, 2],
        [0, 3, 0, 3],
        [0, 6, 0, 3],
        [0, 10, 0, 3],
        [0, 15, 0, 3],
        [0, 24, 0, 3],
        [0, 31, 0, 3],
        [0, 41, 0, 3],
        [0, 56, 1, 3],
        [0, 2, 0, 4],
        [0, 9, 0, 4],
        [0, 23, 0, 4],
        [0, 40, 1, 4],
        [0, 2, 0, 5],
        [0, 9, 0, 5],
        [0, 23, 0, 5],
        [0, 40, 1, 5],
        [0, 2, 0, 6],
        [0, 9, 0, 6],
        [0, 23, 0, 6],
        [0, 40, 1, 6],
        [0, 2, 0, 7],
        [0, 9, 0, 7],
        [0, 23, 0, 7],
        [0, 40, 1, 7],
        [0, 3, 0, 4],
        [0, 6, 0, 4],
        [0, 10, 0, 4],
        [0, 15, 0, 4],
        [0, 24, 0, 4],
        [0, 31, 0, 4],
        [0, 41, 0, 4],
        [0, 56, 1, 4],
        [0, 3, 0, 5],
        [0, 6, 0, 5],
        [0, 10, 0, 5],
        [0, 15, 0, 5],
        [0, 24, 0, 5],
        [0, 31, 0, 5],
        [0, 41, 0, 5],
        [0, 56, 1, 5],
        [0, 3, 0, 6],
        [0, 6, 0, 6],
        [0, 10, 0, 6],
        [0, 15, 0, 6],
        [0, 24, 0, 6],
        [0, 31, 0, 6],
        [0, 41, 0, 6],
        [0, 56, 1, 6],
        [0, 3, 0, 7],
        [0, 6, 0, 7],
        [0, 10, 0, 7],
        [0, 15, 0, 7],
        [0, 24, 0, 7],
        [0, 31, 0, 7],
        [0, 41, 0, 7],
        [0, 56, 1, 7],
        [0, 1, 0, 8],
        [0, 22, 1, 8],
        [0, 1, 0, 11],
        [0, 22, 1, 11],
        [0, 1, 0, 12],
        [0, 22, 1, 12],
        [0, 1, 0, 14],
        [0, 22, 1, 14],
        [0, 1, 0, 15],
        [0, 22, 1, 15],
        [0, 1, 0, 16],
        [0, 22, 1, 16],
        [0, 1, 0, 17],
        [0, 22, 1, 17],
        [0, 1, 0, 18],
        [0, 22, 1, 18],
        [0, 2, 0, 8],
        [0, 9, 0, 8],
        [0, 23, 0, 8],
        [0, 40, 1, 8],
        [0, 2, 0, 11],
        [0, 9, 0, 11],
        [0, 23, 0, 11],
        [0, 40, 1, 11],
        [0, 2, 0, 12],
        [0, 9, 0, 12],
        [0, 23, 0, 12],
        [0, 40, 1, 12],
        [0, 2, 0, 14],
        [0, 9, 0, 14],
        [0, 23, 0, 14],
        [0, 40, 1, 14],
        [0, 3, 0, 8],
        [0, 6, 0, 8],
        [0, 10, 0, 8],
        [0, 15, 0, 8],
        [0, 24, 0, 8],
        [0, 31, 0, 8],
        [0, 41, 0, 8],
        [0, 56, 1, 8],
        [0, 3, 0, 11],
        [0, 6, 0, 11],
        [0, 10, 0, 11],
        [0, 15, 0, 11],
        [0, 24, 0, 11],
        [0, 31, 0, 11],
        [0, 41, 0, 11],
        [0, 56, 1, 11],
        [0, 3, 0, 12],
        [0, 6, 0, 12],
        [0, 10, 0, 12],
        [0, 15, 0, 12],
        [0, 24, 0, 12],
        [0, 31, 0, 12],
        [0, 41, 0, 12],
        [0, 56, 1, 12],
        [0, 3, 0, 14],
        [0, 6, 0, 14],
        [0, 10, 0, 14],
        [0, 15, 0, 14],
        [0, 24, 0, 14],
        [0, 31, 0, 14],
        [0, 41, 0, 14],
        [0, 56, 1, 14],
        [0, 2, 0, 15],
        [0, 9, 0, 15],
        [0, 23, 0, 15],
        [0, 40, 1, 15],
        [0, 2, 0, 16],
        [0, 9, 0, 16],
        [0, 23, 0, 16],
        [0, 40, 1, 16],
        [0, 2, 0, 17],
        [0, 9, 0, 17],
        [0, 23, 0, 17],
        [0, 40, 1, 17],
        [0, 2, 0, 18],
        [0, 9, 0, 18],
        [0, 23, 0, 18],
        [0, 40, 1, 18],
        [0, 3, 0, 15],
        [0, 6, 0, 15],
        [0, 10, 0, 15],
        [0, 15, 0, 15],
        [0, 24, 0, 15],
        [0, 31, 0, 15],
        [0, 41, 0, 15],
        [0, 56, 1, 15],
        [0, 3, 0, 16],
        [0, 6, 0, 16],
        [0, 10, 0, 16],
        [0, 15, 0, 16],
        [0, 24, 0, 16],
        [0, 31, 0, 16],
        [0, 41, 0, 16],
        [0, 56, 1, 16],
        [0, 3, 0, 17],
        [0, 6, 0, 17],
        [0, 10, 0, 17],
        [0, 15, 0, 17],
        [0, 24, 0, 17],
        [0, 31, 0, 17],
        [0, 41, 0, 17],
        [0, 56, 1, 17],
        [0, 3, 0, 18],
        [0, 6, 0, 18],
        [0, 10, 0, 18],
        [0, 15, 0, 18],
        [0, 24, 0, 18],
        [0, 31, 0, 18],
        [0, 41, 0, 18],
        [0, 56, 1, 18],
        [0, 0, 1, 19],
        [0, 0, 1, 20],
        [0, 0, 1, 21],
        [0, 0, 1, 23],
        [0, 0, 1, 24],
        [0, 0, 1, 25],
        [0, 0, 1, 26],
        [0, 0, 1, 27],
        [0, 0, 1, 28],
        [0, 0, 1, 29],
        [0, 0, 1, 30],
        [0, 0, 1, 31],
        [0, 0, 1, 127],
        [0, 0, 1, 220],
        [0, 0, 1, 249],
        [0, 253, 0, 0],
        [0, 1, 0, 19],
        [0, 22, 1, 19],
        [0, 1, 0, 20],
        [0, 22, 1, 20],
        [0, 1, 0, 21],
        [0, 22, 1, 21],
        [0, 1, 0, 23],
        [0, 22, 1, 23],
        [0, 1, 0, 24],
        [0, 22, 1, 24],
        [0, 1, 0, 25],
        [0, 22, 1, 25],
        [0, 1, 0, 26],
        [0, 22, 1, 26],
        [0, 1, 0, 27],
        [0, 22, 1, 27],
        [0, 2, 0, 19],
        [0, 9, 0, 19],
        [0, 23, 0, 19],
        [0, 40, 1, 19],
        [0, 2, 0, 20],
        [0, 9, 0, 20],
        [0, 23, 0, 20],
        [0, 40, 1, 20],
        [0, 2, 0, 21],
        [0, 9, 0, 21],
        [0, 23, 0, 21],
        [0, 40, 1, 21],
        [0, 2, 0, 23],
        [0, 9, 0, 23],
        [0, 23, 0, 23],
        [0, 40, 1, 23],
        [0, 3, 0, 19],
        [0, 6, 0, 19],
        [0, 10, 0, 19],
        [0, 15, 0, 19],
        [0, 24, 0, 19],
        [0, 31, 0, 19],
        [0, 41, 0, 19],
        [0, 56, 1, 19],
        [0, 3, 0, 20],
        [0, 6, 0, 20],
        [0, 10, 0, 20],
        [0, 15, 0, 20],
        [0, 24, 0, 20],
        [0, 31, 0, 20],
        [0, 41, 0, 20],
        [0, 56, 1, 20],
        [0, 3, 0, 21],
        [0, 6, 0, 21],
        [0, 10, 0, 21],
        [0, 15, 0, 21],
        [0, 24, 0, 21],
        [0, 31, 0, 21],
        [0, 41, 0, 21],
        [0, 56, 1, 21],
        [0, 3, 0, 23],
        [0, 6, 0, 23],
        [0, 10, 0, 23],
        [0, 15, 0, 23],
        [0, 24, 0, 23],
        [0, 31, 0, 23],
        [0, 41, 0, 23],
        [0, 56, 1, 23],
        [0, 2, 0, 24],
        [0, 9, 0, 24],
        [0, 23, 0, 24],
        [0, 40, 1, 24],
        [0, 2, 0, 25],
        [0, 9, 0, 25],
        [0, 23, 0, 25],
        [0, 40, 1, 25],
        [0, 2, 0, 26],
        [0, 9, 0, 26],
        [0, 23, 0, 26],
        [0, 40, 1, 26],
        [0, 2, 0, 27],
        [0, 9, 0, 27],
        [0, 23, 0, 27],
        [0, 40, 1, 27],
        [0, 3, 0, 24],
        [0, 6, 0, 24],
        [0, 10, 0, 24],
        [0, 15, 0, 24],
        [0, 24, 0, 24],
        [0, 31, 0, 24],
        [0, 41, 0, 24],
        [0, 56, 1, 24],
        [0, 3, 0, 25],
        [0, 6, 0, 25],
        [0, 10, 0, 25],
        [0, 15, 0, 25],
        [0, 24, 0, 25],
        [0, 31, 0, 25],
        [0, 41, 0, 25],
        [0, 56, 1, 25],
        [0, 3, 0, 26],
        [0, 6, 0, 26],
        [0, 10, 0, 26],
        [0, 15, 0, 26],
        [0, 24, 0, 26],
        [0, 31, 0, 26],
        [0, 41, 0, 26],
        [0, 56, 1, 26],
        [0, 3, 0, 27],
        [0, 6, 0, 27],
        [0, 10, 0, 27],
        [0, 15, 0, 27],
        [0, 24, 0, 27],
        [0, 31, 0, 27],
        [0, 41, 0, 27],
        [0, 56, 1, 27],
        [0, 1, 0, 28],
        [0, 22, 1, 28],
        [0, 1, 0, 29],
        [0, 22, 1, 29],
        [0, 1, 0, 30],
        [0, 22, 1, 30],
        [0, 1, 0, 31],
        [0, 22, 1, 31],
        [0, 1, 0, 127],
        [0, 22, 1, 127],
        [0, 1, 0, 220],
        [0, 22, 1, 220],
        [0, 1, 0, 249],
        [0, 22, 1, 249],
        [0, 254, 0, 0],
        [0, 255, 0, 0],
        [0, 2, 0, 28],
        [0, 9, 0, 28],
        [0, 23, 0, 28],
        [0, 40, 1, 28],
        [0, 2, 0, 29],
        [0, 9, 0, 29],
        [0, 23, 0, 29],
        [0, 40, 1, 29],
        [0, 2, 0, 30],
        [0, 9, 0, 30],
        [0, 23, 0, 30],
        [0, 40, 1, 30],
        [0, 2, 0, 31],
        [0, 9, 0, 31],
        [0, 23, 0, 31],
        [0, 40, 1, 31],
        [0, 3, 0, 28],
        [0, 6, 0, 28],
        [0, 10, 0, 28],
        [0, 15, 0, 28],
        [0, 24, 0, 28],
        [0, 31, 0, 28],
        [0, 41, 0, 28],
        [0, 56, 1, 28],
        [0, 3, 0, 29],
        [0, 6, 0, 29],
        [0, 10, 0, 29],
        [0, 15, 0, 29],
        [0, 24, 0, 29],
        [0, 31, 0, 29],
        [0, 41, 0, 29],
        [0, 56, 1, 29],
        [0, 3, 0, 30],
        [0, 6, 0, 30],
        [0, 10, 0, 30],
        [0, 15, 0, 30],
        [0, 24, 0, 30],
        [0, 31, 0, 30],
        [0, 41, 0, 30],
        [0, 56, 1, 30],
        [0, 3, 0, 31],
        [0, 6, 0, 31],
        [0, 10, 0, 31],
        [0, 15, 0, 31],
        [0, 24, 0, 31],
        [0, 31, 0, 31],
        [0, 41, 0, 31],
        [0, 56, 1, 31],
        [0, 2, 0, 127],
        [0, 9, 0, 127],
        [0, 23, 0, 127],
        [0, 40, 1, 127],
        [0, 2, 0, 220],
        [0, 9, 0, 220],
        [0, 23, 0, 220],
        [0, 40, 1, 220],
        [0, 2, 0, 249],
        [0, 9, 0, 249],
        [0, 23, 0, 249],
        [0, 40, 1, 249],
        [0, 0, 1, 10],
        [0, 0, 1, 13],
        [0, 0, 1, 22],
        [0, -1, 0, 0],
        [0, 3, 0, 127],
        [0, 6, 0, 127],
        [0, 10, 0, 127],
        [0, 15, 0, 127],
        [0, 24, 0, 127],
        [0, 31, 0, 127],
        [0, 41, 0, 127],
        [0, 56, 1, 127],
        [0, 3, 0, 220],
        [0, 6, 0, 220],
        [0, 10, 0, 220],
        [0, 15, 0, 220],
        [0, 24, 0, 220],
        [0, 31, 0, 220],
        [0, 41, 0, 220],
        [0, 56, 1, 220],
        [0, 3, 0, 249],
        [0, 6, 0, 249],
        [0, 10, 0, 249],
        [0, 15, 0, 249],
        [0, 24, 0, 249],
        [0, 31, 0, 249],
        [0, 41, 0, 249],
        [0, 56, 1, 249],
        [0, 1, 0, 10],
        [0, 22, 1, 10],
        [0, 1, 0, 13],
        [0, 22, 1, 13],
        [0, 1, 0, 22],
        [0, 22, 1, 22],
        [0, -1, 0, 0],
        [0, -1, 0, 0],
        [0, 2, 0, 10],
        [0, 9, 0, 10],
        [0, 23, 0, 10],
        [0, 40, 1, 10],
        [0, 2, 0, 13],
        [0, 9, 0, 13],
        [0, 23, 0, 13],
        [0, 40, 1, 13],
        [0, 2, 0, 22],
        [0, 9, 0, 22],
        [0, 23, 0, 22],
        [0, 40, 1, 22],
        [0, -1, 0, 0],
        [0, -1, 0, 0],
        [0, -1, 0, 0],
        [0, -1, 0, 0],
        [0, 3, 0, 10],
        [0, 6, 0, 10],
        [0, 10, 0, 10],
        [0, 15, 0, 10],
        [0, 24, 0, 10],
        [0, 31, 0, 10],
        [0, 41, 0, 10],
        [0, 56, 1, 10],
        [0, 3, 0, 13],
        [0, 6, 0, 13],
        [0, 10, 0, 13],
        [0, 15, 0, 13],
        [0, 24, 0, 13],
        [0, 31, 0, 13],
        [0, 41, 0, 13],
        [0, 56, 1, 13],
        [0, 3, 0, 22],
        [0, 6, 0, 22],
        [0, 10, 0, 22],
        [0, 15, 0, 22],
        [0, 24, 0, 22],
        [0, 31, 0, 22],
        [0, 41, 0, 22],
        [0, 56, 1, 22],
        [0, -1, 0, 0],
        [0, -1, 0, 0],
        [0, -1, 0, 0],
        [0, -1, 0, 0],
        [0, -1, 0, 0],
        [0, -1, 0, 0],
        [0, -1, 0, 0],
        [0, -1, 0, 0]].slice
       (),
    Dream_hpack_Huffman_table = [0, encode_table, decode_table];
   runtime.caml_register_global
    (2, Dream_hpack_Huffman_table, "Dream_hpack__Huffman_table");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Dream_hpack__Huffman
//# unitInfo: Requires: Dream_hpack__Huffman_table, Faraday, Stdlib__Buffer
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    caml_check_bound = runtime.caml_check_bound,
    caml_ml_string_length = runtime.caml_ml_string_length,
    caml_string_get = runtime.caml_string_get;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Dream_hpack_Huffman_table = global_data.Dream_hpack__Huffman_table,
    Stdlib_Buffer = global_data.Stdlib__Buffer,
    Faraday = global_data.Faraday,
    _a_ = [1, 0],
    _b_ = [1, 0],
    _d_ = [1, 0],
    _c_ = [0, 0];
   function encoded_length(s){
    var len = caml_ml_string_length(s), bits = 0, i = 0;
    for(;;){
     if(i >= len) return (bits + 7 | 0) / 8 | 0;
     var
      input = caml_string_get(s, i),
      len_in_bits =
        caml_check_bound(Dream_hpack_Huffman_table[1], input)[1 + input][2],
      i$0 = i + 1 | 0,
      bits$0 = bits + len_in_bits | 0,
      bits = bits$0,
      i = i$0;
    }
   }
   function encode(t, s){
    var
     bits = [0, 0],
     bits_left = [0, 40],
     _g_ = caml_ml_string_length(s) - 1 | 0,
     _f_ = 0;
    if(_g_ >= 0){
     var i = _f_;
     for(;;){
      var
       _i_ = caml_string_get(s, i),
       match = caml_check_bound(Dream_hpack_Huffman_table[1], _i_)[1 + _i_],
       code_len = match[2],
       code = match[1];
      bits_left[1] = bits_left[1] - code_len | 0;
      bits[1] = bits[1] | code << bits_left[1];
      for(;;){
       if(32 < bits_left[1]) break;
       caml_call2(Faraday[8], t, bits[1] >>> 32 | 0);
       bits[1] = bits[1] << 8;
       bits_left[1] = bits_left[1] + 8 | 0;
      }
      var _j_ = i + 1 | 0;
      if(_g_ === i) break;
      var i = _j_;
     }
    }
    var _h_ = bits_left[1] < 40 ? 1 : 0;
    return _h_
            ? (bits
               [1]
              = bits[1] | (1 << bits_left[1]) - 1 | 0,
              caml_call2(Faraday[8], t, bits[1] >>> 32 | 0))
            : _h_;
   }
   function add_output(buffer, c){
    var _e_ = 0 !== c ? 1 : 0;
    return _e_ ? caml_call2(Stdlib_Buffer[12], buffer, c) : _e_;
   }
   function decode(s){
    var
     len = caml_ml_string_length(s),
     buffer = caml_call1(Stdlib_Buffer[1], len),
     id = 0,
     accept = 1,
     i = 0;
    for(;;){
     if(i < len){
      var
       input = caml_string_get(s, i),
       index = (id << 4) + (input >>> 4 | 0) | 0,
       match =
         caml_check_bound(Dream_hpack_Huffman_table[2], index)[1 + index],
       output = match[3],
       id$0 = match[1];
      add_output(buffer, output);
      if(-1 !== id$0){
       var
        index$0 = (id$0 << 4) + (input & 15) | 0,
        match$0 =
          caml_check_bound(Dream_hpack_Huffman_table[2], index$0)[1 + index$0],
        output$0 = match$0[3],
        accept$0 = match$0[2],
        id$1 = match$0[1];
       add_output(buffer, output$0);
       if(-1 !== id$1){
        var i$0 = i + 1 | 0, id = id$1, accept = accept$0, i = i$0;
        continue;
       }
       var match$1 = _a_;
      }
      else
       var match$1 = _b_;
     }
     else
      var match$1 = accept ? _c_ : _d_;
     if(0 === match$1[0]) return [0, caml_call1(Stdlib_Buffer[2], buffer)];
     var e = match$1[1];
     return [1, e];
    }
   }
   var Dream_hpack_Huffman = [0, encoded_length, encode, decode];
   runtime.caml_register_global
    (7, Dream_hpack_Huffman, "Dream_hpack__Huffman");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Dream_hpack__Dynamic_table
//# unitInfo: Requires: Stdlib, Stdlib__Array
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst = "",
    caml_check_bound = runtime.caml_check_bound,
    caml_ml_string_length = runtime.caml_ml_string_length,
    caml_mod = runtime.caml_mod;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    default_entry = [0, cst, cst, 32],
    Stdlib_Array = global_data.Stdlib__Array,
    Stdlib = global_data.Stdlib;
   function default_evict(param){return 0;}
   function create(opt, max_size){
    if(opt)
     var sth = opt[1], on_evict = sth;
    else
     var on_evict = default_evict;
    var capacity = caml_call2(Stdlib[17], 256, max_size);
    return [0,
            runtime.caml_make_vect(capacity, default_entry),
            0,
            0,
            capacity,
            0,
            max_size,
            on_evict];
   }
   function get(table, i){
    var _e_ = caml_mod(table[3] + i | 0, table[4]);
    return caml_check_bound(table[1], _e_)[1 + _e_];
   }
   function get$0(table, i){
    var match = get(table, i), value = match[2], name = match[1];
    return [0, name, value];
   }
   function entry_size(name, value){
    return (caml_ml_string_length(name) + caml_ml_string_length(value) | 0)
           + 32
           | 0;
   }
   function evict_one(table){
    var entries = table[1], capacity = table[4], on_evict = table[7];
    table[2] = table[2] - 1 | 0;
    var
     i = caml_mod(table[3] + table[2] | 0, capacity),
     match = caml_check_bound(entries, i)[1 + i],
     entry_size = match[3],
     value = match[2],
     name = match[1];
    entries[1 + i] = default_entry;
    table[5] = table[5] - entry_size | 0;
    var _d_ = on_evict !== default_evict ? 1 : 0;
    return _d_ ? caml_call1(on_evict, [0, name, value]) : _d_;
   }
   function increase_capacity(table){
    var new_capacity = 2 * table[4] | 0;
    function _c_(i){return i < table[2] ? get(table, i) : default_entry;}
    var new_entries = caml_call2(Stdlib_Array[1], new_capacity, _c_);
    table[1] = new_entries;
    table[3] = 0;
    table[4] = new_capacity;
    return 0;
   }
   function add(table){
    var max_size = table[6];
    return function(param){
     var
      value = param[2],
      name = param[1],
      entry_size$0 = entry_size(name, value);
     for(;;){
      if(0 >= table[5]) break;
      if(max_size >= (table[5] + entry_size$0 | 0)) break;
      evict_one(table);
     }
     var _a_ = (table[5] + entry_size$0 | 0) <= max_size ? 1 : 0;
     if(_a_){
      if(table[2] === table[4]) increase_capacity(table);
      table[2] = table[2] + 1 | 0;
      table[5] = table[5] + entry_size$0 | 0;
      var new_offset = caml_mod((table[3] + table[4] | 0) - 1 | 0, table[4]);
      caml_check_bound(table[1], new_offset)[1 + new_offset] = [0, name, value, entry_size$0];
      table[3] = new_offset;
      var _b_ = 0;
     }
     else
      var _b_ = _a_;
     return _b_;};
   }
   function table_size(table){return table[2];}
   function set_capacity(table, max_size){
    table[6] = max_size;
    for(;;){if(max_size >= table[5]) return 0; evict_one(table);}
   }
   var
    Dream_hpack_Dynamic_table =
      [0,
       default_entry,
       default_evict,
       create,
       get,
       get$0,
       entry_size,
       evict_one,
       increase_capacity,
       add,
       table_size,
       set_capacity];
   runtime.caml_register_global
    (3, Dream_hpack_Dynamic_table, "Dream_hpack__Dynamic_table");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Dream_hpack__Decoder
//# unitInfo: Requires: Angstrom, Dream_hpack__Dynamic_table, Dream_hpack__Huffman, Dream_hpack__Static_table
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Angstrom = global_data.Angstrom,
    Dream_hpack_Dynamic_table = global_data.Dream_hpack__Dynamic_table,
    Dream_hpack_Huffman = global_data.Dream_hpack__Huffman,
    Dream_hpack_Static_table = global_data.Dream_hpack__Static_table,
    _d_ = [1, 0],
    _a_ = [1, 0],
    _b_ = [0, 0],
    _c_ = [1, 0];
   function create(max_capacity){
    return [0,
            caml_call2(Dream_hpack_Dynamic_table[3], 0, max_capacity),
            max_capacity];
   }
   function set_capacity(param, capacity){
    var max_capacity = param[2], table = param[1];
    return max_capacity < capacity
            ? _a_
            : (caml_call2
               (Dream_hpack_Dynamic_table[11], table, capacity),
              _b_);
   }
   var decoding_error = caml_call1(Angstrom[51], _c_);
   function decode_int(prefix, n){
    var max_prefix = (1 << n) - 1 | 0, i = prefix & max_prefix;
    if(i < max_prefix) return caml_call1(Angstrom[51], i);
    function loop(i, m){
     function _A_(b){
      var i$0 = i + ((b & 127) << m) | 0;
      return 128 === (b & 128)
              ? loop(i$0, m + 7 | 0)
              : caml_call1(Angstrom[51], i$0);
     }
     return caml_call2(Angstrom[53], Angstrom[30], _A_);
    }
    return loop(i, 0);
   }
   function get_indexed_field(table, index){
    var
     static_table_size = Dream_hpack_Static_table[2],
     dynamic_table_size = caml_call1(Dream_hpack_Dynamic_table[10], table);
    if(0 !== index && (static_table_size + dynamic_table_size | 0) >= index){
     if(index > static_table_size)
      return [0,
              caml_call2
               (Dream_hpack_Dynamic_table[5],
                table,
                (index - static_table_size | 0) - 1 | 0)];
     var _z_ = index - 1 | 0;
     return [0,
             runtime.caml_check_bound(Dream_hpack_Static_table[3], _z_)
              [1 + _z_]];
    }
    return _d_;
   }
   function _e_(h){
    function _v_(string_length){
     var _x_ = caml_call1(Angstrom[12], string_length);
     function _y_(string_data){
      return 0 === (h & 128)
              ? [0, string_data]
              : caml_call1(Dream_hpack_Huffman[3], string_data);
     }
     return caml_call2(Angstrom[60], _y_, _x_);
    }
    var _w_ = decode_int(h, 7);
    return caml_call2(Angstrom[53], _w_, _v_);
   }
   var decode_string = caml_call2(Angstrom[53], Angstrom[30], _e_);
   function decode_header_field(table, prefix, prefix_length){
    function _r_(index){
     if(0 === index)
      var decode_string$0 = decode_string;
     else{
      var e = get_indexed_field(table, index);
      if(0 === e[0])
       var name = e[1][1], _u_ = caml_call1(Angstrom[51], [0, name]);
      else
       var _u_ = caml_call1(Angstrom[51], e);
      var decode_string$0 = _u_;
     }
     function _t_(name, value){
      if(0 === name[0]){
       var name$0 = name[1];
       if(0 === value[0]){
        var value$0 = value[1];
        return [0, [0, name$0, value$0]];
       }
       var e = value[1];
      }
      else
       var e = name[1];
      return [1, e];
     }
     return caml_call3(Angstrom[61], _t_, decode_string$0, decode_string);
    }
    var _s_ = decode_int(prefix, prefix_length);
    return caml_call2(Angstrom[53], _s_, _r_);
   }
   function decode_headers(t){
    var table = t[1];
    function loop(acc, saw_first_header){
     function _f_(is_eof){
      if(is_eof) return caml_call1(Angstrom[51], [0, acc]);
      function _g_(b){
       if(0 !== (b & 128)){
        var
         _p_ =
           function(index){
            var e = get_indexed_field(table, index);
            if(0 !== e[0]) return caml_call1(Angstrom[51], e);
            var match = e[1], value = match[2], name = match[1];
            return loop([0, [0, name, value, 0], acc], 1);
           },
         _q_ = decode_int(b, 7);
        return caml_call2(Angstrom[53], _q_, _p_);
       }
       if(64 === (b & 192)){
        var
         _h_ =
           function(e){
            if(0 !== e[0]) return caml_call1(Angstrom[51], e);
            var match = e[1], value = match[2], name = match[1];
            caml_call2(Dream_hpack_Dynamic_table[9], table, [0, name, value]);
            return loop([0, [0, name, value, 0], acc], 1);
           },
         _i_ = decode_header_field(table, b, 6);
        return caml_call2(Angstrom[53], _i_, _h_);
       }
       if(0 === (b & 240)){
        var
         _j_ =
           function(e){
            if(0 !== e[0]) return caml_call1(Angstrom[51], e);
            var match = e[1], value = match[2], name = match[1];
            return loop([0, [0, name, value, 0], acc], 1);
           },
         _k_ = decode_header_field(table, b, 4);
        return caml_call2(Angstrom[53], _k_, _j_);
       }
       if(16 === (b & 240)){
        var
         _l_ =
           function(e){
            if(0 !== e[0]) return caml_call1(Angstrom[51], e);
            var match = e[1], value = match[2], name = match[1];
            return loop([0, [0, name, value, 1], acc], 1);
           },
         _m_ = decode_header_field(table, b, 4);
        return caml_call2(Angstrom[53], _m_, _l_);
       }
       if(32 !== (b & 224)) return decoding_error;
       if(saw_first_header) return decoding_error;
       function _n_(capacity){
        var e = set_capacity(t, capacity);
        return 0 === e[0]
                ? loop(acc, saw_first_header)
                : caml_call1(Angstrom[51], e);
       }
       var _o_ = decode_int(b, 5);
       return caml_call2(Angstrom[53], _o_, _n_);
      }
      return caml_call2(Angstrom[53], Angstrom[30], _g_);
     }
     return caml_call2(Angstrom[53], Angstrom[24], _f_);
    }
    return loop(0, 0);
   }
   var Dream_hpack_Decoder = [0, create, set_capacity, decode_headers];
   runtime.caml_register_global
    (8, Dream_hpack_Decoder, "Dream_hpack__Decoder");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Dream_hpack__Encoder
//# unitInfo: Requires: Dream_hpack__Dynamic_table, Dream_hpack__Huffman, Dream_hpack__Static_table, Faraday, Stdlib__Hashtbl, Stdlib__Int, Stdlib__Map, Stdlib__Set, Stdlib__String
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    caml_ml_string_length = runtime.caml_ml_string_length,
    caml_string_equal = runtime.caml_string_equal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    never_indexed = [0, 16, 4],
    without_indexing = [0, 0, 4],
    incremental_indexing = [0, 64, 6],
    indexed = [0, 128, 7],
    Dream_hpack_Dynamic_table = global_data.Dream_hpack__Dynamic_table,
    Dream_hpack_Huffman = global_data.Dream_hpack__Huffman,
    Faraday = global_data.Faraday,
    Dream_hpack_Static_table = global_data.Dream_hpack__Static_table,
    Stdlib_Hashtbl = global_data.Stdlib__Hashtbl,
    Stdlib_String = global_data.Stdlib__String,
    Stdlib_Map = global_data.Stdlib__Map,
    Stdlib_Int = global_data.Stdlib__Int,
    Stdlib_Set = global_data.Stdlib__Set,
    equal = Stdlib_String[9];
   function hash(s){return caml_call1(Stdlib_Hashtbl[28], s);}
   var
    HeaderFieldsTbl = caml_call1(Stdlib_Hashtbl[26], [0, equal, hash]),
    ValueMap = caml_call1(Stdlib_Map[1], [0, Stdlib_String[10]]);
   function is_indexed(param){return 128 === param ? 1 : 0;}
   var
    BinaryFormat =
      [0,
       never_indexed,
       without_indexing,
       incremental_indexing,
       indexed,
       is_indexed];
   function create(capacity){
    var
     lookup_table = caml_call1(HeaderFieldsTbl[1], capacity),
     _j_ = 0,
     _k_ =
       [0,
        function(param){
         var
          value = param[2],
          name = param[1],
          map = caml_call2(HeaderFieldsTbl[7], lookup_table, name);
         if(1 === caml_call1(ValueMap[9], map))
          return caml_call2(HeaderFieldsTbl[6], lookup_table, name);
         var map$0 = caml_call2(ValueMap[6], value, map);
         return caml_call3(HeaderFieldsTbl[10], lookup_table, name, map$0);
        }];
    return [0,
            caml_call2(Dream_hpack_Dynamic_table[3], _k_, capacity),
            lookup_table,
            _j_];
   }
   function add(encoder){
    var lookup_table = encoder[2], table = encoder[1], next_seq = encoder[3];
    return function(entry){
     var value = entry[2], name = entry[1];
     caml_call2(Dream_hpack_Dynamic_table[9], table, entry);
     var match = caml_call2(HeaderFieldsTbl[8], lookup_table, name);
     if(match)
      var
       map = match[1],
       map$0 = caml_call3(ValueMap[2], value, next_seq, map);
     else
      var map$0 = caml_call2(ValueMap[5], value, next_seq);
     encoder[3] = next_seq + 1 | 0;
     return caml_call3(HeaderFieldsTbl[10], lookup_table, name, map$0);};
   }
   function encode_missing_value
   (encoder, without_indexing, token, name, value){
    var index = token + 1 | 0;
    return without_indexing
            ? [0, BinaryFormat[2], index]
            : (add(encoder)([0, name, value]), [0, BinaryFormat[3], index]);
   }
   function find_token(encoder, without_indexing, token, name, value){
    var i = token;
    for(;;){
     if(Dream_hpack_Static_table[2] <= i)
      return encode_missing_value
              (encoder, without_indexing, token, name, value);
     var
      match = runtime.caml_check_bound(Dream_hpack_Static_table[3], i)[1 + i],
      value$0 = match[2],
      name$0 = match[1];
     if(! caml_string_equal(name, name$0))
      return encode_missing_value
              (encoder, without_indexing, token, name, value);
     if(caml_string_equal(value$0, value))
      return [0, BinaryFormat[4], i + 1 | 0];
     var i$0 = i + 1 | 0, i = i$0;
    }
   }
   function seq_to_index(next_seq, seq){
    return (Dream_hpack_Static_table[2] + next_seq | 0) - seq | 0;
   }
   var
    IntSet = caml_call1(Stdlib_Set[1], [0, Stdlib_Int[9]]),
    tokens_without_indexing =
      caml_call1
       (IntSet[38],
        [0,
         Dream_hpack_Static_table[1][3],
         [0,
          Dream_hpack_Static_table[1][12],
          [0,
           Dream_hpack_Static_table[1][19],
           [0,
            Dream_hpack_Static_table[1][25],
            [0,
             Dream_hpack_Static_table[1][31],
             [0,
              Dream_hpack_Static_table[1][32],
              [0,
               Dream_hpack_Static_table[1][37],
               [0, Dream_hpack_Static_table[1][46], 0]]]]]]]]);
   function is_without_indexing(token){
    var _i_ = -1 !== token ? 1 : 0;
    return _i_ ? caml_call2(IntSet[31], token, tokens_without_indexing) : _i_;
   }
   function encode(encoder){
    var lookup_table = encoder[2], next_seq = encoder[3];
    return function(param){
     var
      sensitive = param[3],
      value = param[2],
      name = param[1],
      token = caml_call1(Dream_hpack_Static_table[4], name),
      token_found_in_static_table = -1 !== token ? 1 : 0;
     if(! sensitive){
      var _b_ = -1 !== token ? 1 : 0;
      if(_b_){
       var _c_ = token === Dream_hpack_Static_table[1][14] ? 1 : 0;
       if(_c_)
        var _d_ = _c_;
       else
        var
         _e_ = token === Dream_hpack_Static_table[1][23] ? 1 : 0,
         _d_ = _e_ ? caml_ml_string_length(value) < 20 ? 1 : 0 : _e_;
      }
      else
       var _d_ = _b_;
      if(! _d_){
       if(token_found_in_static_table){
        var match$0 = caml_call2(HeaderFieldsTbl[8], lookup_table, name);
        if(! match$0){
         var without_indexing$0 = is_without_indexing(token);
         return find_token(encoder, without_indexing$0, token, name, value);
        }
        var
         map$0 = match$0[1],
         match$1 = caml_call2(ValueMap[18], value, map$0);
        if(match$1){
         var seq = match$1[1], _g_ = seq_to_index(next_seq, seq);
         return [0, BinaryFormat[4], _g_];
        }
        var without_indexing = is_without_indexing(token);
        return find_token(encoder, without_indexing, token, name, value);
       }
       var match$2 = caml_call2(HeaderFieldsTbl[8], lookup_table, name);
       if(! match$2)
        return is_without_indexing(token)
                ? [0, BinaryFormat[2], 0]
                : (add(encoder)([0, name, value]), [0, BinaryFormat[3], 0]);
       var
        map$1 = match$2[1],
        match$3 = caml_call2(ValueMap[18], value, map$1);
       if(match$3){
        var seq$0 = match$3[1], _h_ = seq_to_index(next_seq, seq$0);
        return [0, BinaryFormat[4], _h_];
       }
       var
        index$0 = seq_to_index(next_seq, caml_call1(ValueMap[15], map$1)[2]);
       return is_without_indexing(token)
               ? [0, BinaryFormat[2], index$0]
               : (add
                   (encoder)
                  ([0, name, value]),
                 [0, BinaryFormat[3], index$0]);
      }
     }
     if(token_found_in_static_table)
      var index = token + 1 | 0;
     else{
      var match = caml_call2(HeaderFieldsTbl[8], lookup_table, name);
      if(match)
       var
        map = match[1],
        any_entry = caml_call1(ValueMap[15], map)[2],
        _f_ = seq_to_index(next_seq, any_entry);
      else
       var _f_ = 0;
      var index = _f_;
     }
     return [0, BinaryFormat[1], index];};
   }
   function encode_int(t, prefix, n, i){
    var max_prefix = (1 << n) - 1 | 0;
    if(i < max_prefix) return caml_call2(Faraday[8], t, prefix | i);
    var i$0 = i - max_prefix | 0;
    caml_call2(Faraday[8], t, prefix | max_prefix);
    var i$1 = i$0;
    for(;;){
     if(128 > i$1) return caml_call2(Faraday[8], t, i$1);
     caml_call2(Faraday[8], t, i$1 & 127 | 128);
     var i$2 = i$1 >>> 7 | 0, i$1 = i$2;
    }
   }
   function encode_string(t, s){
    var
     string_length = caml_ml_string_length(s),
     huffman_length = caml_call1(Dream_hpack_Huffman[1], s);
    return string_length < huffman_length
            ? (encode_int
               (t, 0, 7, string_length),
              caml_call4(Faraday[3], t, 0, 0, s))
            : (encode_int
               (t, 128, 7, huffman_length),
              caml_call2(Dream_hpack_Huffman[2], t, s));
   }
   function encode_header(encoder, t, header){
    var
     value = header[2],
     name = header[1],
     _a_ = encode(encoder)(header),
     index = _a_[2],
     match = _a_[1],
     prefix_length = match[2],
     prefix = match[1];
    encode_int(t, prefix, prefix_length, index);
    if(caml_call1(BinaryFormat[5], prefix)) return 0;
    if(0 === index) encode_string(t, name);
    return encode_string(t, value);
   }
   function set_capacity(param, new_capacity){
    var table = param[1];
    return caml_call2(Dream_hpack_Dynamic_table[11], table, new_capacity);
   }
   var
    Dream_hpack_Encoder =
      [0,
       HeaderFieldsTbl,
       ValueMap,
       BinaryFormat,
       create,
       add,
       encode,
       encode_int,
       encode_header,
       set_capacity];
   runtime.caml_register_global
    (13, Dream_hpack_Encoder, "Dream_hpack__Encoder");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Dream_hpack__Hpack
//# unitInfo: Requires: Dream_hpack__Decoder, Dream_hpack__Encoder, Dream_hpack__Types
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    global_data = runtime.caml_get_global_data(),
    Dream_hpack_Decoder = global_data.Dream_hpack__Decoder,
    Dream_hpack_Encoder = global_data.Dream_hpack__Encoder,
    Dream_hpack_Hpack =
      [0,
       [0,
        Dream_hpack_Encoder[4],
        Dream_hpack_Encoder[8],
        Dream_hpack_Encoder[9]],
       Dream_hpack_Decoder];
   runtime.caml_register_global(2, Dream_hpack_Hpack, "Dream_hpack__Hpack");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
