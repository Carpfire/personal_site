// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Dream_h2_lwt
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, Dream_h2_lwt = [0];
   runtime.caml_register_global(0, Dream_h2_lwt, "Dream_h2_lwt");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Dream_h2_lwt__H2_lwt_intf
(function(globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, Dream_h2_lwt_H2_lwt_intf = [0];
   runtime.caml_register_global
    (0, Dream_h2_lwt_H2_lwt_intf, "Dream_h2_lwt__H2_lwt_intf");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Dream_h2_lwt__H2_lwt
//# unitInfo: Requires: Dream_h2__H2, Dream_h2_lwt__H2_lwt_intf, Lwt
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Lwt = global_data.Lwt,
    Dream_h2_H2 = global_data.Dream_h2__H2;
   function Server(Server_runtime){
    function create_connection_handler
    (opt, request_handler, error_handler, client_addr, socket){
     if(opt)
      var sth = opt[1], config = sth;
     else
      var config = Dream_h2_H2[11][1];
     var
      _e_ = caml_call1(request_handler, client_addr),
      _f_ = [0, caml_call1(error_handler, client_addr)],
      connection = caml_call3(Dream_h2_H2[12][1], [0, config], _f_, _e_),
      _g_ = Dream_h2_H2[12];
     return caml_call5
             (Server_runtime[2],
              config[1],
              [0,
               _g_[3],
               _g_[4],
               _g_[5],
               _g_[9],
               _g_[6],
               _g_[7],
               _g_[8],
               _g_[10],
               _g_[11],
               _g_[12]],
              connection,
              client_addr,
              socket);
    }
    return [0, create_connection_handler];
   }
   function Client(Client_runtime){
    function create_connection(opt, push_handler, error_handler, socket){
     if(opt)
      var sth = opt[1], config = sth;
     else
      var config = Dream_h2_H2[11][1];
     var
      connection =
        caml_call4
         (Dream_h2_H2[13][1], [0, config], push_handler, error_handler, 0);
     function _b_(runtime){return [0, connection, runtime];}
     var
      _c_ = Dream_h2_H2[13],
      _d_ =
        caml_call4
         (Client_runtime[1],
          config[1],
          [0,
           _c_[6],
           _c_[7],
           _c_[8],
           _c_[12],
           _c_[9],
           _c_[10],
           _c_[11],
           _c_[13],
           _c_[14],
           _c_[5]],
          connection,
          socket);
     return caml_call2(Lwt[33][2], _d_, _b_);
    }
    function request(t){return caml_call1(Dream_h2_H2[13][3], t[1]);}
    function ping(payload, off, param){
     var
      connection = param[1],
      match = caml_call1(Lwt[22], 0),
      u = match[2],
      t = match[1],
      _a_ = caml_call1(Lwt[2], u);
     caml_call4(Dream_h2_H2[13][4], connection, payload, off, _a_);
     return t;
    }
    function shutdown(t){return caml_call1(Client_runtime[3], t[2]);}
    function is_closed(t){return caml_call1(Client_runtime[4], t[2]);}
    return [0, create_connection, request, ping, shutdown, is_closed];
   }
   var Dream_h2_lwt_H2_lwt = [0, Server, Client];
   runtime.caml_register_global
    (2, Dream_h2_lwt_H2_lwt, "Dream_h2_lwt__H2_lwt");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJkcmVhbV9oMl9sd3QuY21hLmpzIiwic291cmNlUm9vdCI6IiIsIm5hbWVzIjpbImNyZWF0ZV9jb25uZWN0aW9uX2hhbmRsZXIiLCJvcHQiLCJyZXF1ZXN0X2hhbmRsZXIiLCJlcnJvcl9oYW5kbGVyIiwiY2xpZW50X2FkZHIiLCJzb2NrZXQiLCJzdGgiLCJjb25maWciLCJjb25uZWN0aW9uIiwiY3JlYXRlX2Nvbm5lY3Rpb24iLCJwdXNoX2hhbmRsZXIiLCJydW50aW1lIiwicmVxdWVzdCIsInQiLCJwaW5nIiwicGF5bG9hZCIsIm9mZiIsInUiLCJzaHV0ZG93biIsImlzX2Nsb3NlZCJdLCJzb3VyY2VzIjpbIi9ob21lL2xpYW0tY2FycGVudGVyLy5vcGFtL3BlcnNvbmFsLXNpdGUvbGliL2RyZWFtLWh0dHBhZi9kcmVhbS1oMi1sd3QvaDJfbHd0Lm1sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0U7Ozs7Ozs7Ozs7RTs7Ozs7Ozs7O0c7Ozs7O0c7Ozs7O0c7Ozs7O0c7Ozs7O0c7Ozs7Ozs7Ozs7YUE0Q01BO0tBQ0VDLEtBQ0RDLGlCQUNBQyxlQUNEQyxhQUNBQztLQUVGLEdBTklKO1VBQVNLLE1BQVRMLFFBQUFNLFNBQVNEOztVQUFUQztLQVVBO01BQUEsTUFBQSxXQVRETCxpQkFFREU7TUFNaUIsVUFBQSxXQVBoQkQsZUFDREM7TUFHRUksYUFDRixtQ0FQRUQ7O0tBWUosT0FBQTs7Y0FaSUE7Ozs7Ozs7Ozs7OztjQU1BQztjQUhGSjtjQUNBQztJQWFNO0lBdkJ5QyxXQUsvQ0w7OzthQWdDQVMsa0JBQ0VSLEtBQ0RTLGNBQ0FQLGVBQ0RFO0tBRUYsR0FMSUo7VUFBU0ssTUFBVEwsUUFBQU0sU0FBU0Q7O1VBQVRDO0tBTUY7TUFERUM7UUFDRjtrQ0FORUQsU0FDREcsY0FDQVA7S0FNSCxhQUtRUSxTQUFXLFdBUmZILFlBUUlHLFNBQWtDO0tBTDFDOztNQUFBO1FBQUE7O1VBUklKOzs7Ozs7Ozs7Ozs7VUFLQUM7VUFGRkg7S0FVRSxPQUFBO0lBQXNDO2FBRXhDTyxRQUFRQyxHQUFJLHNDQUFKQSxNQUE2QzthQUVyREMsS0FBTUMsU0FBU0M7S0FDTjtNQURZUjtNQUNaLFFBQUE7TUFBSlM7TUFBSEo7TUFDK0MsTUFBQSxtQkFENUNJO0tBQ1AsK0JBRnVCVCxZQUFmTyxTQUFTQztLQUVqQixPQURJSDs7YUFJRkssU0FBU0wsR0FBSSxxQ0FBSkEsTUFBcUM7YUFDOUNNLFVBQVVOLEdBQUkscUNBQUpBLE1BQXNDO0lBbkNELFdBVy9DSixtQkFnQkFHLFNBRUFFLE1BS0FJLFVBQ0FDOzs7Ozs7RSIsInNvdXJjZXNDb250ZW50IjpbIigqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgMjAxNyBJbmhhYml0ZWQgVHlwZSBMTEMuXG4gKiAgQ29weXJpZ2h0IChjKSAyMDE5IEFudG9uaW8gTi4gTW9udGVpcm8uXG4gKlxuICogIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKlxuICogIFJlZGlzdHJpYnV0aW9uIGFuZCB1c2UgaW4gc291cmNlIGFuZCBiaW5hcnkgZm9ybXMsIHdpdGggb3Igd2l0aG91dFxuICogIG1vZGlmaWNhdGlvbiwgYXJlIHBlcm1pdHRlZCBwcm92aWRlZCB0aGF0IHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uc1xuICogIGFyZSBtZXQ6XG4gKlxuICogIDEuIFJlZGlzdHJpYnV0aW9ucyBvZiBzb3VyY2UgY29kZSBtdXN0IHJldGFpbiB0aGUgYWJvdmUgY29weXJpZ2h0XG4gKiAgICAgbm90aWNlLCB0aGlzIGxpc3Qgb2YgY29uZGl0aW9ucyBhbmQgdGhlIGZvbGxvd2luZyBkaXNjbGFpbWVyLlxuICpcbiAqICAyLiBSZWRpc3RyaWJ1dGlvbnMgaW4gYmluYXJ5IGZvcm0gbXVzdCByZXByb2R1Y2UgdGhlIGFib3ZlIGNvcHlyaWdodFxuICogICAgIG5vdGljZSwgdGhpcyBsaXN0IG9mIGNvbmRpdGlvbnMgYW5kIHRoZSBmb2xsb3dpbmcgZGlzY2xhaW1lciBpbiB0aGVcbiAqICAgICBkb2N1bWVudGF0aW9uIGFuZC9vciBvdGhlciBtYXRlcmlhbHMgcHJvdmlkZWQgd2l0aCB0aGUgZGlzdHJpYnV0aW9uLlxuICpcbiAqICAzLiBOZWl0aGVyIHRoZSBuYW1lIG9mIHRoZSBhdXRob3Igbm9yIHRoZSBuYW1lcyBvZiBoaXMgY29udHJpYnV0b3JzXG4gKiAgICAgbWF5IGJlIHVzZWQgdG8gZW5kb3JzZSBvciBwcm9tb3RlIHByb2R1Y3RzIGRlcml2ZWQgZnJvbSB0aGlzIHNvZnR3YXJlXG4gKiAgICAgd2l0aG91dCBzcGVjaWZpYyBwcmlvciB3cml0dGVuIHBlcm1pc3Npb24uXG4gKlxuICogIFRISVMgU09GVFdBUkUgSVMgUFJPVklERUQgQlkgVEhFIENPTlRSSUJVVE9SUyBgYEFTIElTJycgQU5EIEFOWSBFWFBSRVNTXG4gKiAgT1IgSU1QTElFRCBXQVJSQU5USUVTLCBJTkNMVURJTkcsIEJVVCBOT1QgTElNSVRFRCBUTywgVEhFIElNUExJRURcbiAqICBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSBBTkQgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQVJFXG4gKiAgRElTQ0xBSU1FRC4gIElOIE5PIEVWRU5UIFNIQUxMIFRIRSBBVVRIT1JTIE9SIENPTlRSSUJVVE9SUyBCRSBMSUFCTEUgRk9SXG4gKiAgQU5ZIERJUkVDVCwgSU5ESVJFQ1QsIElOQ0lERU5UQUwsIFNQRUNJQUwsIEVYRU1QTEFSWSwgT1IgQ09OU0VRVUVOVElBTFxuICogIERBTUFHRVMgKElOQ0xVRElORywgQlVUIE5PVCBMSU1JVEVEIFRPLCBQUk9DVVJFTUVOVCBPRiBTVUJTVElUVVRFIEdPT0RTXG4gKiAgT1IgU0VSVklDRVM7IExPU1MgT0YgVVNFLCBEQVRBLCBPUiBQUk9GSVRTOyBPUiBCVVNJTkVTUyBJTlRFUlJVUFRJT04pXG4gKiAgSE9XRVZFUiBDQVVTRUQgQU5EIE9OIEFOWSBUSEVPUlkgT0YgTElBQklMSVRZLCBXSEVUSEVSIElOIENPTlRSQUNULFxuICogIFNUUklDVCBMSUFCSUxJVFksIE9SIFRPUlQgKElOQ0xVRElORyBORUdMSUdFTkNFIE9SIE9USEVSV0lTRSkgQVJJU0lORyBJTlxuICogIEFOWSBXQVkgT1VUIE9GIFRIRSBVU0UgT0YgVEhJUyBTT0ZUV0FSRSwgRVZFTiBJRiBBRFZJU0VEIE9GIFRIRVxuICogIFBPU1NJQklMSVRZIE9GIFNVQ0ggREFNQUdFLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qKVxuXG5tb2R1bGUgR2x1dGVuX2x3dCA9IERyZWFtX2dsdXRlbl9sd3QuR2x1dGVuX2x3dFxuXG5vcGVuIEx3dC5JbmZpeFxuaW5jbHVkZSBIMl9sd3RfaW50ZlxuXG5tb2R1bGUgU2VydmVyIChTZXJ2ZXJfcnVudGltZSA6IEdsdXRlbl9sd3QuU2VydmVyKSA9IHN0cnVjdFxuICBtb2R1bGUgSDIgPSBEcmVhbV9oMi5IMlxuXG4gIHR5cGUgc29ja2V0ID0gU2VydmVyX3J1bnRpbWUuc29ja2V0XG5cbiAgbGV0IGNyZWF0ZV9jb25uZWN0aW9uX2hhbmRsZXJcbiAgICAgID8oY29uZmlnID0gSDIuQ29uZmlnLmRlZmF1bHQpXG4gICAgICB+cmVxdWVzdF9oYW5kbGVyXG4gICAgICB+ZXJyb3JfaGFuZGxlclxuICAgICAgY2xpZW50X2FkZHJcbiAgICAgIHNvY2tldFxuICAgID1cbiAgICBsZXQgY29ubmVjdGlvbiA9XG4gICAgICBIMi5TZXJ2ZXJfY29ubmVjdGlvbi5jcmVhdGVcbiAgICAgICAgfmNvbmZpZ1xuICAgICAgICB+ZXJyb3JfaGFuZGxlcjooZXJyb3JfaGFuZGxlciBjbGllbnRfYWRkcilcbiAgICAgICAgKHJlcXVlc3RfaGFuZGxlciBjbGllbnRfYWRkcilcbiAgICBpblxuICAgIFNlcnZlcl9ydW50aW1lLmNyZWF0ZV9jb25uZWN0aW9uX2hhbmRsZXJcbiAgICAgIH5yZWFkX2J1ZmZlcl9zaXplOmNvbmZpZy5yZWFkX2J1ZmZlcl9zaXplXG4gICAgICB+cHJvdG9jb2w6KG1vZHVsZSBIMi5TZXJ2ZXJfY29ubmVjdGlvbilcbiAgICAgIGNvbm5lY3Rpb25cbiAgICAgIGNsaWVudF9hZGRyXG4gICAgICBzb2NrZXRcbmVuZFxuXG5tb2R1bGUgQ2xpZW50IChDbGllbnRfcnVudGltZSA6IEdsdXRlbl9sd3QuQ2xpZW50KSA9IHN0cnVjdFxuICBtb2R1bGUgSDIgPSBEcmVhbV9oMi5IMlxuXG4gIHR5cGUgc29ja2V0ID0gQ2xpZW50X3J1bnRpbWUuc29ja2V0XG4gIHR5cGUgcnVudGltZSA9IENsaWVudF9ydW50aW1lLnRcblxuICB0eXBlIHQgPVxuICAgIHsgY29ubmVjdGlvbiA6IEgyLkNsaWVudF9jb25uZWN0aW9uLnRcbiAgICA7IHJ1bnRpbWUgOiBydW50aW1lXG4gICAgfVxuXG4gIGxldCBjcmVhdGVfY29ubmVjdGlvblxuICAgICAgPyhjb25maWcgPSBIMi5Db25maWcuZGVmYXVsdClcbiAgICAgID9wdXNoX2hhbmRsZXJcbiAgICAgIH5lcnJvcl9oYW5kbGVyXG4gICAgICBzb2NrZXRcbiAgICA9XG4gICAgbGV0IGNvbm5lY3Rpb24gPVxuICAgICAgSDIuQ2xpZW50X2Nvbm5lY3Rpb24uY3JlYXRlIH5jb25maWcgP3B1c2hfaGFuZGxlciB+ZXJyb3JfaGFuZGxlciAoKVxuICAgIGluXG4gICAgQ2xpZW50X3J1bnRpbWUuY3JlYXRlXG4gICAgICB+cmVhZF9idWZmZXJfc2l6ZTpjb25maWcucmVhZF9idWZmZXJfc2l6ZVxuICAgICAgfnByb3RvY29sOihtb2R1bGUgSDIuQ2xpZW50X2Nvbm5lY3Rpb24pXG4gICAgICBjb25uZWN0aW9uXG4gICAgICBzb2NrZXRcbiAgICA+fD0gZnVuIHJ1bnRpbWUgLT4geyBydW50aW1lOyBjb25uZWN0aW9uIH1cblxuICBsZXQgcmVxdWVzdCB0ID0gSDIuQ2xpZW50X2Nvbm5lY3Rpb24ucmVxdWVzdCB0LmNvbm5lY3Rpb25cblxuICBsZXQgcGluZyA/cGF5bG9hZCA/b2ZmIHsgY29ubmVjdGlvbjsgXyB9ID1cbiAgICBsZXQgdCwgdSA9IEx3dC50YXNrICgpIGluXG4gICAgSDIuQ2xpZW50X2Nvbm5lY3Rpb24ucGluZyA/cGF5bG9hZCA/b2ZmIGNvbm5lY3Rpb24gKEx3dC53YWtldXBfbGF0ZXIgdSk7XG4gICAgdFxuXG4gIGxldCBzaHV0ZG93biB0ID0gQ2xpZW50X3J1bnRpbWUuc2h1dGRvd24gdC5ydW50aW1lXG4gIGxldCBpc19jbG9zZWQgdCA9IENsaWVudF9ydW50aW1lLmlzX2Nsb3NlZCB0LnJ1bnRpbWVcbmVuZFxuIl19
