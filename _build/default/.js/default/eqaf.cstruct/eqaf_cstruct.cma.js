// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Eqaf_cstruct
//# unitInfo: Requires: Cstruct, Eqaf_bigstring
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Cstruct = global_data.Cstruct,
    Eqaf_bigstring = global_data.Eqaf_bigstring;
   function equal(a, b){
    var _k_ = caml_call1(Cstruct[4], b), _l_ = caml_call1(Cstruct[4], a);
    return caml_call2(Eqaf_bigstring[1], _l_, _k_);
   }
   function compare_be_with_len(len, a, b){
    var _i_ = caml_call1(Cstruct[4], b), _j_ = caml_call1(Cstruct[4], a);
    return caml_call3(Eqaf_bigstring[3], len, _j_, _i_);
   }
   function compare_le_with_len(len, a, b){
    var _g_ = caml_call1(Cstruct[4], b), _h_ = caml_call1(Cstruct[4], a);
    return caml_call3(Eqaf_bigstring[5], len, _h_, _g_);
   }
   function compare_le(a, b){
    var _e_ = caml_call1(Cstruct[4], b), _f_ = caml_call1(Cstruct[4], a);
    return caml_call2(Eqaf_bigstring[4], _f_, _e_);
   }
   function compare_be(a, b){
    var _c_ = caml_call1(Cstruct[4], b), _d_ = caml_call1(Cstruct[4], a);
    return caml_call2(Eqaf_bigstring[2], _d_, _c_);
   }
   function find_uint8(off, f, v){
    var _b_ = caml_call1(Cstruct[4], v);
    return caml_call3(Eqaf_bigstring[6], off, f, _b_);
   }
   function exists_uint8(off, f, v){
    var _a_ = caml_call1(Cstruct[4], v);
    return caml_call3(Eqaf_bigstring[7], off, f, _a_);
   }
   var
    Eqaf_cstruct =
      [0,
       equal,
       compare_be,
       compare_be_with_len,
       compare_le,
       compare_le_with_len,
       find_uint8,
       exists_uint8];
   runtime.caml_register_global(2, Eqaf_cstruct, "Eqaf_cstruct");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJlcWFmX2NzdHJ1Y3QuY21hLmpzIiwic291cmNlUm9vdCI6IiIsIm5hbWVzIjpbImVxdWFsIiwiYSIsImIiLCJjb21wYXJlX2JlX3dpdGhfbGVuIiwibGVuIiwiY29tcGFyZV9sZV93aXRoX2xlbiIsImNvbXBhcmVfbGUiLCJjb21wYXJlX2JlIiwiZmluZF91aW50OCIsIm9mZiIsImYiLCJ2IiwiZXhpc3RzX3VpbnQ4Il0sInNvdXJjZXMiOlsiL2hvbWUvbGlhbS1jYXJwZW50ZXIvLm9wYW0vYm9uc2FpL2xpYi9lcWFmL2NzdHJ1Y3QvZXFhZl9jc3RydWN0Lm1sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Rzs7Ozs7Rzs7Ozs7Rzs7Ozs7Ozs7O1lBQUlBLE1BQU1DLEdBQUVDO0lBQ1YsSUFBNkMsTUFBQSx1QkFEbkNBLElBQ1csTUFBQSx1QkFEYkQ7SUFDcUMsT0FBQTtHQUF1QjtZQUVsRUUsb0JBQXFCQyxLQUFJSCxHQUFFQztJQUM3QixJQUMwQixNQUFBLHVCQUZHQSxJQUUzQixNQUFBLHVCQUZ5QkQ7SUFFRCxPQUFBLDhCQUZIRztHQUUwQjtZQUUvQ0Msb0JBQXFCRCxLQUFJSCxHQUFFQztJQUM3QixJQUMwQixNQUFBLHVCQUZHQSxJQUUzQixNQUFBLHVCQUZ5QkQ7SUFFRCxPQUFBLDhCQUZIRztHQUUwQjtZQUUvQ0UsV0FBV0wsR0FBRUM7SUFDZixJQUMwQixNQUFBLHVCQUZYQSxJQUViLE1BQUEsdUJBRldEO0lBRWEsT0FBQTtHQUF1QjtZQUUvQ00sV0FBV04sR0FBRUM7SUFDZixJQUMwQixNQUFBLHVCQUZYQSxJQUViLE1BQUEsdUJBRldEO0lBRWEsT0FBQTtHQUF1QjtZQUUvQ08sV0FBWUMsS0FBS0MsR0FBRUM7SUFFWCxVQUFBLHVCQUZXQTtJQUVYLE9BQUEsOEJBRklGLEtBQUtDO0dBRWM7WUFFL0JFLGFBQWNILEtBQUtDLEdBQUVDO0lBRWIsVUFBQSx1QkFGYUE7SUFFYixPQUFBLDhCQUZNRixLQUFLQztHQUVZOzs7O09BekIvQlY7T0FlQU87T0FaQUo7T0FRQUc7T0FKQUQ7T0FZQUc7T0FJQUk7OztFIiwic291cmNlc0NvbnRlbnQiOlsibGV0IGVxdWFsIGEgYiA9XG4gIEVxYWZfYmlnc3RyaW5nLmVxdWFsIChDc3RydWN0LnRvX2JpZ2FycmF5IGEpIChDc3RydWN0LnRvX2JpZ2FycmF5IGIpXG5cbmxldCBjb21wYXJlX2JlX3dpdGhfbGVuIH5sZW4gYSBiID1cbiAgRXFhZl9iaWdzdHJpbmcuY29tcGFyZV9iZV93aXRoX2xlbiB+bGVuXG4gICAgKENzdHJ1Y3QudG9fYmlnYXJyYXkgYSkgKENzdHJ1Y3QudG9fYmlnYXJyYXkgYilcblxubGV0IGNvbXBhcmVfbGVfd2l0aF9sZW4gfmxlbiBhIGIgPVxuICBFcWFmX2JpZ3N0cmluZy5jb21wYXJlX2xlX3dpdGhfbGVuIH5sZW5cbiAgICAoQ3N0cnVjdC50b19iaWdhcnJheSBhKSAoQ3N0cnVjdC50b19iaWdhcnJheSBiKVxuXG5sZXQgY29tcGFyZV9sZSBhIGIgPVxuICBFcWFmX2JpZ3N0cmluZy5jb21wYXJlX2xlXG4gICAgKENzdHJ1Y3QudG9fYmlnYXJyYXkgYSkgKENzdHJ1Y3QudG9fYmlnYXJyYXkgYilcblxubGV0IGNvbXBhcmVfYmUgYSBiID1cbiAgRXFhZl9iaWdzdHJpbmcuY29tcGFyZV9iZVxuICAgIChDc3RydWN0LnRvX2JpZ2FycmF5IGEpIChDc3RydWN0LnRvX2JpZ2FycmF5IGIpXG5cbmxldCBmaW5kX3VpbnQ4ID9vZmYgfmYgdiA9XG4gIEVxYWZfYmlnc3RyaW5nLmZpbmRfdWludDhcbiAgICA/b2ZmIH5mIChDc3RydWN0LnRvX2JpZ2FycmF5IHYpXG5cbmxldCBleGlzdHNfdWludDggP29mZiB+ZiB2ID1cbiAgRXFhZl9iaWdzdHJpbmcuZXhpc3RzX3VpbnQ4XG4gICAgP29mZiB+ZiAoQ3N0cnVjdC50b19iaWdhcnJheSB2KVxuIl19
