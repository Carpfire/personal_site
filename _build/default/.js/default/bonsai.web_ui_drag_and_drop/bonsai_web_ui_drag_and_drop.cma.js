// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Bonsai_web_ui_drag_and_drop
//# unitInfo: Requires: Base__Option, Bonsai, Bonsai__Path, Bonsai_web, Core, Core__Array, Core__Int, Core__List, Core__Map, Core__Option, Core__Sexp, Css_gen, Inline_css, Js_of_ocaml__Dom, Js_of_ocaml__Dom_html, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Ppx_string_runtime, Sexplib0__Sexp_conv, Sexplib0__Sexp_conv_error, Sexplib0__Sexp_conv_record, Ui_effect, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_drag_and_dro$0 = "Bonsai_web_ui_drag_and_drop",
    cst_Dragging = "Dragging",
    cst_Finish_drag = "Finish_drag",
    cst_Not_dragging = "Not_dragging",
    cst_Set_target = "Set_target",
    cst_Start_drag = "Start_drag",
    cst_bonsai_web_ui_drag_and_dro$0 = "bonsai_web_ui_drag_and_drop",
    cst_dragging = "dragging",
    cst_finish_drag = "finish_drag",
    cst_height = "height",
    cst_not_dragging = "not_dragging",
    cst_offset = "offset",
    cst_position = "position",
    cst_set_target = "set_target",
    cst_size = "size",
    cst_source$0 = "source",
    cst_start_drag = "start_drag",
    cst_target$0 = "target",
    cst_web_ui_drag_and_drop_src_b$1 =
      "web_ui/drag_and_drop/src/bonsai_web_ui_drag_and_drop.ml",
    cst_width = "width",
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_string_notequal = runtime.caml_string_notequal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call7(f, a0, a1, a2, a3, a4, a5, a6){
    return (f.l >= 0 ? f.l : f.l = f.length) == 7
            ? f(a0, a1, a2, a3, a4, a5, a6)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    message = "Started dragging before dragging finished",
    error_source_121 =
      "web_ui/drag_and_drop/src/bonsai_web_ui_drag_and_drop.ml.For_testing.Action.t",
    name = "dnd-test-hook",
    error_source_208 =
      "web_ui/drag_and_drop/src/bonsai_web_ui_drag_and_drop.ml.Model.t",
    Core = global_data.Core,
    Sexplib0_Sexp_conv_error = global_data.Sexplib0__Sexp_conv_error,
    Sexplib0_Sexp_conv_record = global_data.Sexplib0__Sexp_conv_record,
    Assert_failure = global_data.Assert_failure,
    Ppx_string_runtime = global_data.Ppx_string_runtime,
    Core_Int = global_data.Core__Int,
    Css_gen = global_data.Css_gen,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Bonsai = global_data.Bonsai,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Core_List = global_data.Core__List,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Core_Option = global_data.Core__Option,
    Bonsai_web = global_data.Bonsai_web,
    Bonsai_Path = global_data.Bonsai__Path,
    Core_Sexp = global_data.Core__Sexp,
    Base_Option = global_data.Base__Option,
    Core_Array = global_data.Core__Array,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Ui_effect = global_data.Ui_effect,
    Core_Map = global_data.Core__Map,
    Js_of_ocaml_Dom = global_data.Js_of_ocaml__Dom,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Inline_css = global_data.Inline_css;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_drag_and_dro$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_drag_and_dro$0);
   caml_call1(Ppx_expect_runtime[1][1], cst_web_ui_drag_and_drop_src_b$1);
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_drag_and_dro$0,
     "bonsai_web_ui_drag_and_drop.ml");
   var
    no_select =
      caml_call1(Virtual_dom_Vdom[1][16], "no_select_hash_72fa5560f3"),
    dragged_element =
      caml_call1(Virtual_dom_Vdom[1][16], "dragged_element_hash_72fa5560f3"),
    _at_ = [0, cst_target$0],
    _au_ = [0, cst_source$0],
    _av_ = [0, cst_Dragging],
    _aw_ = [0, cst_Not_dragging],
    cst_target = cst_target$0,
    cst_source = cst_source$0,
    _an_ = [0, cst_web_ui_drag_and_drop_src_b$1, 373, 2],
    _ak_ = [0, cst_web_ui_drag_and_drop_src_b$1, 373, 2],
    cst_px = "px)",
    cst_px_translateX = "px) translateX(",
    cst_translateY = "translateY(",
    cst_transform = "transform",
    _ai_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 377, 13207, 13211]],
    _aj_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 376, 13176, 13180]],
    _al_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 373, 13019, 13021]],
    _am_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 373, 13019, 13021]],
    _aq_ = [0, cst_web_ui_drag_and_drop_src_b$1, 373, 2],
    _ao_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 373, 13019, 13021]],
    _ap_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 373, 13019, 13021]],
    _ar_ = [0, cst_web_ui_drag_and_drop_src_b$1, 374, 13048, 13052],
    _as_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 373, 13019, 13021]],
    _ag_ = [0, "actions"],
    cst_An_action_sent_to_a_state_ =
      "An action sent to a [state_machine1] has been dropped because its input was not present. This happens when the [state_machine1] is inactive when it receives a message.",
    cst_web_ui_drag_and_drop_src_b =
      "web_ui/drag_and_drop/src/bonsai_web_ui_drag_and_drop.ml:233:12",
    cst_dragTarget = "dragTarget",
    _S_ = [1, 0],
    _Q_ = [0, [1, 0], [0, 0, 0]],
    _R_ = [0, 0, 0],
    cst_data_dnd_name = "data-dnd-name",
    _H_ = [0, [1, 0], [0, 0, 0]],
    _I_ = [0, 0, 0],
    cst_data_drag_target = "data-drag-target",
    _G_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 364, 12808, 12810]],
    _J_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 351, 12322, 12326]],
    _K_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 350, 12298, 12300]],
    _L_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 340, 11980, 11984]],
    _M_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 339, 11959, 11961]],
    _N_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 338, 11888, 11890]],
    _O_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 338, 11888, 11890]],
    _P_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 338, 11888, 11890]],
    _T_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 280, 9042, 9046]],
    _U_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 279, 9018, 9020]],
    _V_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 272, 8778, 8782]],
    _W_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 271, 8752, 8754]],
    _X_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 268, 8663, 8667]],
    _Y_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 267, 8635, 8637]],
    _Z_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 266, 8581, 8583]],
    ___ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 265, 8525, 8527]],
    _$_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 264, 8485, 8487]],
    _aa_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 241, 7406, 7410]],
    _ab_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 240, 7387, 7389]],
    _ac_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 198, 5431, 5433]],
    _ad_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 198, 5431, 5433]],
    _ae_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 198, 5431, 5433]],
    _af_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 198, 5431, 5433]],
    _ah_ = [0, [0, cst_web_ui_drag_and_drop_src_b$1, 198, 5431, 5433]],
    cst_removing_window_event_list = "removing window event listener",
    cst_adding_window_event_listen = "adding window event listener",
    _y_ = [0, 0, 0],
    _z_ = [0, [2, [0, 0, 0]], 0],
    _A_ = [0, 0, 0],
    _B_ = [0, 0, 0],
    _C_ = [0, 0, 0],
    _D_ = [0, [1, 0], 0],
    _v_ = [0, cst_Finish_drag],
    _w_ = [0, cst_Start_drag],
    _x_ = [0, cst_Set_target],
    _u_ =
      [0,
       [11, "BUG: ", [2, 0, [11, ". Report to Bonsai developers", 0]]],
       "BUG: %s. Report to Bonsai developers"],
    _m_ = [0, "Finished_drag"],
    _n_ = [0, cst_size],
    _o_ = [0, cst_position],
    _p_ = [0, cst_offset],
    _q_ = [0, cst_source$0],
    _r_ = [0, "Started_drag"],
    _s_ = [0, cst_Set_target],
    _t_ = [0, "Mouse_moved"],
    _k_ = [0, cst_Dragging],
    _l_ = [0, cst_Not_dragging],
    _e_ = [0, cst_size],
    _f_ = [0, cst_position],
    _g_ = [0, cst_offset],
    _h_ = [0, "has_moved"],
    _i_ = [0, cst_target$0],
    _j_ = [0, cst_source$0],
    _c_ = [0, cst_height],
    _d_ = [0, cst_width],
    _a_ = [0, "y"],
    _b_ = [0, "x"],
    cst_bonsai_web_ui_drag_and_dro = cst_bonsai_web_ui_drag_and_dro$0,
    cst_web_ui_drag_and_drop_src_b$0 =
      "\n/* web_ui/drag_and_drop/src/bonsai_web_ui_drag_and_drop.ml */\n\n*.no_select_hash_72fa5560f3 {\n user-select:none\n}\n\n*.dragged_element_hash_72fa5560f3 {\n position:fixed;\n top:0px;\n left:0px;\n pointer-events:none\n}",
    cst_Bonsai_web_ui_drag_and_dro = cst_Bonsai_web_ui_drag_and_dro$0;
   function sexp_of_t(param){
    var
     y_007 = param[2],
     x_005 = param[1],
     arg_008 = caml_call1(Core[389], y_007),
     bnds_004 = [0, [1, [0, _a_, [0, arg_008, 0]]], 0],
     arg_006 = caml_call1(Core[389], x_005),
     bnds_004$0 = [0, [1, [0, _b_, [0, arg_006, 0]]], bnds_004];
    return [1, bnds_004$0];
   }
   function equal(a_009, b_010){
    if(a_009 === b_010) return 1;
    var _dx_ = caml_call2(Core[384], a_009[1], b_010[1]);
    return _dx_ ? caml_call2(Core[384], a_009[2], b_010[2]) : _dx_;
   }
   function sexp_of_t$0(param){
    var
     height_017 = param[2],
     width_015 = param[1],
     arg_018 = caml_call1(Core[389], height_017),
     bnds_014 = [0, [1, [0, _c_, [0, arg_018, 0]]], 0],
     arg_016 = caml_call1(Core[389], width_015),
     bnds_014$0 = [0, [1, [0, _d_, [0, arg_016, 0]]], bnds_014];
    return [1, bnds_014$0];
   }
   function sexp_of_t$1(of_source_id_092, of_target_id_093, param){
    if(typeof param === "number") return _m_;
    switch(param[0]){
      case 0:
       var
        size_101 = param[4],
        position_099 = param[3],
        offset_097 = param[2],
        source_095 = param[1],
        arg_102 = sexp_of_t$0(size_101),
        bnds_094 = [0, [1, [0, _n_, [0, arg_102, 0]]], 0],
        arg_100 = sexp_of_t(position_099),
        bnds_094$0 = [0, [1, [0, _o_, [0, arg_100, 0]]], bnds_094],
        arg_098 = sexp_of_t(offset_097),
        bnds_094$1 = [0, [1, [0, _p_, [0, arg_098, 0]]], bnds_094$0],
        arg_096 = caml_call1(of_source_id_092, source_095),
        bnds_094$2 = [0, [1, [0, _q_, [0, arg_096, 0]]], bnds_094$1];
       return [1, [0, _r_, bnds_094$2]];
      case 1:
       var
        arg0_103 = param[1],
        res0_104 = caml_call2(Core[515], of_target_id_093, arg0_103);
       return [1, [0, _s_, [0, res0_104, 0]]];
      default:
       var arg0_105 = param[1], res0_106 = sexp_of_t(arg0_105);
       return [1, [0, _t_, [0, res0_106, 0]]];
    }
   }
   function model(r){return r[4];}
   function sentinel(r){return r[3];}
   function drop_target(r){return r[2];}
   function source(r){return r[1];}
   function project_target(t$0, map, unmap){
    function source(id){return caml_call1(t$0[1], id);}
    function drop_target(id){
     var _dw_ = caml_call1(unmap, id);
     return caml_call1(t$0[2], _dw_);
    }
    function sentinel(name){return caml_call1(t$0[3], name);}
    var t$1 = t$0[4];
    if(t$1)
     var
      t = t$1[1],
      _dp_ = t[6],
      _dq_ = t[5],
      _dr_ = t[4],
      _ds_ = t[3],
      _dt_ = caml_call2(Core_Option[34], t[2], map),
      model = [0, [0, t[1], _dt_, _ds_, _dr_, _dq_, _dp_]];
    else
     var model = 0;
    function inject(actions){
     function _du_(action){
      if(typeof action === "number") return 0;
      switch(action[0]){
        case 0:
         var
          size = action[4],
          position = action[3],
          offset = action[2],
          source = action[1];
         return [0, source, offset, position, size];
        case 1:
         var x = action[1]; return [1, caml_call2(Core_Option[34], x, unmap)];
        default: var position$0 = action[1]; return [2, position$0];
      }
     }
     var _dv_ = caml_call2(Core_List[51], actions, _du_);
     return caml_call1(t$0[5], _dv_);
    }
    return [0, source, drop_target, sentinel, model, inject];
   }
   function t_of_sexp(sexp_123){
    a:
    {
     if(0 === sexp_123[0]){
      var _dm_ = sexp_123[1];
      b:
      if(caml_string_notequal(_dm_, cst_Finish_drag)){
       c:
       if(caml_string_notequal(_dm_, cst_Set_target)){
        if(caml_string_notequal(_dm_, cst_Start_drag)){
         if(! caml_string_notequal(_dm_, cst_finish_drag)) break b;
         if(! caml_string_notequal(_dm_, cst_set_target)) break c;
         if(caml_string_notequal(_dm_, cst_start_drag)) break a;
        }
        return caml_call2
                (Sexplib0_Sexp_conv_error[9], error_source_121, sexp_123);
       }
       return caml_call2
               (Sexplib0_Sexp_conv_error[9], error_source_121, sexp_123);
      }
      return 0;
     }
     var _dn_ = sexp_123[1];
     if(! _dn_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[11], error_source_121, sexp_123);
     var _do_ = _dn_[1];
     if(0 !== _do_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[10], error_source_121, sexp_123);
     var tag_124 = _do_[1];
     b:
     if(caml_string_notequal(tag_124, cst_Finish_drag)){
      c:
      if(caml_string_notequal(tag_124, cst_Set_target)){
       if(caml_string_notequal(tag_124, cst_Start_drag)){
        if(! caml_string_notequal(tag_124, cst_finish_drag)) break b;
        if(! caml_string_notequal(tag_124, cst_set_target)) break c;
        if(caml_string_notequal(tag_124, cst_start_drag)) break a;
       }
       var sexp_args_125 = _dn_[2];
       if(sexp_args_125 && ! sexp_args_125[2]){
        var
         arg0_126 = sexp_args_125[1],
         res0_127 = caml_call1(Core[559], arg0_126);
        return [0, res0_127];
       }
       return caml_call3
               (Sexplib0_Sexp_conv_error[8],
                error_source_121,
                tag_124,
                sexp_123);
      }
      var sexp_args_130 = _dn_[2];
      if(sexp_args_130 && ! sexp_args_130[2]){
       var
        arg0_131 = sexp_args_130[1],
        res0_132 = caml_call2(Core[516], Core[559], arg0_131);
       return [1, res0_132];
      }
      return caml_call3
              (Sexplib0_Sexp_conv_error[8],
               error_source_121,
               tag_124,
               sexp_123);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[7], error_source_121, sexp_123);
    }
    return caml_call2
            (Sexplib0_Sexp_conv_error[12], error_source_121, sexp_123);
   }
   function sexp_of_t$2(param){
    if(typeof param === "number") return _v_;
    if(0 === param[0]){
     var arg0_133 = param[1], res0_134 = caml_call1(Core[558], arg0_133);
     return [1, [0, _w_, [0, res0_134, 0]]];
    }
    var
     arg0_135 = param[1],
     res0_136 = caml_call2(Core[515], Core[558], arg0_135);
    return [1, [0, _x_, [0, res0_136, 0]]];
   }
   function equal$0(a_137, b_138){
    if(a_137 === b_138) return 1;
    if(typeof a_137 === "number"){
     if(typeof b_138 === "number") return 1;
     if(1 === b_138[0]) return 0;
    }
    else{
     if(0 === a_137[0]){
      var a_139 = a_137[1];
      if(typeof b_138 !== "number" && 0 === b_138[0]){
       var b_140 = b_138[1];
       return caml_call2(Core[553], a_139, b_140);
      }
      return 0;
     }
     var a_141 = a_137[1];
     if(typeof b_138 === "number") return 0;
     if(0 !== b_138[0]){
      var
       b_142 = b_138[1],
       _dl_ =
         function(a_143, b_144){return caml_call2(Core[553], a_143, b_144);};
      return caml_call3(Core[511], _dl_, a_141, b_142);
     }
    }
    return 0;
   }
   function sexp_of_t$3(param){
    function _dj_(_dk_){return 0;}
    return caml_call1(Sexplib0_Sexp_conv[24], _dj_);
   }
   function combine(param, second){return second;}
   var
    Inject_hook =
      caml_call1
       (Virtual_dom_Vdom[1][100], [0, [0, sexp_of_t$3, combine], name]),
    type_id = Inject_hook[2],
    active = [0, Bonsai_Path[23][5]];
   function _E_(param){
    var
     handler = param[3],
     path = param[2],
     typ = param[1],
     _df_ = Bonsai_web[2];
    if(853947087 <= _df_){
     if(870528546 > _df_)
      return caml_call1(Core[32], cst_adding_window_event_listen);
    }
    else if(25748998 <= _df_){
     var
      _dg_ = Js_of_ocaml_Js[7],
      _dh_ = caml_call1(Js_of_ocaml_Dom[10], handler),
      listener =
        caml_call4
         (Js_of_ocaml_Dom_html[17], Js_of_ocaml_Dom_html[8], typ, _dh_, _dg_),
      _di_ = function(param){return listener;};
     active[1] = caml_call3(Core_Map[43], active[1], path, _di_);
     return 0;
    }
    return 0;
   }
   var install = caml_call1(Ui_effect[17], _E_);
   function _F_(path){
    var _dc_ = Bonsai_web[2];
    if(853947087 <= _dc_){
     if(870528546 > _dc_)
      return caml_call1(Core[32], cst_removing_window_event_list);
    }
    else if(25748998 <= _dc_){
     var
      _dd_ = Js_of_ocaml_Dom_html[18],
      _de_ = caml_call2(Core_Map[44], active[1], path);
     return caml_call2(Core_Option[46], _de_, _dd_);
    }
    return 0;
   }
   var uninstall = caml_call1(Ui_effect[17], _F_);
   function add_event_listener(typ, path, handler){
    return caml_call1(install, [0, typ, path, handler]);
   }
   function create(Source, Target, on_drop){
    function _bn_(pattern_syntax_146){
     function _bW_(model){
      function _b0_(inject){
       function _b4_(let_syntax_187){
        function _cb_(path){
         function _cc_(let_syntax_166){
          function _cd_(path_for_pointerup){
           function _ce_(universe_suffix){
            function _ch_(on_deactivate){
             function _cn_(on_activate){
              function _cI_(pattern_syntax_178){
               function _cK_(param){
                function _cO_(sentinel){
                 function _cX_(drop_target){
                  function _c7_(param){
                   var
                    _da_ = param[2],
                    _db_ = _da_[2],
                    match = _db_[2],
                    drop_target = match[2],
                    sentinel = match[1],
                    source = _db_[1],
                    inject = _da_[1],
                    model = param[1];
                   return [0, source, drop_target, sentinel, model, inject];
                  }
                  var
                   _c8_ = caml_call2(Bonsai[49][5][7], sentinel, drop_target),
                   _c9_ = caml_call2(Bonsai[49][5][7], let_syntax_187, _c8_),
                   _c__ = caml_call2(Bonsai[49][5][7], inject, _c9_),
                   _c$_ = caml_call2(Bonsai[49][5][7], model, _c__);
                  return caml_call3(Bonsai[49][5][8], _G_, _c$_, _c7_);
                 }
                 function _cY_(param, id){
                  var
                   universe_suffix = param[2],
                   inject = param[1],
                   _c1_ = caml_call1(Target[2], id),
                   _c2_ = caml_call1(Core_Sexp[85], _c1_),
                   _c3_ =
                     caml_call2(Core[18], cst_data_drag_target, universe_suffix),
                   _c4_ =
                     [0, caml_call2(Virtual_dom_Vdom[1][1], _c3_, _c2_), 0];
                  function _c5_(event){
                   return caml_call1(Bonsai_web[3], event)
                           ? caml_call1(inject, _H_)
                           : caml_call1(inject, _I_);
                  }
                  var
                   _c6_ = [0, caml_call1(Virtual_dom_Vdom[1][87], _c5_), _c4_];
                  return caml_call1(Virtual_dom_Vdom[1][9], _c6_);
                 }
                 var
                  _cZ_ = caml_call2(Bonsai[49][5][7], inject, universe_suffix),
                  _c0_ = caml_call3(Bonsai[49][5][8], _J_, _cZ_, _cY_);
                 return caml_call3(Bonsai[49][5][1], _K_, _c0_, _cX_);
                }
                function _cP_(inject, name){
                 var
                  _cR_ =
                    [0,
                     caml_call2(Virtual_dom_Vdom[1][1], cst_data_dnd_name, name),
                     0];
                 function _cS_(action){
                  if(typeof action === "number")
                   var _cW_ = _y_;
                  else if(0 === action[0])
                   var
                    source = action[1],
                    _cU_ = caml_call1(Core_Sexp[76], source),
                    _cW_ =
                      [0, [0, caml_call1(Source[1], _cU_), _C_, _B_, _A_], _z_];
                  else{
                   var match = action[1];
                   if(match)
                    var
                     target = match[1],
                     _cV_ = caml_call1(Core_Sexp[76], target),
                     _cW_ = [0, [1, [0, caml_call1(Target[1], _cV_)]], 0];
                   else
                    var _cW_ = _D_;
                  }
                  return caml_call1(inject, _cW_);
                 }
                 var _cT_ = [0, caml_call1(Inject_hook[1], _cS_), _cR_];
                 return caml_call1(Virtual_dom_Vdom[1][9], _cT_);
                }
                var _cQ_ = caml_call3(Bonsai[49][5][8], _L_, inject, _cP_);
                return caml_call3(Bonsai[49][5][1], _M_, _cQ_, _cO_);
               }
               function _cL_(param){return 0;}
               var
                _cM_ =
                  caml_call3(Bonsai[49][5][4], _N_, pattern_syntax_178, _cL_),
                _cN_ = caml_call1(Bonsai[49][5][6], _cM_);
               return caml_call3(Bonsai[49][5][1], _O_, _cN_, _cK_);
              }
              var
               _cJ_ =
                 caml_call4
                  (Bonsai[44][3], [0, on_activate], [0, on_deactivate], 0, 0);
              return caml_call3(Bonsai[49][5][1], _P_, _cJ_, _cI_);
             }
             function _co_(param){
              var
               _ct_ = param[2],
               match = _ct_[2],
               universe_suffix = match[2],
               path_for_pointerup = match[1],
               path_for_pointermove = _ct_[1],
               inject = param[1];
              function _cu_(param){
               function _cG_(event){
                var
                 _cH_ =
                   caml_call1(Bonsai_web[3], event)
                    ? caml_call1(inject, _Q_)
                    : caml_call1(inject, _R_);
                caml_call1(Bonsai_web[5][23][2], _cH_);
                return Js_of_ocaml_Js[7];
               }
               return add_event_listener
                       (Js_of_ocaml_Dom_html[15][84], path_for_pointerup, _cG_);
              }
              function _cv_(event){
               var
                position = [0, event.clientX, event.clientY],
                _cx_ = runtime.caml_js_to_array(event.composedPath()),
                path = caml_call1(Core_Array[45], _cx_);
               function _cy_(element){
                function _cA_(dataset){
                 function _cC_(drag_target){
                  var
                   drag_target$0 = runtime.caml_string_of_jsstring(drag_target),
                   _cF_ = caml_call1(Core_Sexp[76], drag_target$0);
                  return caml_call1(Target[1], _cF_);
                 }
                 var
                  _cD_ =
                    dataset
                     [caml_call2(Core[18], cst_dragTarget, universe_suffix)],
                  _cE_ = caml_call1(Js_of_ocaml_Js[5][10], _cD_);
                 return caml_call2(Base_Option[29][4][3], _cE_, _cC_);
                }
                var _cB_ = caml_call1(Js_of_ocaml_Js[5][10], element.dataset);
                return caml_call2(Base_Option[29][4][2], _cB_, _cA_);
               }
               var
                target = caml_call2(Core_List[28], path, _cy_),
                _cz_ =
                  caml_call1(Bonsai_web[3], event)
                   ? caml_call1(inject, [0, _S_, [0, [2, position], 0]])
                   : caml_call1
                     (inject, [0, [1, target], [0, [2, position], 0]]);
               caml_call1(Bonsai_web[5][23][2], _cz_);
               return Js_of_ocaml_Js[7];
              }
              var
               _cw_ =
                 add_event_listener
                  (Js_of_ocaml_Dom_html[15][81], path_for_pointermove, _cv_);
              return caml_call2(Ui_effect[13][4][2], _cw_, _cu_);
             }
             var
              _cp_ =
                caml_call2
                 (Bonsai[49][5][7], path_for_pointerup, universe_suffix),
              _cq_ = caml_call2(Bonsai[49][5][7], let_syntax_166, _cp_),
              _cr_ = caml_call2(Bonsai[49][5][7], inject, _cq_),
              _cs_ = caml_call3(Bonsai[49][5][8], _T_, _cr_, _co_);
             return caml_call3(Bonsai[49][5][1], _U_, _cs_, _cn_);
            }
            function _ci_(param){
             var
              path_for_pointerup = param[2],
              path_for_pointermove = param[1],
              _cl_ = [0, caml_call1(uninstall, path_for_pointerup), 0],
              _cm_ = [0, caml_call1(uninstall, path_for_pointermove), _cl_];
             return caml_call1(Bonsai_web[5][11], _cm_);
            }
            var
             _cj_ =
               caml_call2
                (Bonsai[49][5][7], let_syntax_166, path_for_pointerup),
             _ck_ = caml_call3(Bonsai[49][5][8], _V_, _cj_, _ci_);
            return caml_call3(Bonsai[49][5][1], _W_, _ck_, _ch_);
           }
           function _cf_(path){return caml_call1(Bonsai_Path[27], path);}
           var _cg_ = caml_call3(Bonsai[49][5][8], _X_, path, _cf_);
           return caml_call3(Bonsai[49][5][1], _Y_, _cg_, _ce_);
          }
          return caml_call3(Bonsai[49][5][1], _Z_, Bonsai[54][6], _cd_);
         }
         return caml_call3(Bonsai[49][5][1], ___, Bonsai[54][6], _cc_);
        }
        return caml_call3(Bonsai[49][5][1], _$_, Bonsai[54][6], _cb_);
       }
       function _b5_(inject, id){
        var _b7_ = [0, no_select, 0];
        function _b8_(event){
         var
          position = [0, event.clientX, event.clientY],
          _b__ = caml_call1(Js_of_ocaml_Js[5][10], event.currentTarget),
          bounding_rect =
            caml_call4(Core_Option[40], 0, 0, 0, _b__).getBoundingClientRect();
         function optdef_float(x){
          var
           _b$_ = caml_call1(Js_of_ocaml_Js[6][10], x),
           _ca_ = caml_call4(Core_Option[40], 0, 0, 0, _b$_);
          return caml_call1(Core_Int[3], _ca_);
         }
         var
          width = optdef_float(bounding_rect.width),
          height = optdef_float(bounding_rect.height),
          top = caml_call1(Core_Int[3], bounding_rect.top),
          left = caml_call1(Core_Int[3], bounding_rect.left),
          size = [0, width, height],
          offset = [0, position[1] - left | 0, position[2] - top | 0];
         return caml_call1(Bonsai_web[3], event)
                 ? Bonsai_web[5][1]
                 : caml_call1(inject, [0, [0, id, offset, position, size], 0]);
        }
        var _b9_ = [0, caml_call1(Virtual_dom_Vdom[1][86], _b8_), _b7_];
        return caml_call1(Virtual_dom_Vdom[1][9], _b9_);
       }
       var _b6_ = caml_call3(Bonsai[49][5][8], _aa_, inject, _b5_);
       return caml_call3(Bonsai[49][5][1], _ab_, _b6_, _b4_);
      }
      function _b1_(param){
       var pattern_syntax_147 = param[2];
       return pattern_syntax_147;
      }
      var
       _b2_ = caml_call3(Bonsai[49][5][4], _ac_, pattern_syntax_146, _b1_),
       _b3_ = caml_call1(Bonsai[49][5][6], _b2_);
      return caml_call3(Bonsai[49][5][1], _ad_, _b3_, _b0_);
     }
     function _bX_(param){
      var pattern_syntax_148 = param[1];
      return pattern_syntax_148;
     }
     var
      _bY_ = caml_call3(Bonsai[49][5][4], _ae_, pattern_syntax_146, _bX_),
      _bZ_ = caml_call1(Bonsai[49][5][6], _bY_);
     return caml_call3(Bonsai[49][5][1], _af_, _bZ_, _bW_);
    }
    function _bo_(context, on_drop, model, actions){
     if(on_drop){
      var
       on_drop$0 = on_drop[1],
       _bJ_ =
         function(model, action){
          if(typeof action !== "number")
           switch(action[0]){
             case 0:
              var
               size = action[4],
               position = action[3],
               offset = action[2],
               source$0 = action[1];
              if(model){
               var
                message$0 = caml_call2(Core[265], _u_, message),
                _bT_ = caml_call1(Sexplib0_Sexp_conv[7], message$0);
               caml_call2(Core[257], 0, _bT_);
              }
              return [0, [0, source$0, 0, 0, offset, position, size]];
             case 1:
              var target$0 = action[1];
              if(! model) return 0;
              var t = model[1];
              return [0, [0, t[1], target$0, t[3], t[4], t[5], t[6]]];
             default:
              var position$0 = action[1];
              if(! model) return 0;
              var t$0 = model[1];
              return [0, [0, t$0[1], t$0[2], 1, t$0[4], position$0, t$0[6]]];
           }
          if(model){
           var _bU_ = model[1], match = _bU_[2];
           if(match){
            var
             target = match[1],
             source = _bU_[1],
             _bV_ = caml_call2(on_drop$0, source, target);
            caml_call2(Bonsai[16][2], context, _bV_);
            return 0;
           }
          }
          return 0;
         };
      return caml_call3(Core_List[20], actions, model, _bJ_);
     }
     var _bK_ = 0, _bL_ = 0, _bM_ = Target[2], _bN_ = Source[2];
     function _bO_(_bS_){return sexp_of_t$1(_bN_, _bM_, _bS_);}
     var
      _bP_ =
        [0,
         [1, [0, _ag_, [0, caml_call2(Core[472], _bO_, actions), _bL_]]],
         _bK_],
      _bQ_ =
        [0,
         caml_call1(Sexplib0_Sexp_conv[7], cst_An_action_sent_to_a_state_),
         _bP_],
      _bR_ =
        [1,
         [0,
          caml_call1(Sexplib0_Sexp_conv[7], cst_web_ui_drag_and_drop_src_b),
          _bQ_]];
     caml_call2(Core[257], 0, _bR_);
     return model;
    }
    var
     _bp_ = 0,
     _bq_ =
       [0,
        function(a_150, b_151){
         if(a_150 === b_151) return 1;
         if(! a_150) return b_151 ? 0 : 1;
         if(! b_151) return 0;
         var b_067 = b_151[1], a_066 = a_150[1];
         if(a_066 === b_067) return 1;
         var
          b_069 = b_067[1],
          a_068 = a_066[1],
          _bI_ = caml_call2(Source[3], a_068, b_069);
         if(_bI_){
          var
           _bA_ = b_067[2],
           _bB_ = a_066[2],
           _bC_ =
             function(a_043, b_044){
              return caml_call2(Target[3], a_043, b_044);
             },
           _bD_ = caml_call3(Core[511], _bC_, _bB_, _bA_);
          if(_bD_){
           var _bE_ = caml_call2(Core[318], a_066[3], b_067[3]);
           if(_bE_){
            var _bF_ = equal(a_066[4], b_067[4]);
            if(_bF_){
             var _bG_ = equal(a_066[5], b_067[5]);
             if(_bG_){
              var b_020 = b_067[6], a_019 = a_066[6];
              if(a_019 === b_020) return 1;
              var _bz_ = caml_call2(Core[384], a_019[1], b_020[1]);
              return _bz_ ? caml_call2(Core[384], a_019[2], b_020[2]) : _bz_;
             }
             var _bH_ = _bG_;
            }
            else
             var _bH_ = _bF_;
           }
           else
            var _bH_ = _bE_;
          }
          else
           var _bH_ = _bD_;
         }
         else
          var _bH_ = _bI_;
         return _bH_;
        }],
     _br_ =
       [0,
        function(x_149){
         var of_target_id_027 = Target[2], of_source_id_026 = Source[2];
         if(! x_149) return _l_;
         var
          arg0_060 = x_149[1],
          size_039 = arg0_060[6],
          position_037 = arg0_060[5],
          offset_035 = arg0_060[4],
          has_moved_033 = arg0_060[3],
          target_031 = arg0_060[2],
          source_029 = arg0_060[1],
          arg_040 = sexp_of_t$0(size_039),
          bnds_028 = [0, [1, [0, _e_, [0, arg_040, 0]]], 0],
          arg_038 = sexp_of_t(position_037),
          bnds_028$0 = [0, [1, [0, _f_, [0, arg_038, 0]]], bnds_028],
          arg_036 = sexp_of_t(offset_035),
          bnds_028$1 = [0, [1, [0, _g_, [0, arg_036, 0]]], bnds_028$0],
          arg_034 = caml_call1(Core[323], has_moved_033),
          bnds_028$2 = [0, [1, [0, _h_, [0, arg_034, 0]]], bnds_028$1],
          arg_032 = caml_call2(Core[515], of_target_id_027, target_031),
          bnds_028$3 = [0, [1, [0, _i_, [0, arg_032, 0]]], bnds_028$2],
          arg_030 = caml_call1(of_source_id_026, source_029),
          bnds_028$4 = [0, [1, [0, _j_, [0, arg_030, 0]]], bnds_028$3],
          res0_061 = [1, bnds_028$4];
         return [1, [0, _k_, [0, res0_061, 0]]];
        }],
     _bs_ = 0,
     _bt_ =
       [0,
        function(x_156){
         var _bv_ = Target[2], _bw_ = Source[2];
         function _bx_(_by_){return sexp_of_t$1(_bw_, _bv_, _by_);}
         return caml_call2(Core[472], _bx_, x_156);
        }],
     _bu_ =
       caml_call7(Bonsai[18], _bt_, _bs_, _br_, _bq_, _bp_, _bo_, on_drop);
    return caml_call3(Bonsai[49][5][1], _ah_, _bu_, _bn_);
   }
   function dragged_element$0(t, f){
    function _aL_(pattern_syntax_191){
     function _aO_(param){
      if(0 === param) return caml_call1(Bonsai[7], 0);
      if(1 !== param)
       throw caml_maybe_attach_backtrace([0, Assert_failure, _aq_], 1);
      function _aS_(source){
       function _aW_(dragging){
        function _a0_(item){
         function _a2_(param){
          var
           item = param[2],
           match = param[1],
           size = match[6],
           position = match[5],
           offset = match[4],
           x = position[1] - offset[1] | 0,
           y = position[2] - offset[2] | 0,
           _a__ = [0, caml_call1(Ppx_string_runtime[1][2], cst_px), 0],
           _a$_ = caml_call1(Core_Int[79], x),
           _ba_ = [0, caml_call1(Ppx_string_runtime[1][3], _a$_), _a__],
           _bb_ =
             [0,
              caml_call1(Ppx_string_runtime[1][2], cst_px_translateX),
              _ba_],
           _bc_ = caml_call1(Core_Int[79], y),
           _bd_ = [0, caml_call1(Ppx_string_runtime[1][3], _bc_), _bb_],
           _be_ =
             [0, caml_call1(Ppx_string_runtime[1][2], cst_translateY), _bd_],
           _bf_ = caml_call1(Ppx_string_runtime[1][4], _be_),
           _bg_ = caml_call2(Css_gen[21], cst_transform, _bf_),
           _bh_ = caml_call1(Css_gen[64], [0, 17960, size[2]]),
           _bi_ = caml_call2(Css_gen[30], _bh_, _bg_),
           _bj_ = caml_call1(Css_gen[61], [0, 17960, size[1]]),
           _bk_ = caml_call2(Css_gen[30], _bj_, _bi_),
           _bl_ = caml_call1(Virtual_dom_Vdom[1][32], _bk_),
           _bm_ =
             [0,
              [0,
               caml_call2(Virtual_dom_Vdom[1][12], dragged_element, _bl_),
               0]];
          return caml_call3(Virtual_dom_Node[17], 0, _bm_, [0, item, 0]);
         }
         function _a3_(param, _a6_){
          var
           new_for_cutoff_197 = _a6_[6],
           new_for_cutoff_201 = _a6_[5],
           new_for_cutoff_199 = _a6_[4],
           old_for_cutoff_198 = param[6],
           old_for_cutoff_202 = param[5],
           old_for_cutoff_200 = param[4],
           _a7_ = old_for_cutoff_202 === new_for_cutoff_201 ? 1 : 0;
          if(_a7_)
           var
            _a8_ = old_for_cutoff_200 === new_for_cutoff_199 ? 1 : 0,
            _a9_ =
              _a8_ ? old_for_cutoff_198 === new_for_cutoff_197 ? 1 : 0 : _a8_;
          else
           var _a9_ = _a7_;
          return _a9_;
         }
         var
          _a4_ = caml_call2(Bonsai[49][5][2], dragging, _a3_),
          _a5_ = caml_call2(Bonsai[49][5][7], _a4_, item);
         return caml_call3(Bonsai[49][5][8], _ai_, _a5_, _a2_);
        }
        var _a1_ = caml_call1(f, source);
        return caml_call3(Bonsai[49][5][1], _aj_, _a1_, _a0_);
       }
       function _aX_(param){
        if(! param)
         throw caml_maybe_attach_backtrace([0, Assert_failure, _ak_], 1);
        var pattern_syntax_192 = param[1];
        return pattern_syntax_192;
       }
       var
        _aY_ = caml_call3(Bonsai[49][5][4], _al_, pattern_syntax_191, _aX_),
        _aZ_ = caml_call1(Bonsai[49][5][6], _aY_);
       return caml_call3(Bonsai[49][5][1], _am_, _aZ_, _aW_);
      }
      function _aT_(param){
       if(! param)
        throw caml_maybe_attach_backtrace([0, Assert_failure, _an_], 1);
       var pattern_syntax_193 = param[1][1];
       return pattern_syntax_193;
      }
      var
       _aU_ = caml_call3(Bonsai[49][5][4], _ao_, pattern_syntax_191, _aT_),
       _aV_ = caml_call1(Bonsai[49][5][6], _aU_);
      return caml_call3(Bonsai[49][5][1], _ap_, _aV_, _aS_);
     }
     var _aP_ = 2;
     function _aQ_(param){if(param && param[1][3]) return 1; return 0;}
     var _aR_ = caml_call3(Bonsai[49][5][4], 0, pattern_syntax_191, _aQ_);
     return caml_call4(Bonsai[49][5][3], _ar_, _aR_, _aP_, _aO_);
    }
    var
     _aM_ = caml_call2(Bonsai[49][2], t, model),
     _aN_ = caml_call1(Bonsai[49][5][6], _aM_);
    return caml_call3(Bonsai[49][5][1], _as_, _aN_, _aL_);
   }
   function t_of_sexp$0(of_source_id_204, of_target_id_205, sexp_210){
    a:
    {
     if(0 === sexp_210[0]){
      var _aD_ = sexp_210[1];
      b:
      if(caml_string_notequal(_aD_, cst_Dragging)){
       if(caml_string_notequal(_aD_, cst_Not_dragging)){
        if(! caml_string_notequal(_aD_, cst_dragging)) break b;
        if(caml_string_notequal(_aD_, cst_not_dragging)) break a;
       }
       return 0;
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[9], error_source_208, sexp_210);
     }
     var _aE_ = sexp_210[1];
     if(! _aE_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[11], error_source_208, sexp_210);
     var _aF_ = _aE_[1];
     if(0 !== _aF_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[10], error_source_208, sexp_210);
     var _aG_ = _aF_[1];
     b:
     if(caml_string_notequal(_aG_, cst_Dragging)){
      if(caml_string_notequal(_aG_, cst_Not_dragging)){
       if(! caml_string_notequal(_aG_, cst_dragging)) break b;
       if(caml_string_notequal(_aG_, cst_not_dragging)) break a;
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_208, sexp_210);
     }
     var
      sexps_211 = _aE_[2],
      _aH_ =
        function(param){
         var target = param[2][1], source = param[1];
         return [0, source, target];
        },
      _aI_ = 0,
      _aJ_ =
        function(param){
         return caml_string_notequal(param, cst_source$0)
                 ? caml_string_notequal(param, cst_target$0) ? -1 : 1
                 : 0;
        },
      _aK_ =
        [0,
         cst_source,
         1,
         of_source_id_204,
         [0, cst_target, 1, caml_call1(Core[516], of_target_id_205), 0]];
     return caml_call7
             (Sexplib0_Sexp_conv_record[4],
              error_source_208,
              sexp_210,
              _aK_,
              _aJ_,
              _aI_,
              _aH_,
              sexps_211);
    }
    return caml_call2
            (Sexplib0_Sexp_conv_error[12], error_source_208, sexp_210);
   }
   function sexp_of_t$4(of_source_id_214, of_target_id_215, param){
    if(! param) return _aw_;
    var
     target_219 = param[2],
     source_217 = param[1],
     arg_220 = caml_call2(Core[515], of_target_id_215, target_219),
     bnds_216 = [0, [1, [0, _at_, [0, arg_220, 0]]], 0],
     arg_218 = caml_call1(of_source_id_214, source_217),
     bnds_216$0 = [0, [1, [0, _au_, [0, arg_218, 0]]], bnds_216];
    return [1, [0, _av_, bnds_216$0]];
   }
   function equal$1(cmp_source_id, cmp_target_id, a_223, b_224){
    if(a_223 === b_224) return 1;
    if(! a_223) return b_224 ? 0 : 1;
    if(! b_224) return 0;
    var _az_ = caml_call2(cmp_source_id, a_223[1], b_224[1]);
    if(! _az_) return _az_;
    var _aA_ = b_224[2], _aB_ = a_223[2];
    function _aC_(a_227, b_228){
     return caml_call2(cmp_target_id, a_227, b_228);
    }
    return caml_call3(Core[511], _aC_, _aB_, _aA_);
   }
   var Model = [0, t_of_sexp$0, sexp_of_t$4, equal$1];
   function model$0(t){
    var _ax_ = t[4];
    if(_ax_){
     var _ay_ = _ax_[1], source = _ay_[1];
     if(_ay_[3]){var target = _ay_[2]; return [0, source, target];}
    }
    return 0;
   }
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_drag_and_dro);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Inline_css[1][1], cst_web_ui_drag_and_drop_src_b$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_drag_and_dro);
   var
    Bonsai_web_ui_drag_and_drop =
      [0,
       Model,
       project_target,
       source,
       sentinel,
       drop_target,
       model$0,
       create,
       dragged_element$0,
       [0, [0, t_of_sexp, sexp_of_t$2, equal$0], type_id]];
   runtime.caml_register_global
    (223, Bonsai_web_ui_drag_and_drop, cst_Bonsai_web_ui_drag_and_dro$0);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
