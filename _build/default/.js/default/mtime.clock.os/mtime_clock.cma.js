// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Mtime_clock
//# unitInfo: Requires: Mtime
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Mtime = global_data.Mtime;
   runtime.ocaml_mtime_clock_elapsed_ns(0);
   function elapsed(param){
    var _j_ = runtime.ocaml_mtime_clock_elapsed_ns(0);
    return caml_call1(Mtime[1][19], _j_);
   }
   function now(param){
    var _i_ = runtime.ocaml_mtime_clock_now_ns(0);
    return caml_call1(Mtime[3], _i_);
   }
   function period(param){
    var _h_ = runtime.ocaml_mtime_clock_period_ns(0);
    return caml_call1(Mtime[1][24], _h_);
   }
   function counter(_g_){return runtime.ocaml_mtime_clock_elapsed_ns(_g_);}
   function count(c){
    var
     _f_ = runtime.caml_int64_sub(runtime.ocaml_mtime_clock_elapsed_ns(0), c);
    return caml_call1(Mtime[1][19], _f_);
   }
   function _a_(_e_){return runtime.ocaml_mtime_clock_period_ns(_e_);}
   function _b_(_d_){return runtime.ocaml_mtime_clock_now_ns(_d_);}
   var
    Mtime_clock =
      [0,
       elapsed,
       now,
       period,
       counter,
       count,
       function(_c_){return runtime.ocaml_mtime_clock_elapsed_ns(_c_);},
       _b_,
       _a_];
   runtime.caml_register_global(1, Mtime_clock, "Mtime_clock");
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJtdGltZV9jbG9jay5jbWEuanMiLCJzb3VyY2VSb290IjoiIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztHOzs7Ozs7OztHOztJLFU7SSxPO0c7O0ksVTtJLE87Rzs7SSxVO0ksTztHO3lCOztJO1csdUI7SSxPO0c7cUI7cUI7Ozs7Ozs7OztxQjs7Ozs7RSIsInNvdXJjZXNDb250ZW50IjpbXX0=
