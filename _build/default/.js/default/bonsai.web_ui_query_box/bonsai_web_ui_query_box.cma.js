// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Bonsai_web_ui_query_box
//# unitInfo: Requires: Bonsai, Bonsai_web, CamlinternalLazy, Core, Core__Array, Core__Char, Core__Comparable, Core__Comparator, Core__Float, Core__Int, Core__List, Core__Map, Core__Option, Core__String, Core__Uniform_array, Css_gen, Fuzzy_match, Fuzzy_search, Incr_map, Js_of_ocaml__Dom_html, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Sexplib0__Sexp_conv_error, Sexplib0__Sexp_conv_record, Ui_effect, Ui_incr, Virtual_dom__Effect, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$2 = "",
    cst_Bonsai_web_ui_query_box$0 = "Bonsai_web_ui_query_box",
    cst_Down = "Down",
    cst_Fuzzy_match = "Fuzzy_match",
    cst_Permanent_fixture = "Permanent_fixture",
    cst_Transient_overlay = "Transient_overlay",
    cst_Up = "Up",
    cst_bonsai_web_ui_query_box$0 = "bonsai_web_ui_query_box",
    cst_down = "down",
    cst_permanent_fixture = "permanent_fixture",
    cst_transient_overlay = "transient_overlay",
    cst_up = "up",
    cst_web_ui_query_box_src_bonsa =
      "web_ui/query_box/src/bonsai_web_ui_query_box.ml",
    caml_check_bound = runtime.caml_check_bound,
    caml_int_compare = runtime.caml_int_compare,
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_string_notequal = runtime.caml_string_notequal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   function caml_call7(f, a0, a1, a2, a3, a4, a5, a6){
    return (f.l >= 0 ? f.l : f.l = f.length) == 7
            ? f(a0, a1, a2, a3, a4, a5, a6)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst$1 = cst$2,
    cst = cst$2,
    cst$0 = cst$2,
    error_source_064 =
      "web_ui/query_box/src/bonsai_web_ui_query_box.ml.Suggestion_list_kind.t",
    all = [0, 0, [0, 1, 0]],
    error_source_072 =
      "web_ui/query_box/src/bonsai_web_ui_query_box.ml.Expand_direction.t",
    all$0 = [0, 0, [0, 1, 0]],
    all$1 = [0, 0, [0, 1, 0]],
    Core_Char = global_data.Core__Char,
    Fuzzy_match = global_data.Fuzzy_match,
    Ui_incr = global_data.Ui_incr,
    Incr_map = global_data.Incr_map,
    Bonsai = global_data.Bonsai,
    Fuzzy_search = global_data.Fuzzy_search,
    Core_String = global_data.Core__String,
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Core_Option = global_data.Core__Option,
    Core_Map = global_data.Core__Map,
    Core = global_data.Core,
    Core_Int = global_data.Core__Int,
    Core_List = global_data.Core__List,
    Core_Uniform_array = global_data.Core__Uniform_array,
    Core_Array = global_data.Core__Array,
    Core_Comparable = global_data.Core__Comparable,
    Assert_failure = global_data.Assert_failure,
    Virtual_dom_Effect = global_data.Virtual_dom__Effect,
    Ui_effect = global_data.Ui_effect,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Core_Float = global_data.Core__Float,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Css_gen = global_data.Css_gen,
    Bonsai_web = global_data.Bonsai_web,
    CamlinternalLazy = global_data.CamlinternalLazy,
    Sexplib0_Sexp_conv_error = global_data.Sexplib0__Sexp_conv_error;
   global_data.Sexplib0__Sexp_conv_record;
   var
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Core_Comparator = global_data.Core__Comparator;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_query_box$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_query_box$0);
   caml_call1(Ppx_expect_runtime[1][1], cst_web_ui_query_box_src_bonsa);
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_query_box$0,
     "bonsai_web_ui_query_box.ml");
   var
    _ao_ = [0, [0, cst_web_ui_query_box_src_bonsa, 691, 24700, 24712]],
    _ap_ = [0, [0, cst_web_ui_query_box_src_bonsa, 690, 24674, 24684]],
    _an_ = [0, [0, cst_web_ui_query_box_src_bonsa, 705, 25241, 25245]],
    _aq_ = [0, [0, cst_web_ui_query_box_src_bonsa, 676, 24233, 24239]],
    _ar_ = [0, [0, cst_web_ui_query_box_src_bonsa, 675, 24212, 24216]],
    _am_ = [0, [0, cst_web_ui_query_box_src_bonsa, 637, 22895, 22899]],
    _as_ = [0, [0, cst_web_ui_query_box_src_bonsa, 672, 24130, 24136]],
    _at_ = [0, [0, cst_web_ui_query_box_src_bonsa, 671, 24106, 24110]],
    _au_ = [0, [0, cst_web_ui_query_box_src_bonsa, 647, 23267, 23271]],
    _ak_ = [0, "Fuzzy_search_and_score"],
    _al_ = [0, cst_Fuzzy_match],
    _X_ = [0, cst_web_ui_query_box_src_bonsa, 208, 10],
    _Y_ = [0, cst_web_ui_query_box_src_bonsa, 208, 6839, 6849],
    _W_ = [0, [0, cst_web_ui_query_box_src_bonsa, 212, 6974, 6982]],
    _Z_ = [0, [0, cst_web_ui_query_box_src_bonsa, 208, 6839, 6849]],
    ___ = [0, [0, cst_web_ui_query_box_src_bonsa, 207, 6815, 6823]],
    _$_ = [0, [0, cst_web_ui_query_box_src_bonsa, 206, 6762, 6770]],
    _aa_ = [0, [0, cst_web_ui_query_box_src_bonsa, 206, 6762, 6770]],
    _ab_ = [0, [0, cst_web_ui_query_box_src_bonsa, 206, 6762, 6770]],
    _F_ = [0, cst_web_ui_query_box_src_bonsa, 219, 4],
    _E_ = [0, [0, cst_web_ui_query_box_src_bonsa, 221, 7253, 7259]],
    _D_ = [0, cst_web_ui_query_box_src_bonsa, 219, 4],
    _G_ = [0, [0, cst_web_ui_query_box_src_bonsa, 219, 7190, 7194]],
    _H_ = [0, [0, cst_web_ui_query_box_src_bonsa, 219, 7190, 7194]],
    _I_ = [0, [0, cst_web_ui_query_box_src_bonsa, 230, 7571, 7577]],
    _J_ = [0, cst_web_ui_query_box_src_bonsa, 220, 7231, 7237],
    _y_ = [0, [0, cst_web_ui_query_box_src_bonsa, 291, 9973, 9981]],
    cst_value = "value",
    cst_text = "text",
    _k_ = [0, 17960, 0],
    cst_query_box_item_container = "query-box-item-container",
    cst_data_test = "data-test",
    _l_ = [0, [0, cst_web_ui_query_box_src_bonsa, 381, 13166, 13168]],
    _m_ = [0, [0, cst_web_ui_query_box_src_bonsa, 380, 13127, 13129]],
    _n_ = [0, [0, cst_web_ui_query_box_src_bonsa, 379, 13073, 13075]],
    _o_ = [0, [0, cst_web_ui_query_box_src_bonsa, 334, 11529, 11533]],
    _p_ = [0, [0, cst_web_ui_query_box_src_bonsa, 333, 11502, 11504]],
    _q_ = [0, [0, cst_web_ui_query_box_src_bonsa, 330, 11352, 11354]],
    _r_ = [0, [0, cst_web_ui_query_box_src_bonsa, 330, 11352, 11354]],
    _s_ = [0, [0, cst_web_ui_query_box_src_bonsa, 330, 11352, 11354]],
    _t_ = [0, [0, cst_web_ui_query_box_src_bonsa, 330, 11352, 11354]],
    _u_ = [0, [0, cst_web_ui_query_box_src_bonsa, 330, 11352, 11354]],
    _v_ = [0, [0, cst_web_ui_query_box_src_bonsa, 330, 11352, 11354]],
    _w_ = [0, "query-box"],
    _x_ = [0, [0, cst_web_ui_query_box_src_bonsa, 330, 11352, 11354]],
    _z_ = [0, [0, cst_web_ui_query_box_src_bonsa, 286, 9881, 9883]],
    _A_ = [0, [0, cst_web_ui_query_box_src_bonsa, 285, 9837, 9839]],
    _B_ = [0, [0, cst_web_ui_query_box_src_bonsa, 237, 7753, 7757]],
    _C_ = [0, [0, cst_web_ui_query_box_src_bonsa, 236, 7735, 7737]],
    _K_ = [0, [0, cst_web_ui_query_box_src_bonsa, 219, 7190, 7194]],
    _L_ = [0, [0, cst_web_ui_query_box_src_bonsa, 218, 7165, 7167]],
    _M_ = [0, [0, cst_web_ui_query_box_src_bonsa, 93, 2265, 2267]],
    _N_ = [0, [0, cst_web_ui_query_box_src_bonsa, 93, 2265, 2267]],
    _O_ = [0, [0, cst_web_ui_query_box_src_bonsa, 93, 2265, 2267]],
    _P_ = [0, [0, cst_web_ui_query_box_src_bonsa, 93, 2265, 2267]],
    _Q_ = [0, [0, cst_web_ui_query_box_src_bonsa, 93, 2265, 2267]],
    _R_ = [0, [0, cst_web_ui_query_box_src_bonsa, 93, 2265, 2267]],
    _S_ = [0, [0, cst_web_ui_query_box_src_bonsa, 93, 2265, 2267]],
    _T_ = [0, [0, cst_web_ui_query_box_src_bonsa, 93, 2265, 2267]],
    _U_ = [0, [0, cst_web_ui_query_box_src_bonsa, 93, 2265, 2267]],
    _V_ = [0, [0, cst_web_ui_query_box_src_bonsa, 93, 2265, 2267]],
    _ac_ = [0, [0, cst_web_ui_query_box_src_bonsa, 93, 2265, 2267]],
    _ad_ = [0, [0, cst_web_ui_query_box_src_bonsa, 90, 2153, 2157]],
    _ae_ = [0, [0, cst_web_ui_query_box_src_bonsa, 89, 2107, 2109]],
    _af_ = [0, [0, cst_web_ui_query_box_src_bonsa, 86, 2008, 2010]],
    _ag_ = [0, [0, cst_web_ui_query_box_src_bonsa, 86, 2008, 2010]],
    _ah_ = [0, [0, cst_web_ui_query_box_src_bonsa, 86, 2008, 2010]],
    _ai_ = [0, [0, cst_web_ui_query_box_src_bonsa, 86, 2008, 2010]],
    _aj_ = [0, [0, cst_web_ui_query_box_src_bonsa, 86, 2008, 2010]],
    _i_ = [0, cst_Up],
    _j_ = [0, cst_Down],
    _g_ = [0, cst_Permanent_fixture],
    _h_ = [0, cst_Transient_overlay],
    _d_ = [0, "offset"],
    _e_ = [0, "suggestion_list_state"],
    _f_ = [0, "query"],
    _a_ = [0, "First_item"],
    _b_ = [0, "Closed"],
    _c_ = [0, "Selected"],
    cst_bonsai_web_ui_query_box = cst_bonsai_web_ui_query_box$0,
    cst_Bonsai_web_ui_query_box = cst_Bonsai_web_ui_query_box$0;
   function compare_suggestion_list_state(cmp_k, a_020, b_021){
    if(a_020 === b_021) return 0;
    if(typeof a_020 === "number"){
     if(! a_020){
      if(typeof b_021 === "number" && ! b_021) return 0;
      return -1;
     }
     if(typeof b_021 !== "number") return -1;
     if(b_021) return 0;
    }
    else{
     var a_022 = a_020[1];
     if(typeof b_021 !== "number"){
      var b_023 = b_021[1];
      return caml_call2(cmp_k, a_022, b_023);
     }
     if(b_021) return 1;
    }
    return 1;
   }
   function t_of_sexp(sexp_065){
    a:
    {
     if(0 === sexp_065[0]){
      var _fH_ = sexp_065[1];
      b:
      if(caml_string_notequal(_fH_, cst_Permanent_fixture)){
       if(caml_string_notequal(_fH_, cst_Transient_overlay)){
        if(! caml_string_notequal(_fH_, cst_permanent_fixture)) break b;
        if(caml_string_notequal(_fH_, cst_transient_overlay)) break a;
       }
       return 0;
      }
      return 1;
     }
     var _fI_ = sexp_065[1];
     if(! _fI_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[11], error_source_064, sexp_065);
     var _fJ_ = _fI_[1];
     if(0 !== _fJ_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[10], error_source_064, sexp_065);
     var _fK_ = _fJ_[1];
     b:
     if(caml_string_notequal(_fK_, cst_Permanent_fixture)){
      if(caml_string_notequal(_fK_, cst_Transient_overlay)){
       if(! caml_string_notequal(_fK_, cst_permanent_fixture)) break b;
       if(caml_string_notequal(_fK_, cst_transient_overlay)) break a;
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_064, sexp_065);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[7], error_source_064, sexp_065);
    }
    return caml_call2
            (Sexplib0_Sexp_conv_error[12], error_source_064, sexp_065);
   }
   function sexp_of_t(param){return param ? _g_ : _h_;}
   var compare = caml_int_compare;
   function equal(_fG_, _fF_){return _fG_ === _fF_ ? 1 : 0;}
   var Suggestion_list_kind = [0, t_of_sexp, sexp_of_t, compare, all, equal];
   function t_of_sexp$0(sexp_073){
    a:
    {
     if(0 === sexp_073[0]){
      var _fB_ = sexp_073[1];
      b:
      if(caml_string_notequal(_fB_, cst_Down)){
       if(caml_string_notequal(_fB_, cst_Up)){
        if(! caml_string_notequal(_fB_, cst_down)) break b;
        if(caml_string_notequal(_fB_, cst_up)) break a;
       }
       return 1;
      }
      return 0;
     }
     var _fC_ = sexp_073[1];
     if(! _fC_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[11], error_source_072, sexp_073);
     var _fD_ = _fC_[1];
     if(0 !== _fD_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[10], error_source_072, sexp_073);
     var _fE_ = _fD_[1];
     b:
     if(caml_string_notequal(_fE_, cst_Down)){
      if(caml_string_notequal(_fE_, cst_Up)){
       if(! caml_string_notequal(_fE_, cst_down)) break b;
       if(caml_string_notequal(_fE_, cst_up)) break a;
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_072, sexp_073);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[7], error_source_072, sexp_073);
    }
    return caml_call2
            (Sexplib0_Sexp_conv_error[12], error_source_072, sexp_073);
   }
   function sexp_of_t$0(param){return param ? _i_ : _j_;}
   var compare$0 = caml_int_compare;
   function equal$0(_fA_, _fz_){return _fA_ === _fz_ ? 1 : 0;}
   var
    Expand_direction =
      [0, t_of_sexp$0, sexp_of_t$0, compare$0, all$0, equal$0];
   function select_key(first_try, then_try, else_use){
    if(first_try){var key = first_try[1][1]; return [0, key];}
    var _fx_ = runtime.caml_obj_tag(then_try);
    a:
    if(250 === _fx_)
     var _fy_ = then_try[1];
    else{
     if(246 !== _fx_ && 244 !== _fx_){var _fy_ = then_try; break a;}
     var _fy_ = caml_call1(CamlinternalLazy[2], then_try);
    }
    if(! _fy_) return else_use;
    var key$0 = _fy_[1][1];
    return [0, key$0];
   }
   function focus_input(r){return r[5];}
   function set_query(r){return r[4];}
   function query(r){return r[3];}
   function view(r){return r[2];}
   function selected_item(r){return r[1];}
   function create
   (Key,
    opt,
    _bI_,
    _bH_,
    _bG_,
    _bF_,
    _bE_,
    _bD_,
    _bC_,
    _bB_,
    _bA_,
    f,
    on_select,
    param){
    if(opt)
     var sth = opt[1], initial_query = sth;
    else
     var initial_query = cst$0;
    if(_bI_)
     var sth$0 = _bI_[1], max_visible_items = sth$0;
    else
     var max_visible_items = caml_call1(Bonsai[2][1], 10);
    if(_bH_)
     var sth$1 = _bH_[1], suggestion_list_kind = sth$1;
    else
     var suggestion_list_kind = caml_call1(Bonsai[2][1], 0);
    if(_bG_)
     var sth$2 = _bG_[1], expand_direction = sth$2;
    else
     var expand_direction = caml_call1(Bonsai[2][1], 0);
    if(_bF_)
     var sth$3 = _bF_[1], selected_item_attr = sth$3;
    else
     var
      selected_item_attr = caml_call1(Bonsai[2][1], Virtual_dom_Vdom[1][11]);
    if(_bE_)
     var sth$4 = _bE_[1], extra_list_container_attr = sth$4;
    else
     var
      extra_list_container_attr =
        caml_call1(Bonsai[2][1], Virtual_dom_Vdom[1][11]);
    if(_bD_)
     var sth$5 = _bD_[1], extra_input_attr = sth$5;
    else
     var extra_input_attr = caml_call1(Bonsai[2][1], Virtual_dom_Vdom[1][11]);
    if(_bC_)
     var sth$6 = _bC_[1], extra_attr = sth$6;
    else
     var extra_attr = caml_call1(Bonsai[2][1], Virtual_dom_Vdom[1][11]);
    if(_bB_)
     var sth$7 = _bB_[1], on_blur = sth$7;
    else
     var
      _bM_ = caml_call1(Virtual_dom_Effect[6], 0),
      on_blur = caml_call1(Bonsai[2][1], _bM_);
    if(_bA_)
     var sth$8 = _bA_[1], modify_input_on_select = sth$8;
    else
     var
      _bL_ = function(selected_key, query){return cst;},
      modify_input_on_select = caml_call1(Bonsai[2][1], _bL_);
    function _bJ_(pattern_syntax_078){
     function _bN_(suggestion_list_is_initialized){
      function _bR_(initialize_suggestion_list){
       function _bV_(inject_initialize_suggestion_l){
        function _bY_(pattern_syntax_083){
         function _cH_(suggestion_list_state){
          function _cL_(query){
           function _cP_(offset){
            function _cT_(items){
             function _cX_(inject){
              function _c1_(selected_key){
               function _de_(items){
                function _dn_(get_items){
                 function _dp_(items){
                  function _dW_(pattern_syntax_128){
                   function _dY_(focus_input){
                    function _d2_(focus_attr){
                     function _d6_(blur_input){
                      function _d__(let_syntax_147){
                       function _ev_(let_syntax_154){
                        function _ew_(input_id){
                         function _ex_(param){
                          var
                           _eN_ = param[2],
                           _eO_ = _eN_[2],
                           _eP_ = _eO_[2],
                           _eQ_ = _eP_[2],
                           _eR_ = _eQ_[2],
                           _eS_ = _eR_[2],
                           _eT_ = _eS_[2],
                           _eU_ = _eT_[2],
                           _eV_ = _eU_[2],
                           _eW_ = _eV_[2],
                           _eX_ = _eW_[2],
                           _eY_ = _eX_[2],
                           _eZ_ = _eY_[2],
                           match = _eZ_[2],
                           on_blur = match[2],
                           inject_initialize_suggestion_l = match[1],
                           focus_input = _eZ_[1],
                           focus_attr = _eY_[1],
                           input_id = _eX_[1],
                           suggestion_container_id = _eW_[1],
                           extra_attr = _eV_[1],
                           extra_input_attr = _eU_[1],
                           extra_list_container_attr = _eT_[1],
                           items = _eS_[1],
                           expand_direction = _eR_[1],
                           suggestion_list_kind = _eQ_[1],
                           handle_keydown = _eP_[1],
                           inject = _eO_[1],
                           selected_key = _eN_[1],
                           query = param[1];
                          if(suggestion_list_kind)
                           var
                            is_open = 1,
                            suggestions_position = Virtual_dom_Vdom[1][11],
                            container_position = Virtual_dom_Vdom[1][11];
                          else
                           var
                            is_open$0 = caml_call1(Core_Option[62], selected_key),
                            _fm_ = caml_call5(Css_gen[24], 0, 0, 0, 0, 491227799),
                            suggestions_position$0 =
                              caml_call1(Virtual_dom_Vdom[1][32], _fm_),
                            _fn_ = caml_call5(Css_gen[24], 0, 0, 0, 0, 260471020),
                            container_position$0 =
                              caml_call1(Virtual_dom_Vdom[1][32], _fn_),
                            is_open = is_open$0,
                            suggestions_position = suggestions_position$0,
                            container_position = container_position$0;
                          function _e0_(ev){
                           var
                            _ft_ = Js_of_ocaml_Js[5][10],
                            _fu_ = caml_call1(Js_of_ocaml_Js[6][10], ev.relatedTarget),
                            match = caml_call2(Core_Option[32], _fu_, _ft_);
                           if(! match){
                            var _fw_ = [0, caml_call1(inject, 4), [0, on_blur, 0]];
                            return [0, Virtual_dom_Effect[2], _fw_];
                           }
                           var
                            related_target = match[1],
                            id = runtime.caml_string_of_jsstring(related_target.id);
                           if
                            (!
                             caml_call2(Core_String[145], id, suggestion_container_id)
                             && ! caml_call2(Core_String[145], id, input_id)){
                            var _fv_ = [0, caml_call1(inject, 4), [0, on_blur, 0]];
                            return [0, Virtual_dom_Effect[2], _fv_];
                           }
                           return Virtual_dom_Effect[1];
                          }
                          var
                           on_blur$0 = caml_call1(Virtual_dom_Vdom[1][54], _e0_),
                           _e1_ = 0,
                           _e2_ =
                             [0, focus_attr, [0, on_blur$0, [0, extra_input_attr, 0]]];
                          function _e3_(param){
                           var
                            _fs_ =
                              [0,
                               inject_initialize_suggestion_l,
                               [0, caml_call1(inject, 5), 0]];
                           return caml_call1(Virtual_dom_Effect[11], _fs_);
                          }
                          var
                           _e4_ = [0, caml_call1(Virtual_dom_Vdom[1][53], _e3_), _e2_];
                          function _e5_(param, query){
                           var
                            _fr_ =
                              [0,
                               caml_call1(inject, [0, query]),
                               [0, inject_initialize_suggestion_l, 0]];
                           return caml_call1(Virtual_dom_Effect[11], _fr_);
                          }
                          var
                           _e6_ = [0, caml_call1(Virtual_dom_Vdom[1][57], _e5_), _e4_];
                          function _e7_(ev){
                           var
                            _fq_ =
                              [0,
                               inject_initialize_suggestion_l,
                               [0, caml_call1(handle_keydown, ev), 0]];
                           return caml_call1(Virtual_dom_Effect[11], _fq_);
                          }
                          var
                           _e8_ = [0, caml_call1(Virtual_dom_Vdom[1][81], _e7_), _e6_],
                           _e9_ =
                             [0,
                              caml_call2(Virtual_dom_Vdom[1][3], cst_value, query),
                              _e8_],
                           _e__ =
                             [0, caml_call1(Virtual_dom_Vdom[1][43], cst_text), _e9_],
                           _e$_ =
                             [0,
                              [0, caml_call1(Virtual_dom_Vdom[1][25], input_id), _e__]],
                           input = caml_call3(Virtual_dom_Node[30], 0, _e$_, _e1_);
                          if(is_open){
                           if(expand_direction)
                            var
                             _fa_ = caml_call1(Core_Map[80], items),
                             directed_items = caml_call1(Core_List[59], _fa_),
                             _fb_ = caml_call1(Css_gen[26], _k_),
                             directed_items$0 = directed_items,
                             position_above_or_below =
                               caml_call1(Virtual_dom_Vdom[1][32], _fb_);
                           else
                            var
                             _fl_ = caml_call1(Core_Map[80], items),
                             directed_items$0 = _fl_,
                             position_above_or_below = Virtual_dom_Vdom[1][11];
                           var
                            _fc_ =
                              caml_call2
                               (Virtual_dom_Vdom[1][12],
                                position_above_or_below,
                                extra_list_container_attr),
                            attr =
                              caml_call2
                               (Virtual_dom_Vdom[1][12], suggestions_position, _fc_),
                            suggestions =
                              caml_call3
                               (Virtual_dom_Node[17],
                                0,
                                [0, [0, attr, 0]],
                                directed_items$0);
                          }
                          else
                           var suggestions = caml_call3(Virtual_dom_Node[17], 0, 0, 0);
                          var
                           _fd_ = [0, suggestions, 0],
                           _fe_ = [0, on_blur$0, [0, container_position, 0]];
                          function _ff_(ev){
                           var
                            comparison =
                              expand_direction
                               ? caml_call2(Core_Float[129], ev.deltaY, 0.)
                               : caml_call2(Core_Float[130], ev.deltaY, 0.),
                            _fo_ = [0, Virtual_dom_Effect[20], 0],
                            _fp_ =
                              comparison ? caml_call1(inject, 3) : caml_call1(inject, 2);
                           return [0, Virtual_dom_Effect[2], [0, _fp_, _fo_]];
                          }
                          var
                           _fg_ = [0, caml_call1(Virtual_dom_Vdom[1][89], _ff_), _fe_],
                           _fh_ = [0, caml_call1(Virtual_dom_Vdom[1][42], -1), _fg_],
                           _fi_ =
                             [0,
                              caml_call1(Virtual_dom_Vdom[1][25], suggestion_container_id),
                              _fh_],
                           _fj_ =
                             [0,
                              [0,
                               caml_call2
                                (Virtual_dom_Vdom[1][1],
                                 cst_data_test,
                                 cst_query_box_item_container),
                               _fi_]],
                           suggestions_container =
                             caml_call3(Virtual_dom_Node[17], 0, _fj_, _fd_),
                           _fk_ =
                             expand_direction
                              ? [0, suggestions_container, [0, input, 0]]
                              : [0, input, [0, suggestions_container, 0]],
                           view =
                             caml_call3
                              (Virtual_dom_Node[17], 0, [0, [0, extra_attr, 0]], _fk_);
                          return [0,
                                  selected_key,
                                  view,
                                  query,
                                  function(query){return caml_call1(inject, [0, query]);},
                                  focus_input];
                         }
                         var
                          _ey_ =
                            caml_call2
                             (Bonsai[49][5][7], inject_initialize_suggestion_l, on_blur),
                          _ez_ = caml_call2(Bonsai[49][5][7], focus_input, _ey_),
                          _eA_ = caml_call2(Bonsai[49][5][7], focus_attr, _ez_),
                          _eB_ = caml_call2(Bonsai[49][5][7], input_id, _eA_),
                          _eC_ = caml_call2(Bonsai[49][5][7], let_syntax_154, _eB_),
                          _eD_ = caml_call2(Bonsai[49][5][7], extra_attr, _eC_),
                          _eE_ = caml_call2(Bonsai[49][5][7], extra_input_attr, _eD_),
                          _eF_ =
                            caml_call2
                             (Bonsai[49][5][7], extra_list_container_attr, _eE_),
                          _eG_ = caml_call2(Bonsai[49][5][7], items, _eF_),
                          _eH_ = caml_call2(Bonsai[49][5][7], expand_direction, _eG_),
                          _eI_ =
                            caml_call2(Bonsai[49][5][7], suggestion_list_kind, _eH_),
                          _eJ_ = caml_call2(Bonsai[49][5][7], let_syntax_147, _eI_),
                          _eK_ = caml_call2(Bonsai[49][5][7], inject, _eJ_),
                          _eL_ = caml_call2(Bonsai[49][5][7], selected_key, _eK_),
                          _eM_ = caml_call2(Bonsai[49][5][7], query, _eL_);
                         return caml_call3(Bonsai[49][5][8], _l_, _eM_, _ex_);
                        }
                        return caml_call3(Bonsai[49][5][1], _m_, Bonsai[8], _ew_);
                       }
                       return caml_call3(Bonsai[49][5][1], _n_, Bonsai[8], _ev_);
                      }
                      function _d$_(param){
                       var
                        _ei_ = param[2],
                        _ej_ = _ei_[2],
                        _ek_ = _ej_[2],
                        _el_ = _ek_[2],
                        _em_ = _el_[2],
                        match = _em_[2],
                        modify_input_on_select = match[2],
                        query = match[1],
                        blur_input = _em_[1],
                        suggestion_list_state = _el_[1],
                        expand_direction = _ek_[1],
                        on_select = _ej_[1],
                        selected_key = _ei_[1],
                        inject = param[1];
                       return function(ev){
                        var
                         _en_ = [0, Virtual_dom_Effect[20], 0],
                         _eo_ = [0, caml_call1(inject, 0), _en_],
                         move_next = [0, Virtual_dom_Effect[2], _eo_],
                         _ep_ = [0, Virtual_dom_Effect[20], 0],
                         _eq_ = [0, caml_call1(inject, 1), _ep_],
                         move_prev = [0, Virtual_dom_Effect[2], _eq_];
                        if(expand_direction)
                         var down = move_prev, up = move_next;
                        else
                         var down = move_next, up = move_prev;
                        var
                         switcher =
                           caml_call1(Js_of_ocaml_Dom_html[26][1], ev) - 96 | 0;
                        if(1 >= switcher >>> 0) return switcher ? down : up;
                        var switcher$0 = switcher + 57 | 0;
                        if(3 >= switcher$0 >>> 0)
                         switch(switcher$0){
                           case 0:
                            return ev.shiftKey | 0
                                    ? selected_key ? up : Virtual_dom_Effect[1]
                                    : selected_key ? down : Virtual_dom_Effect[1];
                           case 1:
                            if(! selected_key) return caml_call1(inject, 5);
                            var
                             key = selected_key[1],
                             _er_ = [0, Virtual_dom_Effect[20], 0],
                             _es_ = [0, caml_call1(inject, 4), _er_],
                             _et_ =
                               [0,
                                caml_call1
                                 (inject,
                                  [0, caml_call2(modify_input_on_select, key, query)]),
                                _es_],
                             _eu_ = [0, caml_call1(on_select, key), _et_];
                            return [0, Virtual_dom_Effect[2], _eu_];
                           case 2: break;
                           default:
                            if
                             (typeof suggestion_list_state === "number"
                              && ! suggestion_list_state)
                             return blur_input;
                            return caml_call1(inject, 4);
                         }
                        return Virtual_dom_Effect[1];};
                      }
                      var
                       _ea_ =
                         caml_call2(Bonsai[49][5][7], query, modify_input_on_select),
                       _eb_ = caml_call2(Bonsai[49][5][7], blur_input, _ea_),
                       _ec_ =
                         caml_call2(Bonsai[49][5][7], suggestion_list_state, _eb_),
                       _ed_ = caml_call2(Bonsai[49][5][7], expand_direction, _ec_),
                       _ee_ = caml_call2(Bonsai[49][5][7], on_select, _ed_),
                       _ef_ = caml_call2(Bonsai[49][5][7], selected_key, _ee_),
                       _eg_ = caml_call2(Bonsai[49][5][7], inject, _ef_),
                       _eh_ = caml_call3(Bonsai[49][5][8], _o_, _eg_, _d$_);
                      return caml_call3(Bonsai[49][5][1], _p_, _eh_, _d__);
                     }
                     function _d7_(param){
                      var pattern_syntax_129 = param[3];
                      return pattern_syntax_129;
                     }
                     var
                      _d8_ =
                        caml_call3(Bonsai[49][5][4], _q_, pattern_syntax_128, _d7_),
                      _d9_ = caml_call1(Bonsai[49][5][6], _d8_);
                     return caml_call3(Bonsai[49][5][1], _r_, _d9_, _d6_);
                    }
                    function _d3_(param){
                     var pattern_syntax_130 = param[1];
                     return pattern_syntax_130;
                    }
                    var
                     _d4_ =
                       caml_call3(Bonsai[49][5][4], _s_, pattern_syntax_128, _d3_),
                     _d5_ = caml_call1(Bonsai[49][5][6], _d4_);
                    return caml_call3(Bonsai[49][5][1], _t_, _d5_, _d2_);
                   }
                   function _dZ_(param){
                    var pattern_syntax_131 = param[2];
                    return pattern_syntax_131;
                   }
                   var
                    _d0_ =
                      caml_call3(Bonsai[49][5][4], _u_, pattern_syntax_128, _dZ_),
                    _d1_ = caml_call1(Bonsai[49][5][6], _d0_);
                   return caml_call3(Bonsai[49][5][1], _v_, _d1_, _dY_);
                  }
                  var _dX_ = caml_call2(Bonsai_web[5][26][1], _w_, 0);
                  return caml_call3(Bonsai[49][5][1], _x_, _dX_, _dW_);
                 }
                 function _dq_(key, item){
                  function _ds_(param){
                   var
                    _dB_ = param[2],
                    _dC_ = _dB_[2],
                    _dD_ = _dC_[2],
                    _dE_ = _dD_[2],
                    _dF_ = _dE_[2],
                    _dG_ = _dF_[2],
                    match = _dG_[2],
                    modify_input_on_select = match[2],
                    query = match[1],
                    on_select = _dG_[1],
                    inject = _dF_[1],
                    selected_item_attr = _dE_[1],
                    selected_key = _dD_[1],
                    get_items = _dC_[1],
                    item = _dB_[1],
                    key = param[1];
                   a:
                   {
                    if(selected_key){
                     var
                      selected_key$0 = selected_key[1],
                      _dH_ = caml_call2(Key[2][1], key, selected_key$0);
                     if(caml_call2(Core[90], _dH_, 0)){
                      var selected_attr = selected_item_attr;
                      break a;
                     }
                    }
                    var selected_attr = Virtual_dom_Vdom[1][11];
                   }
                   function _dI_(items){
                    function _dT_(offset){
                     var offset$0 = caml_call2(Core_Option[39], offset, 0);
                     return caml_call1(inject, [1, key, offset$0]);
                    }
                    var
                     _dU_ = caml_call1(Core_Map[113], items),
                     _dV_ = caml_call2(Virtual_dom_Effect[15], _dU_, key);
                    return caml_call2(Ui_effect[13][4][2], _dV_, _dT_);
                   }
                   function _dJ_(param){
                    if(! param) return Virtual_dom_Effect[12];
                    var items = param[1];
                    return caml_call1(Virtual_dom_Effect[6], items);
                   }
                   var
                    _dK_ = caml_call2(Ui_effect[13][4][2], get_items, _dJ_),
                    move_to_effect = caml_call2(Ui_effect[13][4][2], _dK_, _dI_),
                    _dL_ = 0;
                   function _dM_(param){
                    var
                     _dQ_ = [0, caml_call1(inject, 4), 0],
                     _dR_ =
                       [0,
                        caml_call1
                         (inject,
                          [0, caml_call2(modify_input_on_select, key, query)]),
                        _dQ_],
                     _dS_ = [0, caml_call1(on_select, key), _dR_];
                    return [0, Virtual_dom_Effect[2], _dS_];
                   }
                   var
                    _dN_ = [0, caml_call1(Virtual_dom_Vdom[1][61], _dM_), _dL_];
                   function _dO_(param){return move_to_effect;}
                   var
                    _dP_ =
                      [0,
                       selected_attr,
                       [0, caml_call1(Virtual_dom_Vdom[1][75], _dO_), _dN_]],
                    attr = caml_call1(Virtual_dom_Vdom[1][9], _dP_);
                   return caml_call3
                           (Virtual_dom_Node[17], 0, [0, [0, attr, 0]], [0, item, 0]);
                  }
                  var
                   _dt_ =
                     caml_call2(Bonsai[49][5][7], query, modify_input_on_select),
                   _du_ = caml_call2(Bonsai[49][5][7], on_select, _dt_),
                   _dv_ = caml_call2(Bonsai[49][5][7], inject, _du_),
                   _dw_ =
                     caml_call2(Bonsai[49][5][7], selected_item_attr, _dv_),
                   _dx_ = caml_call2(Bonsai[49][5][7], selected_key, _dw_),
                   _dy_ = caml_call2(Bonsai[49][5][7], get_items, _dx_),
                   _dz_ = caml_call2(Bonsai[49][5][7], item, _dy_),
                   _dA_ = caml_call2(Bonsai[49][5][7], key, _dz_);
                  return caml_call3(Bonsai[49][5][8], _y_, _dA_, _ds_);
                 }
                 var _dr_ = caml_call3(Bonsai[34], Key, items, _dq_);
                 return caml_call3(Bonsai[49][5][1], _z_, _dr_, _dp_);
                }
                var _do_ = caml_call1(Bonsai[41], items);
                return caml_call3(Bonsai[49][5][1], _A_, _do_, _dn_);
               }
               function _df_(param){
                var
                 _dk_ = param[2],
                 match = _dk_[2],
                 offset = match[2],
                 selected_key = match[1],
                 max_visible_items = _dk_[1],
                 items = param[1];
                if(! selected_key){
                 var
                  match$0 =
                    caml_call2(Core_Map[111], items, max_visible_items);
                 if(match$0)
                  var k = match$0[1][1], _dm_ = [1, k];
                 else
                  var _dm_ = 0;
                 return caml_call3(Core_Map[107], items, 0, _dm_);
                }
                var
                 selected_key$0 = selected_key[1],
                 length = [0, 0],
                 items$0 = [0, items],
                 result = [0, caml_call1(Core_Map[4], [0, Key[2]])],
                 _dl_ = caml_call1(Core_Map[35], items$0[1]),
                 visible_items = caml_call2(Core[96], max_visible_items, _dl_),
                 offset$0 = caml_call2(Core[96], offset, visible_items);
                function add_element_from_side(side){
                 var
                  match =
                    caml_call3(Core_Map[110], items$0[1], side, selected_key$0);
                 if(! match) return 0;
                 var match$0 = match[1], data = match$0[2], key = match$0[1];
                 result[1] = caml_call3(Core_Map[38], result[1], key, data);
                 items$0[1] = caml_call2(Core_Map[47], items$0[1], key);
                 length[1]++;
                 return 1;
                }
                for(;;){
                 if(! caml_call2(Core[92], length[1], visible_items))
                  return result[1];
                 if(caml_call2(Core[89], length[1], offset$0)){
                  if(1 - add_element_from_side(927731004))
                   add_element_from_side(521507869);
                 }
                 else if(1 - add_element_from_side(521507869))
                  add_element_from_side(927731004);
                }
               }
               var
                _dg_ = caml_call2(Bonsai[49][5][7], selected_key, offset),
                _dh_ = caml_call2(Bonsai[49][5][7], max_visible_items, _dg_),
                _di_ = caml_call2(Bonsai[49][5][7], items, _dh_),
                _dj_ = caml_call3(Bonsai[49][5][8], _B_, _di_, _df_);
               return caml_call3(Bonsai[49][5][1], _C_, _dj_, _de_);
              }
              function _c2_(pattern_syntax_102){
               function _c5_(param){
                if(2 < param >>> 0)
                 throw caml_maybe_attach_backtrace
                        ([0, Assert_failure, _D_], 1);
                switch(param){
                  case 0:
                   var
                    _c9_ =
                      function(key){
                       function _dc_(param){
                        var
                         items = param[2],
                         key = param[1],
                         match = caml_call3(Core_Map[110], items, 927731004, key);
                        if(match){var key$0 = match[1][1]; return [0, key$0];}
                        var
                         match$0 = caml_call3(Core_Map[110], items, 521507869, key);
                        if(! match$0) return 0;
                        var key$1 = match$0[1][1];
                        return [0, key$1];
                       }
                       var _dd_ = caml_call2(Bonsai[49][5][7], key, items);
                       return caml_call3(Bonsai[49][5][8], _E_, _dd_, _dc_);
                      },
                    _c__ =
                      function(param){
                       if(typeof param === "number")
                        throw caml_maybe_attach_backtrace
                               ([0, Assert_failure, _F_], 1);
                       var pattern_syntax_103 = param[1];
                       return pattern_syntax_103;
                      },
                    _c$_ =
                      caml_call3(Bonsai[49][5][4], _G_, pattern_syntax_102, _c__),
                    _da_ = caml_call1(Bonsai[49][5][6], _c$_);
                   return caml_call3(Bonsai[49][5][1], _H_, _da_, _c9_);
                  case 1:
                   var
                    _db_ =
                      function(items){
                       var match = caml_call1(Core_Map[90], items);
                       if(! match) return 0;
                       var key = match[1][1];
                       return [0, key];
                      };
                   return caml_call3(Bonsai[49][5][8], _I_, items, _db_);
                  default: return caml_call1(Bonsai[7], 0);
                }
               }
               var _c6_ = 3;
               function _c7_(param){
                return typeof param === "number" ? param ? 1 : 2 : 0;
               }
               var
                _c8_ =
                  caml_call3(Bonsai[49][5][4], 0, pattern_syntax_102, _c7_);
               return caml_call4(Bonsai[49][5][3], _J_, _c8_, _c6_, _c5_);
              }
              var
               _c3_ = caml_call1(Bonsai[49][5][6], suggestion_list_state),
               _c4_ = caml_call3(Bonsai[49][5][1], _K_, _c3_, _c2_);
              return caml_call3(Bonsai[49][5][1], _L_, _c4_, _c1_);
             }
             function _cY_(param){
              var pattern_syntax_084 = param[2];
              return pattern_syntax_084;
             }
             var
              _cZ_ =
                caml_call3(Bonsai[49][5][4], _M_, pattern_syntax_083, _cY_),
              _c0_ = caml_call1(Bonsai[49][5][6], _cZ_);
             return caml_call3(Bonsai[49][5][1], _N_, _c0_, _cX_);
            }
            function _cU_(param){
             var pattern_syntax_085 = param[3];
             return pattern_syntax_085;
            }
            var
             _cV_ =
               caml_call3(Bonsai[49][5][4], _O_, pattern_syntax_083, _cU_),
             _cW_ = caml_call1(Bonsai[49][5][6], _cV_);
            return caml_call3(Bonsai[49][5][1], _P_, _cW_, _cT_);
           }
           function _cQ_(param){
            var pattern_syntax_086 = param[1][3];
            return pattern_syntax_086;
           }
           var
            _cR_ = caml_call3(Bonsai[49][5][4], _Q_, pattern_syntax_083, _cQ_),
            _cS_ = caml_call1(Bonsai[49][5][6], _cR_);
           return caml_call3(Bonsai[49][5][1], _R_, _cS_, _cP_);
          }
          function _cM_(param){
           var pattern_syntax_087 = param[1][1];
           return pattern_syntax_087;
          }
          var
           _cN_ = caml_call3(Bonsai[49][5][4], _S_, pattern_syntax_083, _cM_),
           _cO_ = caml_call1(Bonsai[49][5][6], _cN_);
          return caml_call3(Bonsai[49][5][1], _T_, _cO_, _cL_);
         }
         function _cI_(param){
          var pattern_syntax_088 = param[1][2];
          return pattern_syntax_088;
         }
         var
          _cJ_ = caml_call3(Bonsai[49][5][4], _U_, pattern_syntax_083, _cI_),
          _cK_ = caml_call1(Bonsai[49][5][6], _cJ_);
         return caml_call3(Bonsai[49][5][1], _V_, _cK_, _cH_);
        }
        function sexp_of_t(x_089){
         var
          of_k_016 = Key[1],
          offset_038 = x_089[3],
          suggestion_list_state_036 = x_089[2],
          query_034 = x_089[1],
          arg_039 = caml_call1(Core[389], offset_038),
          bnds_033 = [0, [1, [0, _d_, [0, arg_039, 0]]], 0];
         if(typeof suggestion_list_state_036 === "number")
          var arg_037 = suggestion_list_state_036 ? _a_ : _b_;
         else
          var
           arg0_017 = suggestion_list_state_036[1],
           res0_018 = caml_call1(of_k_016, arg0_017),
           arg_037 = [1, [0, _c_, [0, res0_018, 0]]];
         var
          bnds_033$0 = [0, [1, [0, _e_, [0, arg_037, 0]]], bnds_033],
          arg_035 = caml_call1(Core[558], query_034),
          bnds_033$1 = [0, [1, [0, _f_, [0, arg_035, 0]]], bnds_033$0];
         return [1, bnds_033$1];
        }
        var _bZ_ = 0;
        function _b0_(model, inject){
         function _cn_(pattern_syntax_092){
          function _cp_(query){
           function _ct_(items){
            function _cC_(param){
             var
              _cG_ = param[2],
              match = _cG_[2],
              max_visible_items = match[2],
              items = match[1],
              inject = _cG_[1],
              model = param[1];
             return [0, model, inject, items, max_visible_items];
            }
            var
             _cD_ = caml_call2(Bonsai[49][5][7], items, max_visible_items),
             _cE_ = caml_call2(Bonsai[49][5][7], inject, _cD_),
             _cF_ = caml_call2(Bonsai[49][5][7], model, _cE_);
            return caml_call3(Bonsai[49][5][8], _W_, _cF_, _cC_);
           }
           function _cu_(pattern_syntax_095){
            function _cx_(param){
             if(0 === param) return caml_call1(f, query);
             if(1 !== param)
              throw caml_maybe_attach_backtrace([0, Assert_failure, _X_], 1);
             var _cB_ = caml_call1(Core_Map[4], [0, Key[2]]);
             return caml_call1(Bonsai[7], _cB_);
            }
            var _cy_ = 2;
            function _cz_(param){return param ? 0 : 1;}
            var
             _cA_ = caml_call3(Bonsai[49][5][4], 0, pattern_syntax_095, _cz_);
            return caml_call4(Bonsai[49][5][3], _Y_, _cA_, _cy_, _cx_);
           }
           var
            _cv_ =
              caml_call1(Bonsai[49][5][6], suggestion_list_is_initialized),
            _cw_ = caml_call3(Bonsai[49][5][1], _Z_, _cv_, _cu_);
           return caml_call3(Bonsai[49][5][1], ___, _cw_, _ct_);
          }
          function _cq_(param){
           var pattern_syntax_093 = param[1];
           return pattern_syntax_093;
          }
          var
           _cr_ = caml_call3(Bonsai[49][5][4], _$_, pattern_syntax_092, _cq_),
           _cs_ = caml_call1(Bonsai[49][5][6], _cr_);
          return caml_call3(Bonsai[49][5][1], _aa_, _cs_, _cp_);
         }
         var _co_ = caml_call1(Bonsai[49][1], model);
         return caml_call3(Bonsai[49][5][1], _ab_, _co_, _cn_);
        }
        function _b1_(param, _b9_, model, action){
         var max_visible_items = _b9_[4], items = _b9_[3], match = model[2];
         if(typeof match === "number")
          var suggestion_list_state = match ? 1 : 0;
         else
          var
           key$1 = match[1],
           _ce_ = 1,
           _cf_ =
             [246,
              function(_cm_){
               return caml_call3(Core_Map[110], items, 521507869, key$1);
              }],
           suggestion_list_state =
             select_key
              (caml_call3(Core_Map[110], items, 927731004, key$1), _cf_, _ce_);
         function next_suggestion_list_state(param){
          if(typeof suggestion_list_state !== "number"){
           var
            key = suggestion_list_state[1],
            _cj_ = [0, key],
            _ck_ =
              [246, function(_cl_){return caml_call1(Core_Map[90], items);}];
           return select_key
                   (caml_call3(Core_Map[110], items, -779285466, key),
                    _ck_,
                    _cj_);
          }
          if(! suggestion_list_state) return 1;
          var match = caml_call1(Core_Map[90], items);
          if(! match) return 1;
          var
           first_key = match[1][1],
           match$0 = caml_call3(Core_Map[110], items, -779285466, first_key);
          if(! match$0) return [0, first_key];
          var second_key = match$0[1][1];
          return [0, second_key];
         }
         function prev_suggestion_list_state(param){
          var match = model[2];
          if(typeof match !== "number"){
           var
            key = match[1],
            _cg_ = [0, key],
            _ch_ =
              [246, function(_ci_){return caml_call1(Core_Map[92], items);}];
           return select_key
                   (caml_call3(Core_Map[110], items, -640801497, key),
                    _ch_,
                    _cg_);
          }
          var match$0 = caml_call1(Core_Map[92], items);
          if(! match$0) return 1;
          var last_key = match$0[1][1];
          return [0, last_key];
         }
         if(typeof action === "number")
          switch(action){
            case 0:
             var
              suggestion_list_state$0 = next_suggestion_list_state(0),
              _b__ = model[2],
              comparison =
                compare_suggestion_list_state
                 (caml_call1(Core_Map[2], items)[1],
                  _b__,
                  suggestion_list_state$0),
              offset =
                caml_call2(Core[90], comparison, 0)
                 ? model[3]
                 : caml_call2
                    (Core[92], comparison, 0)
                   ? caml_call2
                     (Core[96], max_visible_items - 1 | 0, model[3] + 1 | 0)
                   : 0;
             return [0, model[1], suggestion_list_state$0, offset];
            case 1:
             var
              suggestion_list_state$1 = prev_suggestion_list_state(0),
              _b$_ = model[2],
              comparison$0 =
                compare_suggestion_list_state
                 (caml_call1(Core_Map[2], items)[1],
                  _b$_,
                  suggestion_list_state$1),
              offset$0 =
                caml_call2(Core[90], comparison$0, 0)
                 ? model[3]
                 : caml_call2
                    (Core[92], comparison$0, 0)
                   ? max_visible_items - 1 | 0
                   : caml_call2(Core[97], 0, model[3] - 1 | 0);
             return [0, model[1], suggestion_list_state$1, offset$0];
            case 2:
             var _ca_ = model[3], _cb_ = next_suggestion_list_state(0);
             return [0, model[1], _cb_, _ca_];
            case 3:
             var _cc_ = model[3], _cd_ = prev_suggestion_list_state(0);
             return [0, model[1], _cd_, _cc_];
            case 4:
             return [0, model[1], 0, model[3]];
            default: return [0, model[1], 1, model[3]];
          }
         if(0 !== action[0]){
          var offset$2 = action[2], key$0 = action[1];
          return caml_call2(Core_Map[48], items, key$0)
                  ? [0, model[1], [0, key$0], offset$2]
                  : model;
         }
         var query = action[1];
         if(typeof suggestion_list_state === "number")
          var suggestion_list_state$2 = 1;
         else
          var
           key = suggestion_list_state[1],
           suggestion_list_state$2 = [0, key];
         var offset$1 = model[3];
         return [0, query, suggestion_list_state$2, offset$1];
        }
        var
         _b2_ = [0, initial_query, 0, 0],
         _b3_ =
           [0,
            function(a_090, b_091){
             if(a_090 === b_091) return 1;
             var _b5_ = caml_call2(Core[553], a_090[1], b_091[1]);
             if(_b5_){
              var b_002 = b_091[2], a_001 = a_090[2];
              a:
              if(a_001 === b_002)
               var _b6_ = 1;
              else{
               if(typeof a_001 === "number"){
                if(! a_001){
                 if(typeof b_002 === "number" && ! b_002){var _b6_ = 1; break a;}
                 var _b6_ = 0;
                 break a;
                }
                if(typeof b_002 !== "number"){var _b6_ = 0; break a;}
                if(b_002){var _b6_ = 1; break a;}
               }
               else{
                var a_003 = a_001[1];
                if(typeof b_002 !== "number"){
                 var
                  b_004 = b_002[1],
                  _b8_ = caml_call2(Key[2][1], a_003, b_004),
                  _b6_ = caml_call2(Core[90], _b8_, 0);
                 break a;
                }
                if(b_002){var _b6_ = 0; break a;}
               }
               var _b6_ = 0;
              }
              if(_b6_) return caml_call2(Core[384], a_090[3], b_091[3]);
              var _b7_ = _b6_;
             }
             else
              var _b7_ = _b5_;
             return _b7_;
            }],
         _b4_ =
           caml_call7
            (Bonsai[38], 0, [0, sexp_of_t], _b3_, _b2_, _b1_, _b0_, _bZ_);
        return caml_call3(Bonsai[49][5][1], _ac_, _b4_, _bY_);
       }
       function _bW_(initialize_suggestion_list){
        return caml_call1(initialize_suggestion_list, 1);
       }
       var
        _bX_ =
          caml_call3(Bonsai[49][5][8], _ad_, initialize_suggestion_list, _bW_);
       return caml_call3(Bonsai[49][5][1], _ae_, _bX_, _bV_);
      }
      function _bS_(param){
       var pattern_syntax_079 = param[2];
       return pattern_syntax_079;
      }
      var
       _bT_ = caml_call3(Bonsai[49][5][4], _af_, pattern_syntax_078, _bS_),
       _bU_ = caml_call1(Bonsai[49][5][6], _bT_);
      return caml_call3(Bonsai[49][5][1], _ag_, _bU_, _bR_);
     }
     function _bO_(param){
      var pattern_syntax_080 = param[1];
      return pattern_syntax_080;
     }
     var
      _bP_ = caml_call3(Bonsai[49][5][4], _ah_, pattern_syntax_078, _bO_),
      _bQ_ = caml_call1(Bonsai[49][5][6], _bP_);
     return caml_call3(Bonsai[49][5][1], _ai_, _bQ_, _bN_);
    }
    var _bK_ = caml_call4(Bonsai[11], 0, 0, 0, 0);
    return caml_call3(Bonsai[49][5][1], _aj_, _bK_, _bJ_);
   }
   function sexp_of_t$1(sexp_of_k, param){
    var
     arg1_162 = param[2],
     arg0_161 = param[1],
     res0_163 = caml_call1(Core[389], arg0_161),
     res1_164 = caml_call1(sexp_of_k, arg1_162);
    return [1, [0, res0_163, [0, res1_164, 0]]];
   }
   function compare$1(compare_k){
    var _bs_ = 0;
    function _bt_(_bz_){return _bz_[2];}
    var _bu_ = [0, caml_call2(Core_Comparable[2], compare_k, _bt_), _bs_];
    function _bv_(_by_){return _by_[1];}
    function _bw_(a_165, b_166){return caml_call2(Core[382], a_165, b_166);}
    var _bx_ = [0, caml_call2(Core_Comparable[2], _bw_, _bv_), _bu_];
    return caml_call1(Core_Comparable[1], _bx_);
   }
   var
    include = caml_call1(Core_Comparator[9], [0, compare$1, sexp_of_t$1]),
    comparator = include[1];
   function M(T){
    var _bq_ = T[1][2];
    function sexp_of_t(_br_){return sexp_of_t$1(_bq_, _br_);}
    var comparator$0 = caml_call1(comparator, T[1]);
    return [0, sexp_of_t, comparator$0];
   }
   var Map = [0];
   function collate
   (Cmp, preprocess, score, query_is_as_strict, to_result, input, query){
    var _bd_ = [0, M(Cmp)[2]], empty_result = caml_call1(Core_Map[4], _bd_);
    function _be_(input_and_query){
     function _bg_(param){
      var pattern_syntax_167 = param[1];
      return pattern_syntax_167;
     }
     var input = caml_call2(Ui_incr[78][4][6], input_and_query, _bg_);
     function _bh_(param){
      var pattern_syntax_168 = param[2];
      return pattern_syntax_168;
     }
     var query = caml_call2(Ui_incr[78][4][6], input_and_query, _bh_);
     function _bi_(input){
      var
       len = caml_call1(Core_Map[35], input),
       array = caml_call1(Core_Uniform_array[70], len),
       index = [0, 0];
      function _bj_(key, data){
       var _bp_ = [0, key, data, caml_call2(preprocess, key, data)];
       caml_call3(Core_Uniform_array[23], array, index[1], _bp_);
       index[1]++;
       return 0;
      }
      caml_call2(Core_Map[51], input, _bj_);
      var
       previous_queries = [0, 0],
       filtered_out_at_index = caml_call2(Core_Array[63], len, Core_Int[45]);
      function _bk_(query){
       var qs$1 = previous_queries[1], qs = qs$1;
       for(;;){
        if(qs){
         var qs$0 = qs[2], q = qs[1];
         if(! caml_call2(query_is_as_strict, query, q)){var qs = qs$0; continue;}
         var _bl_ = [0, q, qs$0];
        }
        else
         var _bl_ = 0;
        previous_queries[1] = [0, query, _bl_];
        var
         num_queries = caml_call1(Core_List[45], previous_queries[1]),
         _bm_ =
           function(index, acc, param){
            var
             preprocessed = param[3],
             data = param[2],
             key = param[1],
             _bn_ = caml_check_bound(filtered_out_at_index, index)[1 + index];
            if(caml_call2(Core[92], _bn_, num_queries))
             var score$0 = 0;
            else{
             var
              score$1 = caml_call2(score, query, preprocessed),
              num_queries$0 =
                caml_call2(Core[90], score$1, 0) ? num_queries : Core_Int[45];
             caml_check_bound(filtered_out_at_index, index)[1 + index] = num_queries$0;
             var score$0 = score$1;
            }
            if(caml_call2(Core[90], score$0, 0)) return acc;
            var
             new_key = [0, score$0, key],
             _bo_ = caml_call3(to_result, preprocessed, key, data);
            return caml_call3(Core_Map[37], acc, new_key, _bo_);
           };
        return caml_call3(Core_Uniform_array[34], array, empty_result, _bm_);
       }
      }
      return caml_call2(Ui_incr[78][4][6], query, _bk_);
     }
     return caml_call2(Ui_incr[78][4][1], input, _bi_);
    }
    var _bf_ = caml_call2(Bonsai[2][3], input, query);
    return caml_call2(Bonsai[48][2], _bf_, _be_);
   }
   var compare$2 = caml_int_compare;
   function equal$1(_bc_, _bb_){return _bc_ === _bb_ ? 1 : 0;}
   function sexp_of_t$2(param){return param ? _ak_ : _al_;}
   var Filter_strategy = [0, compare$2, all$1, equal$1, sexp_of_t$2];
   function stringable
   (Key,
    initial_query,
    max_visible_items,
    suggestion_list_kind,
    expand_direction,
    selected_item_attr,
    extra_list_container_attr,
    extra_input_attr,
    extra_attr,
    opt,
    _av_,
    filter_strategy,
    on_select,
    input){
    if(opt)
     var sth = opt[1], to_view = sth;
    else
     var
      to_view =
        function(param, string){
         return caml_call1(Virtual_dom_Node[6], string);
        };
    if(_av_)
     var sth$0 = _av_[1], let_syntax_175 = sth$0;
    else
     var let_syntax_175 = caml_call1(Bonsai[2][1], -101336657);
    function modify_input_on_select(get_key){
     function _a8_(param){
      var input = param[2], modify_input_on_select = param[1];
      return 718633343 === modify_input_on_select
              ? function(param, query){return query;}
              : 796177224
                <= modify_input_on_select
                ? function
                 (key, query){
                  var
                   _a__ = caml_call1(get_key, key),
                   _a$_ = caml_call2(Core_Map[44], input, _a__);
                  return caml_call2(Core_Option[39], _a$_, query);
                 }
                : function(param, _ba_){return cst$1;};
     }
     var _a9_ = caml_call2(Bonsai[49][5][7], let_syntax_175, input);
     return caml_call3(Bonsai[49][5][8], _am_, _a9_, _a8_);
    }
    if(filter_strategy){
     var
      _aw_ =
        function(on_select){
         function _aK_(result){
          function _a1_(result){
           var
            _a2_ = result[5],
            _a3_ = result[4],
            _a4_ = result[3],
            _a5_ = result[2];
           function _a6_(_a7_){return _a7_[2];}
           return [0,
                   caml_call2(Core_Option[34], result[1], _a6_),
                   _a5_,
                   _a4_,
                   _a3_,
                   _a2_];
          }
          return caml_call3(Bonsai[49][5][8], _an_, result, _a1_);
         }
         function _aL_(modify_input_on_select){
          var _aP_ = 0;
          function _aQ_(query){
           function _aR_(query){
            function _aU_(item, param, _aZ_){
             var _a0_ = [0, caml_call1(Virtual_dom_Node[6], item), 0];
             return caml_call3(Virtual_dom_Node[17], 0, 0, _a0_);
            }
            function _aV_(param, _aY_){
             var as = _aY_[1], q = param[1];
             return caml_call2(Core_String[68], q, as);
            }
            function _aW_(param, item){
             var query = param[2];
             return caml_call2(Fuzzy_search[2], query, item);
            }
            function _aX_(param, data){return data;}
            return collate([0, Key[2]], _aX_, _aW_, _aV_, _aU_, input, query);
           }
           function _aS_(query){
            return [0, query, caml_call1(Fuzzy_search[1][1], query)];
           }
           var _aT_ = caml_call3(Bonsai[49][5][8], _ao_, query, _aS_);
           return caml_call3(Bonsai[49][5][1], _ap_, _aT_, _aR_);
          }
          return create
                  (M([0, Key[2]]),
                   initial_query,
                   max_visible_items,
                   suggestion_list_kind,
                   expand_direction,
                   selected_item_attr,
                   extra_list_container_attr,
                   extra_input_attr,
                   extra_attr,
                   0,
                   [0, modify_input_on_select],
                   _aQ_,
                   on_select,
                   _aP_);
         }
         var
          _aM_ = modify_input_on_select(function(_aO_){return _aO_[2];}),
          _aN_ = caml_call3(Bonsai[49][5][1], _aq_, _aM_, _aL_);
         return caml_call3(Bonsai[49][5][1], _ar_, _aN_, _aK_);
        },
      _ax_ =
        function(on_select, param){
         var key = param[2];
         return caml_call1(on_select, key);
        },
      _ay_ = caml_call3(Bonsai[49][5][8], _as_, on_select, _ax_);
     return caml_call3(Bonsai[49][5][1], _at_, _ay_, _aw_);
    }
    function _az_(modify_input_on_select){
     var _aC_ = 0;
     return create
             (Key,
              initial_query,
              max_visible_items,
              suggestion_list_kind,
              expand_direction,
              selected_item_attr,
              extra_list_container_attr,
              extra_input_attr,
              extra_attr,
              0,
              [0, modify_input_on_select],
              function(query){
               function _aD_(incr){
                function _aF_(param){
                 var pattern_syntax_179 = param[2];
                 return pattern_syntax_179;
                }
                var input = caml_call2(Ui_incr[78][4][6], incr, _aF_);
                function _aG_(param){
                 var pattern_syntax_180 = param[1];
                 return pattern_syntax_180;
                }
                var
                 let_syntax_182 = caml_call2(Ui_incr[78][4][6], incr, _aG_);
                function _aH_(key, string){
                 function _aI_(param){
                  var query = param[2], string = param[1];
                  return caml_call3
                           (Fuzzy_match[1], Core_Char[34][19], query, string)
                          ? [0, caml_call2(to_view, key, string)]
                          : 0;
                 }
                 var
                  _aJ_ =
                    caml_call2(Ui_incr[78][4][21], string, let_syntax_182);
                 return caml_call2(Ui_incr[78][4][6], _aJ_, _aI_);
                }
                return caml_call5(Incr_map[6], 0, 0, 0, input, _aH_);
               }
               var _aE_ = caml_call2(Bonsai[2][3], query, input);
               return caml_call2(Bonsai[48][2], _aE_, _aD_);
              },
              on_select,
              _aC_);
    }
    var _aA_ = modify_input_on_select(function(_aB_){return _aB_;});
    return caml_call3(Bonsai[49][5][1], _au_, _aA_, _az_);
   }
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_query_box);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_query_box);
   var
    Bonsai_web_ui_query_box =
      [0,
       Suggestion_list_kind,
       Expand_direction,
       focus_input,
       set_query,
       query,
       view,
       selected_item,
       create,
       Filter_strategy,
       stringable,
       [0, [0, comparator, M, Map], collate]];
   runtime.caml_register_global
    (217, Bonsai_web_ui_query_box, cst_Bonsai_web_ui_query_box$0);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
