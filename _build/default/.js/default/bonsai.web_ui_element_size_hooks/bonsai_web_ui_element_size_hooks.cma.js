// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Bonsai_web_ui_element_size_hooks__
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    Bonsai_web_ui_element_size_hoo = [0],
    Bonsai_web_ui_element_size_hoo$0 = [0, Bonsai_web_ui_element_size_hoo];
   runtime.caml_register_global
    (0,
     Bonsai_web_ui_element_size_hoo$0,
     "Bonsai_web_ui_element_size_hooks__");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_element_size_hooks__Import
//# unitInfo: Requires: Core, Js_of_ocaml__Dom, Js_of_ocaml__Dom_html, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst = "",
    cst_fpx = "%fpx",
    cst_Bonsai_web_ui_element_size$0 =
      "Bonsai_web_ui_element_size_hooks__Import",
    cst_bonsai_web_ui_element_size$0 = "bonsai_web_ui_element_size_hooks",
    cst_px = "px",
    caml_jsstring_of_string = runtime.caml_jsstring_of_string;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Core = global_data.Core,
    Js_of_ocaml_Dom = global_data.Js_of_ocaml__Dom,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_expect_runtime[1][1], "web_ui/element_size_hooks/src/import.ml");
   caml_call2
    (Ppx_inline_test_lib[6], cst_bonsai_web_ui_element_size$0, "import.ml");
   var
    _b_ = [0, [8, [0, 0, 0], 0, 0, [11, cst_px, 0]], cst_fpx],
    _a_ = [0, [8, [0, 0, 0], 0, 0, [11, cst_px, 0]], cst_fpx],
    cst_bonsai_web_ui_element_size = cst_bonsai_web_ui_element_size$0,
    cst_Bonsai_web_ui_element_size = cst_Bonsai_web_ui_element_size$0;
   function cancel_animation_frame(id){
    return Js_of_ocaml_Dom_html[8].cancelAnimationFrame(id);
   }
   function request_animation_frame(f){
    return Js_of_ocaml_Dom_html[8].requestAnimationFrame
            (runtime.caml_js_wrap_callback(f));
   }
   function add_event_listener(opt, _c_, element, event, f){
    if(opt) var sth = opt[1], use_capture = sth; else var use_capture = 0;
    if(_c_)
     var sth$0 = _c_[1], prevent_default = sth$0;
    else
     var prevent_default = 0;
    var _d_ = ! ! use_capture;
    function _e_(element, event){
     caml_call2(f, element, event);
     return ! ! prevent_default;
    }
    var _f_ = caml_call1(Js_of_ocaml_Dom[11], _e_);
    return caml_call4(Js_of_ocaml_Dom_html[17], element, event, _f_, _d_);
   }
   function set_width(element, x){
    var
     t5 = caml_jsstring_of_string(caml_call2(Core[265], _a_, x)),
     t6 = element.style;
    return t6.width = t5;
   }
   function set_height(element, x){
    var
     t8 = caml_jsstring_of_string(caml_call2(Core[265], _b_, x)),
     t9 = element.style;
    return t9.height = t8;
   }
   function reset_width(element){
    var t12 = element.style;
    return t12.width = cst;
   }
   function reset_height(element){
    var t15 = element.style;
    return t15.height = cst;
   }
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_element_size);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_element_size);
   var
    Bonsai_web_ui_element_size_hoo =
      [0,
       cancel_animation_frame,
       request_animation_frame,
       add_event_listener,
       set_width,
       set_height,
       reset_width,
       reset_height];
   runtime.caml_register_global
    (28, Bonsai_web_ui_element_size_hoo, cst_Bonsai_web_ui_element_size$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_element_size_hooks__Visibility_tracker
//# unitInfo: Requires: Bonsai_web, CamlinternalLazy, Core, Js_of_ocaml__IntersectionObserver, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Sexplib0__Sexp_conv, Sexplib0__Sexp_conv_record, Virtual_dom__Effect, Virtual_dom__Hooks, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_element_size$0 =
      "Bonsai_web_ui_element_size_hooks__Visibility_tracker",
    cst_bonsai_web_ui_element_size$0 = "bonsai_web_ui_element_size_hooks",
    cst_max_x$0 = "max_x",
    cst_max_y$0 = "max_y",
    cst_min_x$0 = "min_x",
    cst_min_y$0 = "min_y",
    caml_obj_tag = runtime.caml_obj_tag,
    caml_string_notequal = runtime.caml_string_notequal,
    caml_update_dummy = runtime.caml_update_dummy;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call6(f, a0, a1, a2, a3, a4, a5){
    return (f.l >= 0 ? f.l : f.l = f.length) == 6
            ? f(a0, a1, a2, a3, a4, a5)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    error_source_002 =
      "web_ui/element_size_hooks/src/visibility_tracker.ml.Bbox.t",
    Bonsai_web = global_data.Bonsai_web,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Core = global_data.Core,
    CamlinternalLazy = global_data.CamlinternalLazy,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Js_of_ocaml_IntersectionObserv =
      global_data.Js_of_ocaml__IntersectionObserver;
   global_data.Sexplib0__Sexp_conv;
   var
    Sexplib0_Sexp_conv_record = global_data.Sexplib0__Sexp_conv_record,
    Virtual_dom_Effect = global_data.Virtual_dom__Effect,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Virtual_dom_Hooks = global_data.Virtual_dom__Hooks;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_expect_runtime[1][1],
     "web_ui/element_size_hooks/src/visibility_tracker.ml");
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_element_size$0,
     "visibility_tracker.ml");
   var
    cst_bounds_change = "bounds-change",
    _e_ = [254, 0., 0., 0., 0.],
    _a_ = [0, cst_max_y$0],
    _b_ = [0, cst_min_y$0],
    _c_ = [0, cst_max_x$0],
    _d_ = [0, cst_min_x$0],
    cst_max_y = cst_max_y$0,
    cst_min_y = cst_min_y$0,
    cst_max_x = cst_max_x$0,
    cst_min_x = cst_min_x$0,
    cst_bonsai_web_ui_element_size = cst_bonsai_web_ui_element_size$0,
    cst_Bonsai_web_ui_element_size = cst_Bonsai_web_ui_element_size$0;
   function t_of_sexp(x_003){
    function _J_(param){
     var
      _M_ = param[2],
      _N_ = _M_[2],
      max_y = _N_[2][1],
      min_y = _N_[1],
      max_x = _M_[1],
      min_x = param[1];
     return [254, min_x, max_x, min_y, max_y];
    }
    var _K_ = 0;
    function _L_(param){
     return caml_string_notequal(param, cst_max_x$0)
             ? caml_string_notequal
                (param, cst_max_y$0)
               ? caml_string_notequal
                  (param, cst_min_x$0)
                 ? caml_string_notequal(param, cst_min_y$0) ? -1 : 2
                 : 0
               : 3
             : 1;
    }
    return caml_call6
            (Sexplib0_Sexp_conv_record[3],
             error_source_002,
             [0,
              cst_min_x,
              1,
              Core[368],
              [0,
               cst_max_x,
               1,
               Core[368],
               [0, cst_min_y, 1, Core[368], [0, cst_max_y, 1, Core[368], 0]]]],
             _L_,
             _K_,
             _J_,
             x_003);
   }
   function sexp_of_t(param){
    var
     max_y_011 = param[4],
     min_y_009 = param[3],
     max_x_007 = param[2],
     min_x_005 = param[1],
     arg_012 = caml_call1(Core[367], max_y_011),
     bnds_004 = [0, [1, [0, _a_, [0, arg_012, 0]]], 0],
     arg_010 = caml_call1(Core[367], min_y_009),
     bnds_004$0 = [0, [1, [0, _b_, [0, arg_010, 0]]], bnds_004],
     arg_008 = caml_call1(Core[367], max_x_007),
     bnds_004$1 = [0, [1, [0, _c_, [0, arg_008, 0]]], bnds_004$0],
     arg_006 = caml_call1(Core[367], min_x_005),
     bnds_004$2 = [0, [1, [0, _d_, [0, arg_006, 0]]], bnds_004$1];
    return [1, bnds_004$2];
   }
   function equal(a_013, b_014){
    if(a_013 === b_014) return 1;
    var _F_ = caml_call2(Core[362], a_013[1], b_014[1]);
    if(_F_){
     var _G_ = caml_call2(Core[362], a_013[2], b_014[2]);
     if(_G_){
      var _H_ = caml_call2(Core[362], a_013[3], b_014[3]);
      if(_H_) return caml_call2(Core[362], a_013[4], b_014[4]);
      var _I_ = _H_;
     }
     else
      var _I_ = _G_;
    }
    else
     var _I_ = _F_;
    return _I_;
   }
   function of_client_rect(box){
    return [254, box.left, box.right, box.top, box.bottom];
   }
   function width(t){return t[2] - t[1];}
   function height(t){return t[4] - t[3];}
   var sexp_of_t$0 = Core[149];
   function combine(param, _A_){
    var
     visible_rect_changed_right = _A_[2],
     client_rect_changed_right = _A_[1],
     visible_rect_changed_left = param[2],
     client_rect_changed_left = param[1];
    function client_rect_changed(bbox){
     function _D_(param){return caml_call1(client_rect_changed_right, bbox);}
     var _E_ = caml_call1(client_rect_changed_left, bbox);
     return caml_call2(Virtual_dom_Effect[21], _E_, _D_);
    }
    function visible_rect_changed(bbox){
     function _B_(param){return caml_call1(visible_rect_changed_right, bbox);}
     var _C_ = caml_call1(visible_rect_changed_left, bbox);
     return caml_call2(Virtual_dom_Effect[21], _C_, _B_);
    }
    return [0, client_rect_changed, visible_rect_changed];
   }
   var include = [0, sexp_of_t$0, combine];
   function init(callback, element){
    var
     state = [],
     observer = [],
     process = function _z_(_y_){return _z_.fun(_y_);};
    caml_update_dummy
     (state,
      [246,
       function(_v_){
        var _w_ = caml_obj_tag(observer);
        a:
        if(250 === _w_)
         var _x_ = observer[1];
        else{
         if(246 !== _w_ && 244 !== _w_){var _x_ = observer; break a;}
         var _x_ = caml_call1(CamlinternalLazy[2], observer);
        }
        return [0, callback, [0, _e_, 0], 1, _x_];
       }]);
    caml_update_dummy
     (observer,
      [246,
       function(param){
        var
         _q_ = caml_call1(Js_of_ocaml_IntersectionObserv[1], 0),
         _r_ =
           runtime.caml_js_wrap_callback
            (function(entries, observer){
              var _t_ = entries.length - 1 | 0, _s_ = 0;
              if(_t_ >= 0){
               var i = _s_;
               for(;;){
                var entry = caml_call2(Js_of_ocaml_Js[20], entries, i);
                caml_call2(Js_of_ocaml_Js[6][6], entry, process);
                var _u_ = i + 1 | 0;
                if(_t_ === i) break;
                var i = _u_;
               }
              }
              observer.unobserve(element);
              return observer.observe(element);
             });
        return new Js_of_ocaml_IntersectionObserv[3](_r_, _q_);
       }]);
    caml_update_dummy
     (process,
      function(entry){
       var client_rect = of_client_rect(entry.boundingClientRect);
       if(entry.isIntersecting | 0)
        var
         bbox = of_client_rect(entry.intersectionRect),
         intersection_rect =
           [0,
            [254,
             bbox[1] - client_rect[1],
             bbox[2] - client_rect[1],
             bbox[3] - client_rect[3],
             bbox[4] - client_rect[3]]];
       else
        var intersection_rect = 0;
       var _i_ = caml_obj_tag(state);
       a:
       if(250 === _i_)
        var state$0 = state[1];
       else{
        if(246 !== _i_ && 244 !== _i_){var state$0 = state; break a;}
        var state$0 = caml_call1(CamlinternalLazy[2], state);
       }
       var _j_ = state$0[3];
       if(_j_)
        var _k_ = _j_;
       else
        var
         b_037 = state$0[2][2],
         _p_ = function(a_038, b_039){return equal(a_038, b_039);},
         _k_ = 1 - caml_call3(Core[511], _p_, intersection_rect, b_037);
       if(_k_){
        var _l_ = caml_call1(state$0[1][2], intersection_rect);
        caml_call1(Bonsai_web[5][23][2], _l_);
        state$0[2][2] = intersection_rect;
       }
       var _m_ = state$0[3];
       if(_m_)
        var _n_ = _m_;
       else
        var b_041 = state$0[2][1], _n_ = 1 - equal(client_rect, b_041);
       if(_n_){
        var _o_ = caml_call1(state$0[1][1], client_rect);
        caml_call1(Bonsai_web[5][23][2], _o_);
        state$0[2][1] = client_rect;
       }
       state$0[3] = 0;
       return 0;
      });
    var _h_ = caml_obj_tag(state);
    a:
    if(250 === _h_)
     var state$0 = state[1];
    else{
     if(246 !== _h_ && 244 !== _h_){var state$0 = state; break a;}
     var state$0 = caml_call1(CamlinternalLazy[2], state);
    }
    state$0[4].observe(element);
    return state$0;
   }
   var on_mount = 327963705;
   function update(param, callback, state, element){state[3] = 1; state[1] = callback; return 0;
   }
   function destroy(input, state, element){return state[4].disconnect();}
   var
    Hook =
      caml_call1
       (Virtual_dom_Hooks[3],
        [0, [0], include, init, on_mount, update, destroy]);
   function detect(opt, _f_, param){
    if(opt)
     var sth = opt[1], client_rect_changed = sth;
    else
     var client_rect_changed = function(param){return Bonsai_web[5][1];};
    if(_f_)
     var sth$0 = _f_[1], visible_rect_changed = sth$0;
    else
     var visible_rect_changed = function(param){return Bonsai_web[5][1];};
    var
     _g_ = caml_call1(Hook[1], [0, client_rect_changed, visible_rect_changed]);
    return caml_call2(Virtual_dom_Vdom[1][7], cst_bounds_change, _g_);
   }
   var type_id = Hook[2][1];
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_element_size);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_element_size);
   var
    Bonsai_web_ui_element_size_hoo =
      [0,
       [0, t_of_sexp, sexp_of_t, equal, width, height],
       detect,
       [0, type_id]];
   runtime.caml_register_global
    (59, Bonsai_web_ui_element_size_hoo, cst_Bonsai_web_ui_element_size$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_element_size_hooks__Size_tracker
//# unitInfo: Requires: Base__Option, Core__Option, Js_of_ocaml__Js, Js_of_ocaml__ResizeObserver, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Sexplib0__Sexp_conv, Virtual_dom__Effect, Virtual_dom__Hooks, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_element_size$0 =
      "Bonsai_web_ui_element_size_hooks__Size_tracker",
    cst_bonsai_web_ui_element_size$0 = "bonsai_web_ui_element_size_hooks";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Core_Option = global_data.Core__Option,
    Virtual_dom_Effect = global_data.Virtual_dom__Effect,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Base_Option = global_data.Base__Option,
    Js_of_ocaml_ResizeObserver = global_data.Js_of_ocaml__ResizeObserver,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Virtual_dom_Hooks = global_data.Virtual_dom__Hooks;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_expect_runtime[1][1],
     "web_ui/element_size_hooks/src/size_tracker.ml");
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_element_size$0,
     "size_tracker.ml");
   var
    Dimensions = [0],
    State = [0],
    cst_size_tracker = "size_tracker",
    cst_bonsai_web_ui_element_size = cst_bonsai_web_ui_element_size$0,
    cst_Bonsai_web_ui_element_size = cst_Bonsai_web_ui_element_size$0;
   function sexp_of_t(param){
    function _u_(_v_){return 0;}
    return caml_call1(Sexplib0_Sexp_conv[24], _u_);
   }
   function combine(left, right, dimensions){
    function _s_(param){return caml_call1(right, dimensions);}
    var _t_ = caml_call1(left, dimensions);
    return caml_call2(Virtual_dom_Effect[21], _t_, _s_);
   }
   var Input = [0, sexp_of_t, combine];
   function wrap_with_handle(width, height, f){
    var _r_ = caml_call1(f, [254, width, height]);
    return caml_call1(Virtual_dom_Effect[23][2], _r_);
   }
   function init(input, param){
    var _m_ = 0., _n_ = 0., _o_ = 0;
    return [0,
            function(_p_){
             return function(_q_){return wrap_with_handle(_p_, _q_, input);};
            },
            _o_,
            _n_,
            _m_];
   }
   var
    on_mount =
      [0,
       -970641302,
       function(param, state, element){
        function on_resize_observed(entries, observer){
         function _f_(first_entry){
          var border_box_arr = first_entry.borderBoxSize;
          function _j_(border_box){
           return [0, border_box.inlineSize, border_box.blockSize];
          }
          var
           _k_ = caml_call2(Js_of_ocaml_Js[20], border_box_arr, 0),
           _l_ = caml_call1(Js_of_ocaml_Js[6][10], _k_);
          return caml_call2(Base_Option[29][4][3], _l_, _j_);
         }
         var
          _g_ = caml_call2(Js_of_ocaml_Js[20], entries, 0),
          _h_ = caml_call1(Js_of_ocaml_Js[6][10], _g_),
          size = caml_call2(Base_Option[29][4][2], _h_, _f_);
         function _i_(param){
          var height = param[2], width = param[1];
          state[3] = width;
          state[4] = height;
          return caml_call2(state[1], width, height);
         }
         return caml_call2(Core_Option[46], size, _i_);
        }
        state[2] =
         [0,
          caml_call4
           (Js_of_ocaml_ResizeObserver[4], element, on_resize_observed, 0, 0)];
        return 0;
       }];
   function update(old_input, new_input, state, param){
    return old_input === new_input
            ? 0
            : (state
               [1]
              =
               function(_d_){
                return function(_e_){
                 return wrap_with_handle(_d_, _e_, new_input);};
               },
              caml_call2(state[1], state[3], state[4]));
   }
   function destroy(param, state, _b_){
    function _c_(observer){return observer.disconnect();}
    return caml_call2(Core_Option[46], state[2], _c_);
   }
   var
    Hook =
      caml_call1
       (Virtual_dom_Hooks[3],
        [0, State, Input, init, on_mount, update, destroy]);
   function on_change(f){
    function f$0(param){
     var height = param[2], width = param[1];
     return caml_call2(f, width, height);
    }
    var _a_ = caml_call1(Hook[1], f$0);
    return caml_call2(Virtual_dom_Vdom[1][7], cst_size_tracker, _a_);
   }
   var include = Hook[2], type_id = include[1];
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_element_size);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_element_size);
   var
    Bonsai_web_ui_element_size_hoo = [0, on_change, [0, Dimensions, type_id]];
   runtime.caml_register_global
    (26, Bonsai_web_ui_element_size_hoo, cst_Bonsai_web_ui_element_size$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_element_size_hooks__Scroll_tracker
//# unitInfo: Requires: Base__Option, Core, Core__Option, Js_of_ocaml__Dom_html, Js_of_ocaml__Js, Js_of_ocaml__ResizeObserver, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Sexplib0__Sexp_conv, Sexplib0__Sexp_conv_error, Virtual_dom__Effect, Virtual_dom__Hooks, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_element_size$0 =
      "Bonsai_web_ui_element_size_hooks__Scroll_tracker",
    cst_Both = "Both",
    cst_Horizontal = "Horizontal",
    cst_Neither = "Neither",
    cst_Vertical = "Vertical",
    cst_bonsai_web_ui_element_size$0 = "bonsai_web_ui_element_size_hooks",
    cst_both = "both",
    cst_horizontal = "horizontal",
    cst_neither = "neither",
    cst_vertical = "vertical",
    caml_string_notequal = runtime.caml_string_notequal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    error_source_003 =
      "web_ui/element_size_hooks/src/scroll_tracker.ml.Scrollable.t",
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Core_Option = global_data.Core__Option,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Base_Option = global_data.Base__Option,
    Virtual_dom_Effect = global_data.Virtual_dom__Effect,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Core = global_data.Core,
    Js_of_ocaml_ResizeObserver = global_data.Js_of_ocaml__ResizeObserver,
    Sexplib0_Sexp_conv_error = global_data.Sexplib0__Sexp_conv_error,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Virtual_dom_Hooks = global_data.Virtual_dom__Hooks;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_expect_runtime[1][1],
     "web_ui/element_size_hooks/src/scroll_tracker.ml");
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_element_size$0,
     "scroll_tracker.ml");
   var
    cst_scroll_tracker = "scroll_tracker",
    _a_ = [0, cst_Neither],
    _b_ = [0, cst_Vertical],
    _c_ = [0, cst_Horizontal],
    _d_ = [0, cst_Both],
    cst_bonsai_web_ui_element_size = cst_bonsai_web_ui_element_size$0,
    cst_Bonsai_web_ui_element_size = cst_Bonsai_web_ui_element_size$0;
   function t_of_sexp(sexp_004){
    a:
    {
     if(0 === sexp_004[0]){
      var _y_ = sexp_004[1];
      b:
      if(caml_string_notequal(_y_, cst_Both)){
       c:
       if(caml_string_notequal(_y_, cst_Horizontal)){
        d:
        if(caml_string_notequal(_y_, cst_Neither)){
         if(caml_string_notequal(_y_, cst_Vertical)){
          if(! caml_string_notequal(_y_, cst_both)) break b;
          if(! caml_string_notequal(_y_, cst_horizontal)) break c;
          if(! caml_string_notequal(_y_, cst_neither)) break d;
          if(caml_string_notequal(_y_, cst_vertical)) break a;
         }
         return 1;
        }
        return 0;
       }
       return 2;
      }
      return 3;
     }
     var _z_ = sexp_004[1];
     if(! _z_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[11], error_source_003, sexp_004);
     var _A_ = _z_[1];
     if(0 !== _A_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[10], error_source_003, sexp_004);
     var _B_ = _A_[1];
     b:
     if(caml_string_notequal(_B_, cst_Both)){
      c:
      if(caml_string_notequal(_B_, cst_Horizontal)){
       d:
       if(caml_string_notequal(_B_, cst_Neither)){
        if(caml_string_notequal(_B_, cst_Vertical)){
         if(! caml_string_notequal(_B_, cst_both)) break b;
         if(! caml_string_notequal(_B_, cst_horizontal)) break c;
         if(! caml_string_notequal(_B_, cst_neither)) break d;
         if(caml_string_notequal(_B_, cst_vertical)) break a;
        }
        return caml_call2
                (Sexplib0_Sexp_conv_error[7], error_source_003, sexp_004);
       }
       return caml_call2
               (Sexplib0_Sexp_conv_error[7], error_source_003, sexp_004);
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_003, sexp_004);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[7], error_source_003, sexp_004);
    }
    return caml_call2
            (Sexplib0_Sexp_conv_error[12], error_source_003, sexp_004);
   }
   function sexp_of_t(param){
    switch(param){
      case 0:
       return _a_;
      case 1:
       return _b_;
      case 2:
       return _c_;
      default: return _d_;
    }
   }
   function equal(_x_, _w_){return _x_ === _w_ ? 1 : 0;}
   var Scrollable = [0, t_of_sexp, sexp_of_t, equal], State = [0];
   function sexp_of_t$0(param){
    function _u_(_v_){return 0;}
    return caml_call1(Sexplib0_Sexp_conv[24], _u_);
   }
   function combine(f, g, event){
    function _s_(param){return caml_call1(g, event);}
    var _t_ = caml_call1(f, event);
    return caml_call2(Virtual_dom_Effect[21], _t_, _s_);
   }
   var Input = [0, sexp_of_t$0, combine];
   function wrap_with_handle(scrollable, f){
    var _r_ = caml_call1(f, scrollable);
    return caml_call1(Virtual_dom_Effect[23][2], _r_);
   }
   function init(input, param){
    return [0, 0, 0, 0, function(_q_){return wrap_with_handle(_q_, input);}];
   }
   var
    on_mount =
      [0,
       -970641302,
       function(param, state, element){
        function _j_(parentNode){
         function _l_(parentElement){
          state[2] = [0, parentElement];
          function on_resize_observed(entries, observer){
           function _o_(target){
            var
             vertical =
               caml_call2(Core[91], target.scrollHeight, target.clientHeight),
             horizontal =
               caml_call2(Core[91], target.scrollWidth, target.clientWidth),
             _p_ = vertical ? horizontal ? 3 : 1 : horizontal ? 2 : 0;
            state[3] = _p_;
            return caml_call1(state[4], state[3]);
           }
           caml_call2(Base_Option[29][4][3], state[2], _o_);
           return 0;
          }
          var
           observer =
             caml_call4
              (Js_of_ocaml_ResizeObserver[4],
               element,
               on_resize_observed,
               0,
               0);
          observer.observe(parentNode);
          state[1] = [0, observer];
          return 0;
         }
         var
          _m_ = caml_call1(Js_of_ocaml_Dom_html[117][1], parentNode),
          _n_ = caml_call1(Js_of_ocaml_Js[5][10], _m_);
         return caml_call2(Base_Option[29][4][3], _n_, _l_);
        }
        var _k_ = caml_call1(Js_of_ocaml_Js[5][10], element.parentNode);
        caml_call2(Base_Option[29][4][2], _k_, _j_);
        return 0;
       }];
   function update(param, new_input, state, _h_){
    state[4] = function(_i_){return wrap_with_handle(_i_, new_input);};
    return caml_call1(state[4], state[3]);
   }
   function destroy(param, state, _f_){
    function _g_(observer){return observer.disconnect();}
    return caml_call2(Core_Option[46], state[1], _g_);
   }
   var
    Hook =
      caml_call1
       (Virtual_dom_Hooks[3],
        [0, State, Input, init, on_mount, update, destroy]);
   function on_change(f){
    var _e_ = caml_call1(Hook[1], f);
    return caml_call2(Virtual_dom_Vdom[1][7], cst_scroll_tracker, _e_);
   }
   var include = Hook[2], type_id = include[1], For_testing = [0, type_id];
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_element_size);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_element_size);
   var
    Bonsai_web_ui_element_size_hoo = [0, Scrollable, on_change, For_testing];
   runtime.caml_register_global
    (51, Bonsai_web_ui_element_size_hoo, cst_Bonsai_web_ui_element_size$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_element_size_hooks__Freeze
//# unitInfo: Requires: Bonsai_web_ui_element_size_hooks__Import, Core__Option, Core__Unit, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Sexplib0__Sexp_conv, Sexplib0__Sexp_conv_record, Virtual_dom__Hooks, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_element_size$0 =
      "Bonsai_web_ui_element_size_hooks__Freeze",
    cst_bonsai_web_ui_element_size$0 = "bonsai_web_ui_element_size_hooks";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv;
   global_data.Sexplib0__Sexp_conv_record;
   var
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Bonsai_web_ui_element_size_hoo =
      global_data.Bonsai_web_ui_element_size_hooks__Import,
    Core_Option = global_data.Core__Option,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Virtual_dom_Hooks = global_data.Virtual_dom__Hooks;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_expect_runtime[1][1], "web_ui/element_size_hooks/src/freeze.ml");
   caml_call2
    (Ppx_inline_test_lib[6], cst_bonsai_web_ui_element_size$0, "freeze.ml");
   var
    _a_ = [0, "reset"],
    _b_ = [0, "set"],
    cst_freeze_width = "freeze_width",
    cst_freeze_height = "freeze_height",
    cst_bonsai_web_ui_element_size = cst_bonsai_web_ui_element_size$0,
    cst_Bonsai_web_ui_element_size = cst_Bonsai_web_ui_element_size$0;
   function set_width(element){
    var
     rect = element.getBoundingClientRect(),
     width = caml_call1(Js_of_ocaml_Js[6][10], rect.width),
     _n_ = caml_call1(Bonsai_web_ui_element_size_hoo[4], element);
    return caml_call2(Core_Option[46], width, _n_);
   }
   function set_height(element){
    var
     rect = element.getBoundingClientRect(),
     height = caml_call1(Js_of_ocaml_Js[6][10], rect.height),
     _m_ = caml_call1(Bonsai_web_ui_element_size_hoo[5], element);
    return caml_call2(Core_Option[46], height, _m_);
   }
   var
    reset_width = Bonsai_web_ui_element_size_hoo[6],
    reset_height = Bonsai_web_ui_element_size_hoo[7],
    Expert = [0, set_width, set_height, reset_width, reset_height];
   function sexp_of_t(param){
    var bnds_004 = 0;
    function _i_(_l_){return 0;}
    var
     arg_008 = caml_call1(Sexplib0_Sexp_conv[24], _i_),
     bnds_004$0 = [0, [1, [0, _a_, [0, arg_008, 0]]], bnds_004];
    function _j_(_k_){return 0;}
    var
     arg_006 = caml_call1(Sexplib0_Sexp_conv[24], _j_),
     bnds_004$1 = [0, [1, [0, _b_, [0, arg_006, 0]]], bnds_004$0];
    return [1, bnds_004$1];
   }
   function combine(left, right){
    function _h_(element){
     caml_call1(left[2], element);
     return caml_call1(right[2], element);
    }
    return [0,
            function(element){
             caml_call1(left[1], element);
             return caml_call1(right[1], element);
            },
            _h_];
   }
   function init(input, element){return 0;}
   var
    on_mount =
      [0,
       -970641302,
       function(param, _g_, element){
        var set = param[1];
        return caml_call1(set, element);
       }];
   function update(param, _f_, _e_, element){return 0;}
   function destroy(param, _d_, element){
    var reset = param[2];
    return caml_call1(reset, element);
   }
   var
    Hook =
      caml_call1
       (Virtual_dom_Hooks[3],
        [0, [0], [0, sexp_of_t, combine], init, on_mount, update, destroy]);
   function on_mount$0(name, set, reset){
    var _c_ = caml_call1(Hook[1], [0, set, reset]);
    return caml_call2(Virtual_dom_Vdom[1][7], name, _c_);
   }
   var
    width =
      on_mount$0
       (cst_freeze_width, Expert[1], Bonsai_web_ui_element_size_hoo[6]),
    height =
      on_mount$0
       (cst_freeze_height, Expert[2], Bonsai_web_ui_element_size_hoo[7]);
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_element_size);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_element_size);
   var Bonsai_web_ui_element_size_hoo$0 = [0, width, height, Expert];
   runtime.caml_register_global
    (31, Bonsai_web_ui_element_size_hoo$0, cst_Bonsai_web_ui_element_size$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_element_size_hooks__Resizer
//# unitInfo: Requires: Base__Option, Bonsai_web_ui_element_size_hooks__Freeze, Bonsai_web_ui_element_size_hooks__Import, Core__Comparable, Core__Float, Core__Fn, Core__Map, Core__Option, Js_of_ocaml__Dom_html, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Ppx_string_runtime, Sexplib0__Sexp_conv_error, Virtual_dom__Hooks, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_element_size$0 =
      "Bonsai_web_ui_element_size_hooks__Resizer",
    cst_Down = "Down",
    cst_Move = "Move",
    cst_Up = "Up",
    cst_bonsai_web_ui_element_size$0 = "bonsai_web_ui_element_size_hooks",
    cst_down = "down",
    cst_initial$1 = "initial",
    cst_move = "move",
    cst_up = "up",
    caml_string_notequal = runtime.caml_string_notequal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   var
    undef = undefined,
    global_data = runtime.caml_get_global_data(),
    error_source_003 =
      "web_ui/element_size_hooks/src/resizer.ml.Pointer_event.T.t",
    Bonsai_web_ui_element_size_hoo =
      global_data.Bonsai_web_ui_element_size_hooks__Import,
    Base_Option = global_data.Base__Option,
    Core_Float = global_data.Core__Float,
    Core_Option = global_data.Core__Option,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Bonsai_web_ui_element_size_hoo$0 =
      global_data.Bonsai_web_ui_element_size_hooks__Freeze,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Core_Map = global_data.Core__Map,
    Core_Fn = global_data.Core__Fn,
    Sexplib0_Sexp_conv_error = global_data.Sexplib0__Sexp_conv_error,
    Ppx_string_runtime = global_data.Ppx_string_runtime,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Core_Comparable = global_data.Core__Comparable,
    Virtual_dom_Hooks = global_data.Virtual_dom__Hooks;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_expect_runtime[1][1], "web_ui/element_size_hooks/src/resizer.ml");
   caml_call2
    (Ppx_inline_test_lib[6], cst_bonsai_web_ui_element_size$0, "resizer.ml");
   var
    cst_resizer = "resizer",
    cst_initial$0 = cst_initial$1,
    cst_col_resize = "col-resize",
    cst_initial = cst_initial$1,
    _d_ = [0, "Right"],
    _e_ = [0, "Left"],
    _a_ = [0, cst_Down],
    _b_ = [0, cst_Up],
    _c_ = [0, cst_Move],
    cst_important = " !important",
    cst_bonsai_web_ui_element_size = cst_bonsai_web_ui_element_size$0,
    cst_Bonsai_web_ui_element_size = cst_Bonsai_web_ui_element_size$0;
   function set_cursor(s){
    var
     _H_ = [0, s, [0, caml_call1(Ppx_string_runtime[1][2], cst_important), 0]],
     s$0 = caml_call1(Ppx_string_runtime[1][4], _H_),
     t3 = runtime.caml_jsstring_of_string(s$0),
     t0 = Js_of_ocaml_Dom_html[8],
     t1 = t0.document,
     t2 = t1.body,
     t4 = t2.style;
    return t4.cursor = t3;
   }
   function t_of_sexp(sexp_004){
    a:
    {
     if(0 === sexp_004[0]){
      var _D_ = sexp_004[1];
      b:
      if(caml_string_notequal(_D_, cst_Down)){
       c:
       if(caml_string_notequal(_D_, cst_Move)){
        if(caml_string_notequal(_D_, cst_Up)){
         if(! caml_string_notequal(_D_, cst_down)) break b;
         if(! caml_string_notequal(_D_, cst_move)) break c;
         if(caml_string_notequal(_D_, cst_up)) break a;
        }
        return 1;
       }
       return 2;
      }
      return 0;
     }
     var _E_ = sexp_004[1];
     if(! _E_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[11], error_source_003, sexp_004);
     var _F_ = _E_[1];
     if(0 !== _F_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[10], error_source_003, sexp_004);
     var _G_ = _F_[1];
     b:
     if(caml_string_notequal(_G_, cst_Down)){
      c:
      if(caml_string_notequal(_G_, cst_Move)){
       if(caml_string_notequal(_G_, cst_Up)){
        if(! caml_string_notequal(_G_, cst_down)) break b;
        if(! caml_string_notequal(_G_, cst_move)) break c;
        if(caml_string_notequal(_G_, cst_up)) break a;
       }
       return caml_call2
               (Sexplib0_Sexp_conv_error[7], error_source_003, sexp_004);
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_003, sexp_004);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[7], error_source_003, sexp_004);
    }
    return caml_call2
            (Sexplib0_Sexp_conv_error[12], error_source_003, sexp_004);
   }
   function sexp_of_t(param){
    switch(param){case 0: return _a_;case 1: return _b_;default: return _c_;
    }
   }
   var
    compare = runtime.caml_int_compare,
    include =
      caml_call1(Core_Comparable[12], [0, compare, t_of_sexp, sexp_of_t]),
    Map = include[21];
   function sexp_of_t$0(param){return param ? _d_ : _e_;}
   function set_last_pointer_x(r, v){r[4] = v; return;}
   var _f_ = Core_Option[46], _g_ = Js_of_ocaml_Dom_html[18];
   function remove_event_listener(_C_){return caml_call2(_f_, _C_, _g_);}
   function on_pointer_event(state, element, f, event){
    remove_event_listener(caml_call2(Core_Map[44], state[1], event));
    switch(event){
      case 0:
       var _B_ = Js_of_ocaml_Dom_html[15][79]; break;
      case 1:
       var _B_ = Js_of_ocaml_Dom_html[15][84]; break;
      default: var _B_ = Js_of_ocaml_Dom_html[15][81];
    }
    var
     id = caml_call5(Bonsai_web_ui_element_size_hoo[3], 0, 0, element, _B_, f);
    state[1] = caml_call3(Core_Map[38], state[1], event, id);
    return;
   }
   function remove_pointer_event(state, event){
    return remove_event_listener(caml_call2(Core_Map[44], state[1], event));
   }
   function cancel_schedule(state){
    return caml_call1(Bonsai_web_ui_element_size_hoo[1], state[2]);
   }
   function schedule(state, f){
    cancel_schedule(state);
    state[2] = caml_call1(Bonsai_web_ui_element_size_hoo[2], f);
    return 0;
   }
   function clear_pointer_x(state){state[3] = 0; return;}
   function get_parent(element){
    function _y_(parent){
     var _A_ = caml_call1(Js_of_ocaml_Dom_html[117][1], parent);
     return caml_call1(Js_of_ocaml_Js[5][10], _A_);
    }
    var _z_ = caml_call1(Js_of_ocaml_Js[5][10], element.parentNode);
    return caml_call2(Base_Option[29][4][2], _z_, _y_);
   }
   function do_update_width(target, state){
    function _o_(pointer_x){
     function _p_(last_pointer_x){
      function _q_(target){
       function _s_(parent){
        var parent_rect = parent.getBoundingClientRect();
        function _u_(parent_width){
         function _w_(new_width){
          caml_call2(Bonsai_web_ui_element_size_hoo[4], parent, new_width);
          return caml_call1(Base_Option[29][1], 0);
         }
         var
          operation = state[5] ? Core_Float[78] : Core_Float[79],
          diff_x = pointer_x - last_pointer_x,
          proposed_width = caml_call2(operation, parent_width, diff_x),
          is_growing =
            caml_call2(Core_Float[129], proposed_width, parent_width),
          is_shrinking =
            caml_call2(Core_Float[130], proposed_width, parent_width);
         if(state[5])
          var
           parent_right = parent_rect.right,
           pointer_on_left =
             caml_call2(Core_Float[130], pointer_x, parent_right),
           pointer_on_right =
             caml_call2(Core_Float[129], pointer_x, parent_right),
           pointer_on_right$0 = is_growing ? pointer_on_right : is_growing,
           pointer_on_right$1 =
             pointer_on_right$0
             || (is_shrinking ? pointer_on_left : is_shrinking),
           should_accept = pointer_on_right$1;
         else
          var
           parent_left = parent_rect.left,
           pointer_on_left$0 =
             caml_call2(Core_Float[130], pointer_x, parent_left),
           pointer_on_right$2 =
             caml_call2(Core_Float[129], pointer_x, parent_left),
           pointer_on_left$1 = is_growing ? pointer_on_left$0 : is_growing,
           pointer_on_left$2 =
             pointer_on_left$1
             || (is_shrinking ? pointer_on_right$2 : is_shrinking),
           should_accept = pointer_on_left$2;
         var _x_ = caml_call2(Core_Option[60], should_accept, proposed_width);
         return caml_call2(Base_Option[29][4][2], _x_, _w_);
        }
        var _v_ = caml_call1(Js_of_ocaml_Js[6][10], parent_rect.width);
        return caml_call2(Base_Option[29][4][2], _v_, _u_);
       }
       var _t_ = get_parent(target);
       return caml_call2(Base_Option[29][4][2], _t_, _s_);
      }
      var _r_ = caml_call1(Js_of_ocaml_Js[5][10], target);
      return caml_call2(Base_Option[29][4][2], _r_, _q_);
     }
     var temp = state[4];
     set_last_pointer_x(state, [0, pointer_x]);
     return caml_call2(Base_Option[29][4][2], temp, _p_);
    }
    caml_call2(Base_Option[29][4][2], state[3], _o_);
    clear_pointer_x(state);
    return schedule
            (state, function(param){return do_update_width(target, state);});
   }
   function combine(first, second){return first;}
   var Input = [0, sexp_of_t$0, combine];
   function init(side, element){
    var
     _m_ = caml_call1(Core_Fn[1], 0),
     animation_id = caml_call1(Bonsai_web_ui_element_size_hoo[2], _m_),
     state = [0, Map[5], animation_id, 0, 0, side];
    function on_pointer_move(param, event){
     var x = caml_call1(Core_Float[33], event.clientX);
     state[3] = [0, x];
     return 0;
    }
    function on_pointer_up(param, _n_){
     set_cursor(cst_initial);
     state[4] = 0;
     clear_pointer_x(state);
     remove_pointer_event(state, 2);
     remove_pointer_event(state, 1);
     return cancel_schedule(state);
    }
    function on_pointer_down(param, event){
     var target = event.currentTarget, clientX = event.clientX;
     set_last_pointer_x(state, [0, caml_call1(Core_Float[33], clientX)]);
     on_pointer_event(state, Js_of_ocaml_Dom_html[2], on_pointer_move, 2);
     on_pointer_event(state, Js_of_ocaml_Dom_html[2], on_pointer_up, 1);
     schedule(state, function(param){return do_update_width(target, state);});
     return set_cursor(cst_col_resize);
    }
    on_pointer_event(state, element, on_pointer_down, 0);
    return state;
   }
   var
    on_mount =
      [0,
       -970641302,
       function(init, state, element){
        var
         _k_ = Bonsai_web_ui_element_size_hoo$0[3][1],
         _l_ = get_parent(element);
        return caml_call2(Core_Option[46], _l_, _k_);
       }];
   function update(param, new_input, state, element){state[5] = new_input; return 0;
   }
   function destroy(input, state, element){
    set_cursor(cst_initial$0);
    var
     _i_ = Bonsai_web_ui_element_size_hoo$0[3][3],
     _j_ = get_parent(element);
    caml_call2(Core_Option[46], _j_, _i_);
    var listeners = state[1], animation_id = state[2];
    caml_call2(Core_Map[50], listeners, Js_of_ocaml_Dom_html[18]);
    return caml_call1(Bonsai_web_ui_element_size_hoo[1], animation_id);
   }
   var
    Hook =
      caml_call1
       (Virtual_dom_Hooks[3],
        [0, [0], Input, init, on_mount, update, destroy]);
   function attr(side){
    var _h_ = caml_call1(Hook[1], side);
    return caml_call2(Virtual_dom_Vdom[1][7], cst_resizer, _h_);
   }
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_element_size);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_element_size);
   var Bonsai_web_ui_element_size_hoo$1 = [0, [0], attr];
   runtime.caml_register_global
    (65, Bonsai_web_ui_element_size_hoo$1, cst_Bonsai_web_ui_element_size$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_element_size_hooks__Resize_to_fit
//# unitInfo: Requires: Core, Core__Float, Core__Option, Css_gen, Js_of_ocaml__Js, Js_of_ocaml__ResizeObserver, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Ppx_string_runtime, Sexplib0__Sexp_conv, Sexplib0__Sexp_conv_error, Virtual_dom__Dom_float, Virtual_dom__Hooks, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_element_size$0 =
      "Bonsai_web_ui_element_size_hooks__Resize_to_fit",
    cst_bonsai_web_ui_element_size$0 = "bonsai_web_ui_element_size_hooks",
    cst_web_ui_element_size_hooks_$0 =
      "web_ui/element_size_hooks/src/resize_to_fit.ml",
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   var
    undef = undefined,
    global_data = runtime.caml_get_global_data(),
    cst = ")",
    Css_gen = global_data.Css_gen,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Core_Option = global_data.Core__Option,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Core = global_data.Core,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Assert_failure = global_data.Assert_failure,
    Js_of_ocaml_ResizeObserver = global_data.Js_of_ocaml__ResizeObserver,
    Core_Float = global_data.Core__Float,
    Ppx_string_runtime = global_data.Ppx_string_runtime,
    Virtual_dom_Dom_float = global_data.Virtual_dom__Dom_float;
   global_data.Sexplib0__Sexp_conv_error;
   var
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Virtual_dom_Hooks = global_data.Virtual_dom__Hooks;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_element_size$0);
   caml_call1(Ppx_expect_runtime[1][1], cst_web_ui_element_size_hooks_$0);
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_element_size$0,
     "resize_to_fit.ml");
   var
    _g_ = [0, [0, 17960, 0]],
    _h_ = [0, [0, 17960, 0]],
    _i_ = [0, [0, 17960, 0]],
    _j_ = [0, [0, 17960, 0]],
    cst_left_top = "left top",
    cst_transform_origin = "transform-origin",
    cst_grow_to_fill = "grow_to_fill",
    cst_parent_should_always_be_se =
      "parent should always be set in [on_mount]",
    cst_web_ui_element_size_hooks_ =
      "web_ui/element_size_hooks/src/resize_to_fit.ml:138:33",
    cst_BUG = "BUG",
    _e_ = [254, 0., 0.],
    _f_ = [254, 0., 0.],
    _d_ = [0, cst_web_ui_element_size_hooks_$0, 96, 70],
    cst_scale = "scale(",
    _a_ = [0, "Grow_to_fill"],
    _b_ = [0, "Shrink_to_avoid_overflow"],
    _c_ = [0, "Grow_or_shrink_to_match_parent_size"],
    cst_bonsai_web_ui_element_size = cst_bonsai_web_ui_element_size$0,
    cst_Bonsai_web_ui_element_size = cst_Bonsai_web_ui_element_size$0;
   function sexp_of_t(param){
    switch(param){case 0: return _a_;case 1: return _b_;default: return _c_;
    }
   }
   function combine(a, b){
    switch(a){
      case 0:
       if(0 === b) return 0; break;
      case 1:
       if(1 === b) return 1; break;
    }
    return 2;
   }
   var State = [0];
   function set_width_property(state){
    if(state[4]){
     var t3 = state[5], t5 = t3.style;
     t5.width = "max-content";
     return;
    }
    var t0 = state[5], t2 = t0.style;
    t2.width = "fit-content";
    return;
   }
   function adjust(state){
    function set_scale(scale){
     var
      _L_ = [0, caml_call1(Ppx_string_runtime[1][2], cst), 0],
      _M_ = [0, caml_call1(Virtual_dom_Dom_float[5], scale), _L_],
      _N_ = [0, caml_call1(Ppx_string_runtime[1][2], cst_scale), _M_],
      t7 =
        runtime.caml_jsstring_of_string
         (caml_call1(Ppx_string_runtime[1][4], _N_)),
      t6 = state[5],
      t8 = t6.style;
     return t8.transform = t7;
    }
    function lte_zero(f){return caml_call2(Core_Float[127], f, 0.);}
    if
     (!
      lte_zero(state[2][1])
      &&
       !
       lte_zero(state[2][2])
       && ! lte_zero(state[3][1]) && ! lte_zero(state[3][2])){
     var
      width_rat = state[3][1] / state[2][1],
      height_rat = state[3][2] / state[2][2],
      param = state[4],
      v = caml_call2(Core_Float[134], width_rat, height_rat);
     switch(param){
       case 0:
        var scale = caml_call2(Core_Float[135], v, 1.); break;
       case 1:
        var scale = caml_call2(Core_Float[134], v, 1.); break;
       default: var scale = v;
     }
     return set_scale(scale);
    }
    return set_scale(1.);
   }
   function with_size(box_array, f){
    function _I_(box){
     return caml_call1(f, [254, box.inlineSize, box.blockSize]);
    }
    function _J_(param){return 0;}
    var _K_ = caml_call2(Js_of_ocaml_Js[20], box_array, 0);
    return caml_call3(Js_of_ocaml_Js[6][7], _K_, _J_, _I_);
   }
   function init(input, element){
    var state = [0, 0, _f_, _e_, input, element];
    set_width_property(state);
    return state;
   }
   var
    on_mount =
      [0,
       -970641302,
       function(input, state, element){
        function _w_(parent){
         function on_resize_observed(entries, observer){
          var _C_ = entries.length - 1 | 0, _B_ = 0;
          if(_C_ >= 0){
           var i = _B_;
           for(;;){
            var
             _D_ =
               function(param){
                throw caml_maybe_attach_backtrace([0, Assert_failure, _d_], 1);
               },
             _E_ = caml_call2(Js_of_ocaml_Js[20], entries, i),
             entry = caml_call2(Js_of_ocaml_Js[6][8], _E_, _D_);
            if(state[5] === entry.target){
             var _F_ = function(dims){state[2] = dims; return 0;};
             with_size(entry.borderBoxSize, _F_);
            }
            else if(parent === entry.target){
             var _H_ = function(dims){state[3] = dims; return 0;};
             with_size(entry.contentBoxSize, _H_);
            }
            var _G_ = i + 1 | 0;
            if(_C_ === i) break;
            var i = _G_;
           }
          }
          return adjust(state);
         }
         var
          obs =
            new
             Js_of_ocaml_ResizeObserver[2]
             (runtime.caml_js_wrap_callback(on_resize_observed));
         obs.observe(state[5]);
         obs.observe(parent);
         state[1] = [0, obs];
         return 0;
        }
        function _x_(param){
         var
          _y_ =
            [0,
             caml_call1(Sexplib0_Sexp_conv[7], cst_parent_should_always_be_se),
             0],
          _z_ =
            [0,
             caml_call1(Sexplib0_Sexp_conv[7], cst_web_ui_element_size_hooks_),
             _y_],
          _A_ = [1, [0, caml_call1(Sexplib0_Sexp_conv[7], cst_BUG), _z_]];
         return caml_call2(Core[257], 0, _A_);
        }
        var t22 = state[5];
        return caml_call3(Js_of_ocaml_Js[5][7], t22.parentNode, _x_, _w_);
       }];
   function update(old_input, new_input, state, element){
    old_input === new_input;
    state[4] = new_input;
    set_width_property(state);
    return adjust(state);
   }
   function destroy(old_input, state){
    var observer = state[1];
    return function(element){
     function _v_(observer){return observer.disconnect();}
     return caml_call2(Core_Option[46], observer, _v_);};
   }
   var
    Hook =
      caml_call1
       (Virtual_dom_Hooks[3],
        [0, State, [0, sexp_of_t, combine], init, on_mount, update, destroy]);
   function attr(opt, param){
    if(opt) var sth = opt[1], behavior = sth; else var behavior = 1;
    var
     _l_ = caml_call5(Css_gen[24], 0, 0, 0, 0, 260471020),
     _m_ = caml_call5(Css_gen[80], _j_, _i_, _h_, _g_, 0),
     _n_ = caml_call2(Css_gen[30], _m_, _l_),
     _o_ = caml_call1(Css_gen[36], -266363961),
     _p_ = caml_call2(Css_gen[30], _o_, _n_),
     _q_ = caml_call2(Css_gen[21], cst_transform_origin, cst_left_top),
     _r_ = caml_call2(Css_gen[30], _q_, _p_),
     _s_ = [0, caml_call1(Virtual_dom_Vdom[1][32], _r_), 0],
     _t_ = caml_call1(Hook[1], behavior),
     _u_ = [0, caml_call2(Virtual_dom_Vdom[1][7], cst_grow_to_fill, _t_), _s_];
    return caml_call1(Virtual_dom_Vdom[1][9], _u_);
   }
   var
    _k_ = caml_call1(Css_gen[38], 19559306),
    attr_for_parent_recommended = caml_call1(Virtual_dom_Vdom[1][32], _k_);
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_element_size);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_element_size);
   var
    Bonsai_web_ui_element_size_hoo =
      [0, [0], attr, attr_for_parent_recommended];
   runtime.caml_register_global
    (78, Bonsai_web_ui_element_size_hoo, cst_Bonsai_web_ui_element_size$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_element_size_hooks__Position_tracker
//# unitInfo: Requires: Bonsai, Bonsai_web, Core, Core__List, Core__Map, Core__Option, Core__Type_equal, Core__Unit, Css_gen, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Sexplib0__Sexp_conv, Sexplib0__Sexp_conv_record, Ui_effect, Univ_map, Virtual_dom__Effect, Virtual_dom__Hooks, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_element_size$0 =
      "Bonsai_web_ui_element_size_hooks__Position_tracker",
    cst_bonsai_web_ui_element_size$0 = "bonsai_web_ui_element_size_hooks",
    cst_bulk_position_tracker$0 = "bulk_position_tracker",
    cst_height$0 = "height",
    cst_left$0 = "left",
    cst_top$0 = "top",
    cst_web_ui_element_size_hooks_ =
      "web_ui/element_size_hooks/src/position_tracker.ml",
    cst_width$0 = "width",
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_string_notequal = runtime.caml_string_notequal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call6(f, a0, a1, a2, a3, a4, a5){
    return (f.l >= 0 ? f.l : f.l = f.length) == 6
            ? f(a0, a1, a2, a3, a4, a5)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5]);
   }
   function caml_call7(f, a0, a1, a2, a3, a4, a5, a6){
    return (f.l >= 0 ? f.l : f.l = f.length) == 7
            ? f(a0, a1, a2, a3, a4, a5, a6)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    error_source_002 =
      "web_ui/element_size_hooks/src/position_tracker.ml.Position.t",
    hook_name = cst_bulk_position_tracker$0,
    Ui_effect = global_data.Ui_effect,
    Core_Map = global_data.Core__Map,
    Core_List = global_data.Core__List,
    Core_Type_equal = global_data.Core__Type_equal,
    Bonsai = global_data.Bonsai,
    Bonsai_web = global_data.Bonsai_web,
    Css_gen = global_data.Css_gen,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Core = global_data.Core,
    Virtual_dom_Effect = global_data.Virtual_dom__Effect,
    Core_Option = global_data.Core__Option,
    Assert_failure = global_data.Assert_failure,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Sexplib0_Sexp_conv_record = global_data.Sexplib0__Sexp_conv_record,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Univ_map = global_data.Univ_map,
    Virtual_dom_Hooks = global_data.Virtual_dom__Hooks;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_element_size$0);
   caml_call1(Ppx_expect_runtime[1][1], cst_web_ui_element_size_hooks_);
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_element_size$0,
     "position_tracker.ml");
   var
    cst_bulk_position_tracker_type = "bulk_position_tracker_type_id",
    _t_ = [0, [0, cst_web_ui_element_size_hooks_, 252, 7729, 7731]],
    _u_ = [0, [0, cst_web_ui_element_size_hooks_, 249, 7646, 7650]],
    _v_ = [0, [0, cst_web_ui_element_size_hooks_, 248, 7629, 7631]],
    _w_ = [0, [0, cst_web_ui_element_size_hooks_, 237, 7334, 7336]],
    _x_ = [0, [0, cst_web_ui_element_size_hooks_, 237, 7334, 7336]],
    _y_ = [0, [0, cst_web_ui_element_size_hooks_, 237, 7334, 7336]],
    _z_ = [0, [0, cst_web_ui_element_size_hooks_, 233, 7188, 7190]],
    _A_ = [0, [0, cst_web_ui_element_size_hooks_, 228, 7012, 7016]],
    _B_ = [0, [0, cst_web_ui_element_size_hooks_, 220, 6715, 6717]],
    _C_ = [0, [0, cst_web_ui_element_size_hooks_, 219, 6646, 6648]],
    _D_ = [0, [0, cst_web_ui_element_size_hooks_, 219, 6646, 6648]],
    _E_ = [0, [0, cst_web_ui_element_size_hooks_, 219, 6646, 6648]],
    _F_ = [0, [0, cst_web_ui_element_size_hooks_, 219, 6646, 6648]],
    _G_ = [0, [0, cst_web_ui_element_size_hooks_, 219, 6646, 6648]],
    _H_ = [0, [0, cst_web_ui_element_size_hooks_, 210, 6379, 6381]],
    _I_ = [0, [0, cst_web_ui_element_size_hooks_, 210, 6379, 6381]],
    _J_ = [0, [0, cst_web_ui_element_size_hooks_, 210, 6379, 6381]],
    _K_ = [0, [0, cst_web_ui_element_size_hooks_, 210, 6379, 6381]],
    _r_ = [0, "dom_node_tracker"],
    _s_ = [0, "position_tracker"],
    cst_bulk_position_tracker = cst_bulk_position_tracker$0,
    _L_ = [0, [0, cst_web_ui_element_size_hooks_, 210, 6379, 6381]],
    _q_ = [0, cst_web_ui_element_size_hooks_, 103, 24],
    _e_ = [0, "Set"],
    _f_ = [0, "Remove"],
    _g_ = [0, "Observe"],
    _h_ = [0, "Unobserve"],
    _a_ = [0, cst_width$0],
    _b_ = [0, cst_height$0],
    _c_ = [0, cst_left$0],
    _d_ = [0, cst_top$0],
    cst_width = cst_width$0,
    cst_height = cst_height$0,
    cst_left = cst_left$0,
    cst_top = cst_top$0,
    cst_bonsai_web_ui_element_size = cst_bonsai_web_ui_element_size$0,
    cst_Bonsai_web_ui_element_size = cst_Bonsai_web_ui_element_size$0;
   function t_of_sexp(x_003){
    function _bu_(param){
     var
      _bx_ = param[2],
      _by_ = _bx_[2],
      width = _by_[2][1],
      height = _by_[1],
      left = _bx_[1],
      top = param[1];
     return [0, top, left, height, width];
    }
    var _bv_ = 0;
    function _bw_(param){
     return caml_string_notequal(param, cst_height$0)
             ? caml_string_notequal
                (param, cst_left$0)
               ? caml_string_notequal
                  (param, cst_top$0)
                 ? caml_string_notequal(param, cst_width$0) ? -1 : 3
                 : 0
               : 1
             : 2;
    }
    return caml_call6
            (Sexplib0_Sexp_conv_record[3],
             error_source_002,
             [0,
              cst_top,
              1,
              Core[390],
              [0,
               cst_left,
               1,
               Core[390],
               [0, cst_height, 1, Core[390], [0, cst_width, 1, Core[390], 0]]]],
             _bw_,
             _bv_,
             _bu_,
             x_003);
   }
   function sexp_of_t(param){
    var
     width_011 = param[4],
     height_009 = param[3],
     left_007 = param[2],
     top_005 = param[1],
     arg_012 = caml_call1(Core[389], width_011),
     bnds_004 = [0, [1, [0, _a_, [0, arg_012, 0]]], 0],
     arg_010 = caml_call1(Core[389], height_009),
     bnds_004$0 = [0, [1, [0, _b_, [0, arg_010, 0]]], bnds_004],
     arg_008 = caml_call1(Core[389], left_007),
     bnds_004$1 = [0, [1, [0, _c_, [0, arg_008, 0]]], bnds_004$0],
     arg_006 = caml_call1(Core[389], top_005),
     bnds_004$2 = [0, [1, [0, _d_, [0, arg_006, 0]]], bnds_004$1];
    return [1, bnds_004$2];
   }
   function equal(a_013, b_014){
    if(a_013 === b_014) return 1;
    var _bq_ = caml_call2(Core[384], a_013[1], b_014[1]);
    if(_bq_){
     var _br_ = caml_call2(Core[384], a_013[2], b_014[2]);
     if(_br_){
      var _bs_ = caml_call2(Core[384], a_013[3], b_014[3]);
      if(_bs_) return caml_call2(Core[384], a_013[4], b_014[4]);
      var _bt_ = _bs_;
     }
     else
      var _bt_ = _br_;
    }
    else
     var _bt_ = _bq_;
    return _bt_;
   }
   var Position = [0, t_of_sexp, sexp_of_t, equal], Position_tracker = [0];
   function sexp_of_t$0(of_a_027, x_028){
    function _bp_(param){
     switch(param[0]){
       case 0:
        var
         arg1_017 = param[2],
         arg0_016 = param[1],
         res0_018 = caml_call1(of_a_027, arg0_016),
         res1_019 = caml_call1(Position[2], arg1_017);
        return [1, [0, _e_, [0, res0_018, [0, res1_019, 0]]]];
       case 1:
        var arg0_020 = param[1], res0_021 = caml_call1(of_a_027, arg0_020);
        return [1, [0, _f_, [0, res0_021, 0]]];
       case 2:
        var
         arg0_022 = param[1],
         res0_023 = caml_call1(Sexplib0_Sexp_conv[23], arg0_022);
        return [1, [0, _g_, [0, res0_023, 0]]];
       default:
        var
         arg0_024 = param[1],
         res0_025 = caml_call1(Sexplib0_Sexp_conv[23], arg0_024);
        return [1, [0, _h_, [0, res0_025, 0]]];
     }
    }
    return caml_call2(Core[472], _bp_, x_028);
   }
   var
    _i_ = [0, Core_List[6]],
    Input = caml_call1(caml_call1(Univ_map[26], Univ_map[1]), _i_);
   function sexp_of_t$1(of_a_029, param){
    function _bn_(_bo_){return 0;}
    return caml_call1(Sexplib0_Sexp_conv[24], _bn_);
   }
   var
    Tracker = [0, sexp_of_t$1],
    include = caml_call1(caml_call1(Univ_map[26], Univ_map[1]), Tracker),
    empty = include[4],
    find = include[10],
    find_exn = include[11],
    the_one_and_only = [0, empty],
    _j_ = include[7],
    _k_ = include[17];
   function _l_(param){
    var group_key = param[2], inject = param[1];
    the_one_and_only[1] =
     caml_call3(_j_, the_one_and_only[1], group_key, inject);
    return 0;
   }
   function _m_(group_key){
    the_one_and_only[1] = caml_call2(_k_, the_one_and_only[1], group_key);
    return 0;
   }
   var
    Event_groups =
      caml_call1(caml_call1(Univ_map[26], Univ_map[1]), [0, sexp_of_t$0]),
    sexp_of_t$2 = Input[1],
    to_alist = Input[21],
    _n_ = [0, Core_List[6]],
    _o_ = [0, Core_List[6]],
    _p_ = [0, Core_List[6]],
    Merge =
      caml_call1
       (caml_call1
         (caml_call1(caml_call1(Univ_map[28], Univ_map[1]), _p_), _o_),
        _n_);
   function combine(left, right){
    function f(param, _bm_){
     if(737457313 === _bm_[1]){
      var match = _bm_[2], right = match[2], left = match[1];
      return [0, caml_call2(Core[156], left, right)];
     }
     var x = _bm_[2];
     return [0, x];
    }
    return caml_call3(Merge[1], left, right, [0, f]);
   }
   function sexp_of_t$3(param){return Core[149];}
   var
    Poly_unit_effect = [0, sexp_of_t$3],
    Apply_trackers =
      caml_call1
       (caml_call1
         (caml_call1(caml_call1(Univ_map[28], Univ_map[1]), Tracker),
          [0, sexp_of_t$0]),
        Poly_unit_effect),
    Collected_effects =
      caml_call1(caml_call1(Univ_map[26], Univ_map[1]), Poly_unit_effect);
   function change_positions(changes){
    var dimension_groups = [0, Event_groups[4]];
    function _bc_(param){
     var dimensions = param[2], input = param[1];
     function _bi_(param){
      var keys = param[2], group_key = param[1];
      function _bk_(key){
       function _bl_(items){
        var items$0 = caml_call2(Core_Option[39], items, 0);
        return [0, [0, [0, key, dimensions], items$0]];
       }
       dimension_groups[1] =
        caml_call3(Event_groups[14], dimension_groups[1], group_key, _bl_);
       return 0;
      }
      return caml_call2(Core_List[19], keys, _bk_);
     }
     var _bj_ = caml_call1(to_alist, input);
     return caml_call2(Core_List[19], _bj_, _bi_);
    }
    caml_call2(Core_List[19], changes, _bc_);
    function f(param, _bg_){
     var _bh_ = _bg_[1];
     if(737457313 === _bh_){
      var match = _bg_[2], dimension_group = match[2], tracker = match[1];
      return [0, caml_call1(tracker, dimension_group)];
     }
     if(847852583 <= _bh_) return 0;
     throw caml_maybe_attach_backtrace([0, Assert_failure, _q_], 1);
    }
    function _bd_(param){var effect = param[2]; return effect;}
    var
     _be_ =
       caml_call3
        (Apply_trackers[1], the_one_and_only[1], dimension_groups[1], [0, f]),
     _bf_ = caml_call1(Collected_effects[21], _be_),
     events = caml_call2(Core_List[51], _bf_, _bd_);
    return caml_call1(Ui_effect[21][2], [0, Ui_effect[2], events]);
   }
   function init(param, _bb_){return 0;}
   var
    on_mount =
      [0,
       -970641302,
       function(input, param, element){
        var
         _a9_ = caml_call1(to_alist, input),
         match = caml_call1(Core_List[84], _a9_),
         key = match[2],
         group_key = match[1],
         key$0 = caml_call1(Core_List[84], key);
        function _a__(tracker){
         var _ba_ = caml_call1(tracker, [0, [2, [0, key$0, element]], 0]);
         return caml_call1(Virtual_dom_Effect[23][2], _ba_);
        }
        var _a$_ = caml_call2(find, the_one_and_only[1], group_key);
        return caml_call2(Core_Option[46], _a$_, _a__);
       }];
   function update(param, _a8_, _a7_, _a6_){return 0;}
   function destroy(old_input, param, _a1_){
    function _a2_(param){
     var
      keys = param[2],
      group_key = param[1],
      tracker = caml_call2(find_exn, the_one_and_only[1], group_key);
     function _a4_(key){
      var _a5_ = caml_call1(tracker, [0, [1, key], [0, [3, key], 0]]);
      return caml_call1(Virtual_dom_Effect[23][2], _a5_);
     }
     return caml_call2(Core_List[19], keys, _a4_);
    }
    var _a3_ = caml_call1(to_alist, old_input);
    return caml_call2(Core_List[19], _a3_, _a2_);
   }
   var
    include$0 =
      caml_call1
       (Virtual_dom_Hooks[3],
        [0, [0], [0, sexp_of_t$2, combine], init, on_mount, update, destroy]),
    create = include$0[1],
    For_testing = include$0[2];
   function component(key){
    var sexp_of_t = Core[149];
    function sexp_of_t$1(param){
     var
      dom_node_tracker_033 = param[2],
      position_tracker_031 = param[1],
      arg_034 =
        caml_call3
         (Core_Map[132], [0, key[1]], sexp_of_t, dom_node_tracker_033),
      bnds_030 = [0, [1, [0, _r_, [0, arg_034, 0]]], 0],
      arg_032 =
        caml_call3
         (Core_Map[132], [0, key[1]], Position[2], position_tracker_031),
      bnds_030$0 = [0, [1, [0, _s_, [0, arg_032, 0]]], bnds_030];
     return [1, bnds_030$0];
    }
    var
     _M_ = caml_call1(Core_Map[4], [0, key[2]]),
     empty = [0, caml_call1(Core_Map[4], [0, key[2]]), _M_];
    function dom_element_to_position(element){
     var
      left = element.offsetLeft,
      top = element.offsetTop,
      height = element.offsetHeight,
      width = element.offsetWidth;
     return [0, top, left, height, width];
    }
    function apply_action(context, old_model, action){
     function _aY_(old_model, param){
      switch(param[0]){
        case 0:
         var
          position = param[2],
          key = param[1],
          position_tracker =
            caml_call3(Core_Map[38], old_model[1], key, position);
         return [0, position_tracker, old_model[2]];
        case 1:
         var
          key$0 = param[1],
          position_tracker$0 = caml_call2(Core_Map[47], old_model[1], key$0);
         return [0, position_tracker$0, old_model[2]];
        case 2:
         var
          match = param[1],
          dom_node = match[2],
          key$1 = match[1],
          _aZ_ = [0, [0, key$1, dom_element_to_position(dom_node)], 0],
          _a0_ = caml_call2(Bonsai[16][1], context, _aZ_);
         caml_call2(Bonsai[16][2], context, _a0_);
         var
          dom_node_tracker$0 =
            caml_call3(Core_Map[38], old_model[2], key$1, dom_node);
         return [0, old_model[1], dom_node_tracker$0];
        default:
         var
          key$2 = param[1],
          dom_node_tracker = caml_call2(Core_Map[47], old_model[2], key$2);
         return [0, old_model[1], dom_node_tracker];
      }
     }
     return caml_call3(Core_List[20], action, old_model, _aY_);
    }
    function _N_(pattern_syntax_041){
     function _Z_(mapping){
      function _ab_(apply_action){
       function _af_(pattern_syntax_047){
        function _ah_(position_tracker){
         function _al_(dom_node_tracker){
          function _ap_(update){
           function _ay_(group_key){
            function _aB_(pattern_syntax_056){
             function _aK_(param){
              function _aO_(attr){
               function _aV_(param){
                var
                 match = param[2],
                 update = match[2],
                 attr = match[1],
                 position_tracker = param[1];
                return [0, position_tracker, attr, update];
               }
               var
                _aW_ = caml_call2(Bonsai[49][5][7], attr, update),
                _aX_ = caml_call2(Bonsai[49][5][7], position_tracker, _aW_);
               return caml_call3(Bonsai[49][5][8], _t_, _aX_, _aV_);
              }
              function _aP_(group_key, key){
               var
                _aR_ = caml_call1(Css_gen[35], 92813848),
                _aS_ = [0, caml_call1(Virtual_dom_Vdom[1][32], _aR_), 0],
                _aT_ =
                  caml_call1
                   (create, caml_call2(Input[5], group_key, [0, key, 0])),
                _aU_ =
                  [0,
                   caml_call2
                    (Virtual_dom_Vdom[1][7], cst_bulk_position_tracker, _aT_),
                   _aS_];
               return caml_call1(Virtual_dom_Vdom[1][9], _aU_);
              }
              var _aQ_ = caml_call3(Bonsai[49][5][8], _u_, group_key, _aP_);
              return caml_call3(Bonsai[49][5][1], _v_, _aQ_, _aO_);
             }
             function _aL_(param){return 0;}
             var
              _aM_ =
                caml_call3(Bonsai[49][5][4], _w_, pattern_syntax_056, _aL_),
              _aN_ = caml_call1(Bonsai[49][5][6], _aM_);
             return caml_call3(Bonsai[49][5][1], _x_, _aN_, _aK_);
            }
            var _aC_ = 0, _aD_ = 0;
            function _aE_(group_key){
             return caml_call1(caml_call1(Bonsai_web[5][15], _m_), group_key);
            }
            var _aF_ = [0, caml_call3(Bonsai[49][5][4], 0, group_key, _aE_)];
            function _aG_(param){
             var group_key = param[2], inject = param[1];
             return caml_call1
                     (caml_call1(Bonsai_web[5][15], _l_), [0, inject, group_key]);
            }
            var
             _aH_ = caml_call2(Bonsai[49][5][7], apply_action, group_key),
             _aI_ = [0, caml_call3(Bonsai[49][5][4], 0, _aH_, _aG_)],
             _aJ_ = caml_call4(Bonsai[44][3], _aI_, _aF_, _aD_, _aC_);
            return caml_call3(Bonsai[49][5][1], _y_, _aJ_, _aB_);
           }
           function _az_(param){
            return caml_call2
                    (Core_Type_equal[8][3],
                     cst_bulk_position_tracker_type,
                     key[1]);
           }
           var _aA_ = caml_call1(Bonsai[50][1], _az_);
           return caml_call3(Bonsai[49][5][1], _z_, _aA_, _ay_);
          }
          function _aq_(dom_node_tracker){
           function _aw_(key, data, acc){
            var new_effect = [0, key, dom_element_to_position(data)];
            return [0, new_effect, acc];
           }
           var _ax_ = caml_call3(Core_Map[61], dom_node_tracker, 0, _aw_);
           return caml_call1(Core_List[59], _ax_);
          }
          var update_f = caml_call1(Bonsai_web[5][15], _aq_);
          function _ar_(param){
           var dom_node_tracker = param[2], apply_action = param[1];
           function _au_(effects){return caml_call1(apply_action, effects);}
           var _av_ = caml_call1(update_f, dom_node_tracker);
           return caml_call2(Ui_effect[13][4][2], _av_, _au_);
          }
          var
           _as_ = caml_call2(Bonsai[49][5][7], apply_action, dom_node_tracker),
           _at_ = caml_call3(Bonsai[49][5][8], _A_, _as_, _ar_);
          return caml_call3(Bonsai[49][5][1], _B_, _at_, _ap_);
         }
         function _am_(param){
          var pattern_syntax_048 = param[2];
          return pattern_syntax_048;
         }
         var
          _an_ = caml_call3(Bonsai[49][5][4], _C_, pattern_syntax_047, _am_),
          _ao_ = caml_call1(Bonsai[49][5][6], _an_);
         return caml_call3(Bonsai[49][5][1], _D_, _ao_, _al_);
        }
        function _ai_(param){
         var pattern_syntax_049 = param[1];
         return pattern_syntax_049;
        }
        var
         _aj_ = caml_call3(Bonsai[49][5][4], _E_, pattern_syntax_047, _ai_),
         _ak_ = caml_call1(Bonsai[49][5][6], _aj_);
        return caml_call3(Bonsai[49][5][1], _F_, _ak_, _ah_);
       }
       var _ag_ = caml_call1(Bonsai[49][1], mapping);
       return caml_call3(Bonsai[49][5][1], _G_, _ag_, _af_);
      }
      function _ac_(param){
       var pattern_syntax_042 = param[2];
       return pattern_syntax_042;
      }
      var
       _ad_ = caml_call3(Bonsai[49][5][4], _H_, pattern_syntax_041, _ac_),
       _ae_ = caml_call1(Bonsai[49][5][6], _ad_);
      return caml_call3(Bonsai[49][5][1], _I_, _ae_, _ab_);
     }
     function ___(param){
      var pattern_syntax_043 = param[1];
      return pattern_syntax_043;
     }
     var
      _$_ = caml_call3(Bonsai[49][5][4], _J_, pattern_syntax_041, ___),
      _aa_ = caml_call1(Bonsai[49][5][6], _$_);
     return caml_call3(Bonsai[49][5][1], _K_, _aa_, _Z_);
    }
    var
     _O_ = 0,
     _P_ =
       [0,
        function(a_044, b_045){
         if(a_044 === b_045) return 1;
         var _S_ = b_045[1], _T_ = a_044[1];
         function _U_(a_037, b_038){
          return caml_call2(Position[3], a_037, b_038);
         }
         var _V_ = caml_call4(Core_Map[136], [0], _U_, _T_, _S_);
         if(! _V_) return _V_;
         var _W_ = b_045[2], _X_ = a_044[2];
         function _Y_(a_039, b_040){return a_039 === b_040 ? 1 : 0;}
         return caml_call4(Core_Map[136], [0], _Y_, _X_, _W_);
        }],
     _Q_ = [0, function(x_046){return sexp_of_t$0(key[1], x_046);}],
     _R_ =
       caml_call7
        (Bonsai[17], 0, [0, sexp_of_t$1], _Q_, _P_, empty, apply_action, _O_);
    return caml_call3(Bonsai[49][5][1], _L_, _R_, _N_);
   }
   var
    type_id = For_testing[1],
    For_testing$0 = [0, type_id, hook_name, change_positions];
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_element_size);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_element_size);
   var
    Bonsai_web_ui_element_size_hoo =
      [0, Position, Position_tracker, component, For_testing$0];
   runtime.caml_register_global
    (73, Bonsai_web_ui_element_size_hoo, cst_Bonsai_web_ui_element_size$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_element_size_hooks__Gen_js_api
//# unitInfo: Requires: Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_element_size =
      "Bonsai_web_ui_element_size_hooks__Gen_js_api",
    cst_bonsai_web_ui_element_size = "bonsai_web_ui_element_size_hooks";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_element_size);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_element_size);
   caml_call1
    (Ppx_expect_runtime[1][1], "web_ui/element_size_hooks/src/gen_js_api.ml");
   caml_call2
    (Ppx_inline_test_lib[6], cst_bonsai_web_ui_element_size, "gen_js_api.ml");
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_element_size);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_element_size);
   var Bonsai_web_ui_element_size_hoo = [0];
   runtime.caml_register_global
    (11, Bonsai_web_ui_element_size_hoo, cst_Bonsai_web_ui_element_size);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_element_size_hooks__Bulk_size_tracker
//# unitInfo: Requires: Base__Option, Bonsai, Bonsai_web, CamlinternalLazy, Core, Core__List, Core__Map, Core__Option, Core__Type_equal, Core__Unit, Css_gen, Js_of_ocaml__Js, Js_of_ocaml__ResizeObserver, Jsoo_weak_collections__Weak_map, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Reversed_list, Sexplib0__Sexp_conv, Sexplib0__Sexp_conv_error, Sexplib0__Sexp_conv_record, Ui_effect, Univ_map, Virtual_dom__Effect, Virtual_dom__Hooks, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_element_size$0 =
      "Bonsai_web_ui_element_size_hooks__Bulk_size_tracker",
    cst_Fresh = "Fresh",
    cst_Stale = "Stale",
    cst_bonsai_web_ui_element_size$0 = "bonsai_web_ui_element_size_hooks",
    cst_bulk_size_tracker$0 = "bulk_size_tracker",
    cst_fresh = "fresh",
    cst_height$0 = "height",
    cst_stale = "stale",
    cst_web_ui_element_size_hooks_ =
      "web_ui/element_size_hooks/src/bulk_size_tracker.ml",
    cst_width$0 = "width",
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_obj_tag = runtime.caml_obj_tag,
    caml_string_notequal = runtime.caml_string_notequal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call6(f, a0, a1, a2, a3, a4, a5){
    return (f.l >= 0 ? f.l : f.l = f.length) == 6
            ? f(a0, a1, a2, a3, a4, a5)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5]);
   }
   function caml_call7(f, a0, a1, a2, a3, a4, a5, a6){
    return (f.l >= 0 ? f.l : f.l = f.length) == 7
            ? f(a0, a1, a2, a3, a4, a5, a6)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    error_source_002 =
      "web_ui/element_size_hooks/src/bulk_size_tracker.ml.Dimensions.t",
    error_source_028 =
      "web_ui/element_size_hooks/src/bulk_size_tracker.ml.Options.maybe_stale",
    hook_name = cst_bulk_size_tracker$0,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Core_Map = global_data.Core__Map,
    Core = global_data.Core,
    Core_List = global_data.Core__List,
    Bonsai = global_data.Bonsai,
    Core_Type_equal = global_data.Core__Type_equal,
    Bonsai_web = global_data.Bonsai_web,
    Css_gen = global_data.Css_gen,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Sexplib0_Sexp_conv_error = global_data.Sexplib0__Sexp_conv_error,
    Virtual_dom_Effect = global_data.Virtual_dom__Effect,
    Jsoo_weak_collections_Weak_map =
      global_data.Jsoo_weak_collections__Weak_map,
    CamlinternalLazy = global_data.CamlinternalLazy,
    Base_Option = global_data.Base__Option,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Reversed_list = global_data.Reversed_list,
    Js_of_ocaml_ResizeObserver = global_data.Js_of_ocaml__ResizeObserver,
    Assert_failure = global_data.Assert_failure,
    Core_Option = global_data.Core__Option,
    Ui_effect = global_data.Ui_effect,
    Sexplib0_Sexp_conv_record = global_data.Sexplib0__Sexp_conv_record,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Univ_map = global_data.Univ_map,
    Virtual_dom_Hooks = global_data.Virtual_dom__Hooks;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_element_size$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_element_size$0);
   caml_call1(Ppx_expect_runtime[1][1], cst_web_ui_element_size_hooks_);
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_element_size$0,
     "bulk_size_tracker.ml");
   var
    cst_BUG_We_should_never_be_rem =
      "BUG: We should never be removing items from this map while in [Ignore_stale] mode. Removing anyway.",
    _w_ = [0, [0, cst_web_ui_element_size_hooks_, 271, 8636, 8638]],
    _x_ = [0, [0, cst_web_ui_element_size_hooks_, 270, 8559, 8561]],
    _y_ = [0, [0, cst_web_ui_element_size_hooks_, 269, 8485, 8487]],
    _z_ = [0, [0, cst_web_ui_element_size_hooks_, 244, 7381, 7383]],
    _A_ = [0, [0, cst_web_ui_element_size_hooks_, 244, 7381, 7383]],
    _B_ = [0, [0, cst_web_ui_element_size_hooks_, 244, 7381, 7383]],
    _C_ = [0, [0, cst_web_ui_element_size_hooks_, 244, 7381, 7383]],
    _D_ = [0, [0, cst_web_ui_element_size_hooks_, 244, 7381, 7383]],
    cst_bulk_size_tracker_type_id = "bulk_size_tracker_type_id",
    _p_ = [0, [0, cst_web_ui_element_size_hooks_, 216, 6553, 6555]],
    _q_ = [0, [0, cst_web_ui_element_size_hooks_, 190, 5898, 5900]],
    _r_ = [0, [0, cst_web_ui_element_size_hooks_, 190, 5898, 5900]],
    _s_ = [0, [0, cst_web_ui_element_size_hooks_, 192, 5939, 5945]],
    _t_ = [0, [0, cst_web_ui_element_size_hooks_, 191, 5913, 5917]],
    _u_ = [0, [0, cst_web_ui_element_size_hooks_, 190, 5898, 5900]],
    cst_bulk_size_tracker = cst_bulk_size_tracker$0,
    _v_ = [0, [0, cst_web_ui_element_size_hooks_, 186, 5758, 5760]],
    _n_ = [0, cst_Fresh],
    _o_ = [0, cst_Stale],
    _m_ = [0, cst_web_ui_element_size_hooks_, 99, 24],
    _c_ = [0, "Set"],
    _d_ = [0, "Remove"],
    _a_ = [0, cst_height$0],
    _b_ = [0, cst_width$0],
    cst_height = cst_height$0,
    cst_width = cst_width$0,
    cst_bonsai_web_ui_element_size = cst_bonsai_web_ui_element_size$0,
    cst_Bonsai_web_ui_element_size = cst_Bonsai_web_ui_element_size$0;
   function t_of_sexp(x_003){
    function _bd_(param){
     var height = param[2][1], width = param[1];
     return [254, width, height];
    }
    var _be_ = 0;
    function _bf_(param){
     return caml_string_notequal(param, cst_height$0)
             ? caml_string_notequal(param, cst_width$0) ? -1 : 0
             : 1;
    }
    return caml_call6
            (Sexplib0_Sexp_conv_record[3],
             error_source_002,
             [0, cst_width, 1, Core[368], [0, cst_height, 1, Core[368], 0]],
             _bf_,
             _be_,
             _bd_,
             x_003);
   }
   function sexp_of_t(param){
    var
     height_007 = param[2],
     width_005 = param[1],
     arg_008 = caml_call1(Core[367], height_007),
     bnds_004 = [0, [1, [0, _a_, [0, arg_008, 0]]], 0],
     arg_006 = caml_call1(Core[367], width_005),
     bnds_004$0 = [0, [1, [0, _b_, [0, arg_006, 0]]], bnds_004];
    return [1, bnds_004$0];
   }
   function equal(a_009, b_010){
    if(a_009 === b_010) return 1;
    var _bc_ = caml_call2(Core[362], a_009[1], b_010[1]);
    return _bc_ ? caml_call2(Core[362], a_009[2], b_010[2]) : _bc_;
   }
   var Dimensions = [0, t_of_sexp, sexp_of_t, equal];
   function sexp_of_t$0(of_a_019, x_020){
    function _bb_(param){
     if(0 === param[0]){
      var
       arg1_013 = param[2],
       arg0_012 = param[1],
       res0_014 = caml_call1(of_a_019, arg0_012),
       res1_015 = caml_call1(Dimensions[2], arg1_013);
      return [1, [0, _c_, [0, res0_014, [0, res1_015, 0]]]];
     }
     var arg0_016 = param[1], res0_017 = caml_call1(of_a_019, arg0_016);
     return [1, [0, _d_, [0, res0_017, 0]]];
    }
    return caml_call2(Core[472], _bb_, x_020);
   }
   var
    _e_ = [0, Core_List[6]],
    Input = caml_call1(caml_call1(Univ_map[26], Univ_map[1]), _e_);
   function sexp_of_t$1(of_a_021, param){
    function _a$_(_ba_){return 0;}
    return caml_call1(Sexplib0_Sexp_conv[24], _a$_);
   }
   var
    Tracker = [0, sexp_of_t$1],
    include = caml_call1(caml_call1(Univ_map[26], Univ_map[1]), Tracker),
    empty = include[4],
    find_exn = include[11],
    the_one_and_only = [0, empty],
    _f_ = include[7],
    _g_ = include[17];
   function _h_(param){
    var group_key = param[2], inject = param[1];
    the_one_and_only[1] =
     caml_call3(_f_, the_one_and_only[1], group_key, inject);
    return 0;
   }
   function _i_(group_key){
    the_one_and_only[1] = caml_call2(_g_, the_one_and_only[1], group_key);
    return 0;
   }
   var
    Event_groups =
      caml_call1(caml_call1(Univ_map[26], Univ_map[1]), [0, sexp_of_t$0]),
    weakmap = caml_call1(Jsoo_weak_collections_Weak_map[1], 0),
    sexp_of_t$2 = Input[1],
    to_alist = Input[21],
    _j_ = [0, Core_List[6]],
    _k_ = [0, Core_List[6]],
    _l_ = [0, Core_List[6]],
    Merge =
      caml_call1
       (caml_call1
         (caml_call1(caml_call1(Univ_map[28], Univ_map[1]), _l_), _k_),
        _j_);
   function combine(left, right){
    function f(param, _a__){
     if(737457313 === _a__[1]){
      var match = _a__[2], right = match[2], left = match[1];
      return [0, caml_call2(Core[156], left, right)];
     }
     var x = _a__[2];
     return [0, x];
    }
    return caml_call3(Merge[1], left, right, [0, f]);
   }
   function sexp_of_t$3(param){return Core[149];}
   var
    Poly_unit_effect = [0, sexp_of_t$3],
    Apply_trackers =
      caml_call1
       (caml_call1
         (caml_call1(caml_call1(Univ_map[28], Univ_map[1]), Tracker),
          [0, sexp_of_t$0]),
        Poly_unit_effect),
    Collected_effects =
      caml_call1(caml_call1(Univ_map[26], Univ_map[1]), Poly_unit_effect);
   function change_sizes(changes){
    var dimension_groups = [0, Event_groups[4]];
    function _a0_(param){
     var dimensions = param[2], input = param[1];
     function _a6_(param){
      var keys = param[2], group_key = param[1];
      function _a8_(key){
       function _a9_(items){
        var items$0 = caml_call2(Core_Option[39], items, 0);
        return [0, [0, [0, key, dimensions], items$0]];
       }
       dimension_groups[1] =
        caml_call3(Event_groups[14], dimension_groups[1], group_key, _a9_);
       return 0;
      }
      return caml_call2(Core_List[19], keys, _a8_);
     }
     var _a7_ = caml_call1(to_alist, input);
     return caml_call2(Core_List[19], _a7_, _a6_);
    }
    caml_call2(Core_List[19], changes, _a0_);
    function f(param, _a4_){
     var _a5_ = _a4_[1];
     if(737457313 === _a5_){
      var match = _a4_[2], dimension_group = match[2], tracker = match[1];
      return [0, caml_call1(tracker, dimension_group)];
     }
     if(847852583 <= _a5_) return 0;
     throw caml_maybe_attach_backtrace([0, Assert_failure, _m_], 1);
    }
    function _a1_(param){var effect = param[2]; return effect;}
    var
     _a2_ =
       caml_call3
        (Apply_trackers[1], the_one_and_only[1], dimension_groups[1], [0, f]),
     _a3_ = caml_call1(Collected_effects[21], _a2_),
     events = caml_call2(Core_List[51], _a3_, _a1_);
    return caml_call1(Ui_effect[21][2], [0, Ui_effect[2], events]);
   }
   var
    observer =
      [246,
       function(_aO_){
        function on_resize_observed(entries, observer){
         var changes = [0, 0], _aQ_ = entries.length - 1 | 0, _aP_ = 0;
         if(_aQ_ >= 0){
          var i = _aP_;
          for(;;){
           var
            _aR_ =
              function(entry){
               function _aV_(border_box){
                var target = entry.target;
                function _aY_(input){
                 var
                  width = border_box.inlineSize,
                  height = border_box.blockSize,
                  dimensions = [254, width, height];
                 changes[1] = [0, [0, input, dimensions], changes[1]];
                 return 0;
                }
                var
                 _aZ_ =
                   caml_call2
                    (Jsoo_weak_collections_Weak_map[3], weakmap, target);
                return caml_call2(Base_Option[29][4][3], _aZ_, _aY_);
               }
               var
                _aW_ = caml_call2(Js_of_ocaml_Js[20], entry.borderBoxSize, 0),
                _aX_ = caml_call1(Js_of_ocaml_Js[6][10], _aW_);
               return caml_call2(Base_Option[29][4][2], _aX_, _aV_);
              },
            _aS_ = caml_call2(Js_of_ocaml_Js[20], entries, i),
            _aT_ = caml_call1(Js_of_ocaml_Js[6][10], _aS_);
           caml_call2(Base_Option[29][4][2], _aT_, _aR_);
           var _aU_ = i + 1 | 0;
           if(_aQ_ === i) break;
           var i = _aU_;
          }
         }
         return change_sizes(caml_call1(Reversed_list[3], changes[1]));
        }
        return new
                Js_of_ocaml_ResizeObserver[2]
                (runtime.caml_js_wrap_callback(on_resize_observed));
       }];
   function init(input, element){
    caml_call3(Jsoo_weak_collections_Weak_map[2], weakmap, element, input);
    var _aM_ = caml_obj_tag(observer);
    a:
    if(250 === _aM_)
     var _aN_ = observer[1];
    else{
     if(246 !== _aM_ && 244 !== _aM_){var _aN_ = observer; break a;}
     var _aN_ = caml_call1(CamlinternalLazy[2], observer);
    }
    return _aN_.observe(element);
   }
   var on_mount = 327963705;
   function update(param, _aL_, _aK_, _aJ_){return 0;}
   function destroy(old_input, param, element){
    caml_call2(Jsoo_weak_collections_Weak_map[4], weakmap, element);
    var _aD_ = caml_obj_tag(observer);
    a:
    if(250 === _aD_)
     var _aE_ = observer[1];
    else{
     if(246 !== _aD_ && 244 !== _aD_){var _aE_ = observer; break a;}
     var _aE_ = caml_call1(CamlinternalLazy[2], observer);
    }
    _aE_.unobserve(element);
    function _aF_(param){
     var
      keys = param[2],
      group_key = param[1],
      tracker = caml_call2(find_exn, the_one_and_only[1], group_key);
     function _aH_(key){
      var _aI_ = caml_call1(tracker, [0, [1, key], 0]);
      return caml_call1(Virtual_dom_Effect[23][2], _aI_);
     }
     return caml_call2(Core_List[19], keys, _aH_);
    }
    var _aG_ = caml_call1(to_alist, old_input);
    return caml_call2(Core_List[19], _aG_, _aF_);
   }
   var
    include$0 =
      caml_call1
       (Virtual_dom_Hooks[3],
        [0, [0], [0, sexp_of_t$2, combine], init, on_mount, update, destroy]),
    create = include$0[1],
    For_testing = include$0[2];
   function maybe_stale_of_sexp(of_a_025, sexp_030){
    a:
    {
     if(0 === sexp_030[0]){
      var _aA_ = sexp_030[1];
      b:
      if(caml_string_notequal(_aA_, cst_Fresh)){
       if(caml_string_notequal(_aA_, cst_Stale)){
        if(! caml_string_notequal(_aA_, cst_fresh)) break b;
        if(caml_string_notequal(_aA_, cst_stale)) break a;
       }
       return caml_call2
               (Sexplib0_Sexp_conv_error[9], error_source_028, sexp_030);
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[9], error_source_028, sexp_030);
     }
     var _aB_ = sexp_030[1];
     if(! _aB_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[11], error_source_028, sexp_030);
     var _aC_ = _aB_[1];
     if(0 !== _aC_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[10], error_source_028, sexp_030);
     var tag_031 = _aC_[1];
     b:
     if(caml_string_notequal(tag_031, cst_Fresh)){
      if(caml_string_notequal(tag_031, cst_Stale)){
       if(! caml_string_notequal(tag_031, cst_fresh)) break b;
       if(caml_string_notequal(tag_031, cst_stale)) break a;
      }
      var sexp_args_037 = _aB_[2];
      if(sexp_args_037 && ! sexp_args_037[2]){
       var
        arg0_038 = sexp_args_037[1],
        res0_039 = caml_call1(of_a_025, arg0_038);
       return [1, res0_039];
      }
      return caml_call3
              (Sexplib0_Sexp_conv_error[8],
               error_source_028,
               tag_031,
               sexp_030);
     }
     var sexp_args_032 = _aB_[2];
     if(sexp_args_032 && ! sexp_args_032[2]){
      var
       arg0_033 = sexp_args_032[1],
       res0_034 = caml_call1(of_a_025, arg0_033);
      return [0, res0_034];
     }
     return caml_call3
             (Sexplib0_Sexp_conv_error[8],
              error_source_028,
              tag_031,
              sexp_030);
    }
    return caml_call2
            (Sexplib0_Sexp_conv_error[12], error_source_028, sexp_030);
   }
   function sexp_of_maybe_stale(of_a_041, param){
    if(0 === param[0]){
     var arg0_042 = param[1], res0_043 = caml_call1(of_a_041, arg0_042);
     return [1, [0, _n_, [0, res0_043, 0]]];
    }
    var arg0_044 = param[1], res0_045 = caml_call1(of_a_041, arg0_044);
    return [1, [0, _o_, [0, res0_045, 0]]];
   }
   function equal_maybe_stale(cmp_a, a_047, b_048){
    if(a_047 === b_048) return 1;
    if(0 === a_047[0]){
     var a_049 = a_047[1];
     if(0 !== b_048[0]) return 0;
     var b_050 = b_048[1];
     return caml_call2(cmp_a, a_049, b_050);
    }
    var a_051 = a_047[1];
    if(0 === b_048[0]) return 0;
    var b_052 = b_048[1];
    return caml_call2(cmp_a, a_051, b_052);
   }
   function component(opt, options, f){
    if(opt)
     var sth = opt[1], sexp_of_key = sth;
    else
     var sexp_of_key = Core[149];
    function _ad_(group_key){
     function _ag_(pattern_syntax_054){
      function _ar_(param){
       function _av_(group_key, key){
        var
         _aw_ = caml_call1(Css_gen[35], 92813848),
         _ax_ = [0, caml_call1(Virtual_dom_Vdom[1][32], _aw_), 0],
         _ay_ =
           caml_call1(create, caml_call2(Input[5], group_key, [0, key, 0])),
         _az_ =
           [0,
            caml_call2(Virtual_dom_Vdom[1][7], cst_bulk_size_tracker, _ay_),
            _ax_];
        return caml_call1(Virtual_dom_Vdom[1][9], _az_);
       }
       return caml_call3(Bonsai[49][5][8], _p_, group_key, _av_);
      }
      function _as_(param){return 0;}
      var
       _at_ = caml_call3(Bonsai[49][5][4], _q_, pattern_syntax_054, _as_),
       _au_ = caml_call1(Bonsai[49][5][6], _at_);
      return caml_call3(Bonsai[49][5][1], _r_, _au_, _ar_);
     }
     function _ah_(on_activate){
      var _an_ = 0, _ao_ = 0;
      function _ap_(group_key){
       return caml_call1(caml_call1(Bonsai_web[5][15], _i_), group_key);
      }
      var _aq_ = [0, caml_call3(Bonsai[49][5][4], 0, group_key, _ap_)];
      return caml_call4(Bonsai[44][3], [0, on_activate], _aq_, _ao_, _an_);
     }
     function _ai_(param){
      var
       group_key = param[2],
       f = param[1],
       inject =
         2 <= options
          ? function
           (actions){
            function _am_(param){return 0 === param[0] ? 1 : 0;}
            var actions$0 = caml_call2(Core_List[12], actions, _am_);
            return actions$0 ? caml_call1(f, actions$0) : Bonsai_web[5][1];
           }
          : f;
      return caml_call1
              (caml_call1(Bonsai_web[5][15], _h_), [0, inject, group_key]);
     }
     var
      _aj_ = caml_call2(Bonsai[49][5][7], f, group_key),
      _ak_ = caml_call3(Bonsai[49][5][8], _s_, _aj_, _ai_),
      _al_ = caml_call3(Bonsai[49][5][1], _t_, _ak_, _ah_);
     return caml_call3(Bonsai[49][5][1], _u_, _al_, _ag_);
    }
    function _ae_(param){
     return caml_call2
             (Core_Type_equal[8][3],
              cst_bulk_size_tracker_type_id,
              sexp_of_key);
    }
    var _af_ = caml_call1(Bonsai[50][1], _ae_);
    return caml_call3(Bonsai[49][5][1], _v_, _af_, _ad_);
   }
   function component$0(key, options){
    switch(options){
      case 0:
       var sexp_of_contained = Dimensions[2]; break;
      case 1:
       var
        sexp_of_contained =
          function(x_061){return sexp_of_maybe_stale(Dimensions[2], x_061);};
       break;
      default: var sexp_of_contained = Dimensions[2];
    }
    switch(options){
      case 0:
       var
        equal_contained =
          function(a_062, b_063){
           return caml_call2(Dimensions[3], a_062, b_063);
          };
       break;
      case 1:
       var
        equal_contained =
          function(a_064, b_065){
           return equal_maybe_stale
                   (function(a_066, b_067){
                     return caml_call2(Dimensions[3], a_066, b_067);
                    },
                    a_064,
                    b_065);
          };
       break;
      default:
       var
        equal_contained =
          function(a_068, b_069){
           return caml_call2(Dimensions[3], a_068, b_069);
          };
    }
    function sexp_of_t(x_070){
     return caml_call3(Core_Map[132], [0, key[1]], sexp_of_contained, x_070);
    }
    function equal(a_071, b_072){
     function _ac_(a_073, b_074){return equal_contained(a_073, b_074);}
     return caml_call4(Core_Map[136], [0], _ac_, a_071, b_072);
    }
    function _E_(pattern_syntax_075){
     function _O_(sizes){
      function _S_(inject){
       function _W_(sizes){
        function ___(attr){
         function _aa_(param){
          var attr = param[2], sizes = param[1];
          return [0, sizes, attr];
         }
         var _ab_ = caml_call2(Bonsai[49][5][7], sizes, attr);
         return caml_call3(Bonsai[49][5][8], _w_, _ab_, _aa_);
        }
        var _$_ = component([0, key[1]], options, inject);
        return caml_call3(Bonsai[49][5][1], _x_, _$_, ___);
       }
       function _X_(a_082, b_083){return equal(a_082, b_083);}
       var
        _Y_ = caml_call2(Bonsai[2][18], sizes, _X_),
        _Z_ = caml_call1(Bonsai[49][1], _Y_);
       return caml_call3(Bonsai[49][5][1], _y_, _Z_, _W_);
      }
      function _T_(param){
       var pattern_syntax_076 = param[2];
       return pattern_syntax_076;
      }
      var
       _U_ = caml_call3(Bonsai[49][5][4], _z_, pattern_syntax_075, _T_),
       _V_ = caml_call1(Bonsai[49][5][6], _U_);
      return caml_call3(Bonsai[49][5][1], _A_, _V_, _S_);
     }
     function _P_(param){
      var pattern_syntax_077 = param[1];
      return pattern_syntax_077;
     }
     var
      _Q_ = caml_call3(Bonsai[49][5][4], _B_, pattern_syntax_075, _P_),
      _R_ = caml_call1(Bonsai[49][5][6], _Q_);
     return caml_call3(Bonsai[49][5][1], _C_, _R_, _O_);
    }
    var _F_ = 0;
    function _G_(param, model, actions){
     function _L_(model, action){
      if(0 === action[0]){
       var v = action[2], k = action[1];
       switch(options){
         case 0:
          return caml_call3(Core_Map[38], model, k, v);
         case 1:
          return caml_call3(Core_Map[38], model, k, [0, v]);
         default: return caml_call3(Core_Map[38], model, k, v);
       }
      }
      var k$0 = action[1];
      switch(options){
        case 0:
         return caml_call2(Core_Map[47], model, k$0);
        case 1:
         var
          _M_ =
            function(param){
             if(! param) return 0;
             var v = param[1][1];
             return [0, [1, v]];
            };
         return caml_call3(Core_Map[42], model, k$0, _M_);
        default:
         var
          _N_ =
            caml_call1(Sexplib0_Sexp_conv[7], cst_BUG_We_should_never_be_rem);
         caml_call2(Core[257], 0, _N_);
         return caml_call2(Core_Map[47], model, k$0);
      }
     }
     return caml_call3(Core_List[20], actions, model, _L_);
    }
    var
     _H_ = caml_call1(Core_Map[4], [0, key[2]]),
     _I_ = [0, function(a_078, b_079){return equal(a_078, b_079);}],
     _J_ = [0, function(x_080){return sexp_of_t$0(key[1], x_080);}],
     _K_ = caml_call7(Bonsai[17], 0, [0, sexp_of_t], _J_, _I_, _H_, _G_, _F_);
    return caml_call3(Bonsai[49][5][1], _D_, _K_, _E_);
   }
   var
    type_id = For_testing[1],
    For_testing$0 = [0, type_id, hook_name, change_sizes];
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_element_size);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_element_size);
   var
    Bonsai_web_ui_element_size_hoo =
      [0,
       Dimensions,
       [0],
       [0, sexp_of_maybe_stale, maybe_stale_of_sexp, equal_maybe_stale],
       component$0,
       component,
       For_testing$0];
   runtime.caml_register_global
    (81, Bonsai_web_ui_element_size_hoo, cst_Bonsai_web_ui_element_size$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_element_size_hooks
//# unitInfo: Requires: Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_element_size = "Bonsai_web_ui_element_size_hooks",
    cst_bonsai_web_ui_element_size = "bonsai_web_ui_element_size_hooks";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_element_size);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_element_size);
   caml_call1
    (Ppx_expect_runtime[1][1],
     "web_ui/element_size_hooks/src/bonsai_web_ui_element_size_hooks.ml");
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_element_size,
     "bonsai_web_ui_element_size_hooks.ml");
   var Expert = [0];
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_element_size);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_element_size);
   var Bonsai_web_ui_element_size_hoo = [0, Expert];
   runtime.caml_register_global
    (11, Bonsai_web_ui_element_size_hoo, cst_Bonsai_web_ui_element_size);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
