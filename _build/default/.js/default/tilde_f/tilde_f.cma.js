// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Tilde_f
//# unitInfo: Requires: Base__Monad, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Tilde_f$0 = "Tilde_f",
    cst_tilde_f$0 = "tilde_f";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Base_Monad = global_data.Base__Monad;
   caml_call1(Ppx_module_timer_runtime[4], cst_Tilde_f$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_tilde_f$0);
   caml_call1(Ppx_expect_runtime[1][1], "src/tilde_f.ml");
   caml_call2(Ppx_inline_test_lib[6], cst_tilde_f$0, "tilde_f.ml");
   var cst_tilde_f = cst_tilde_f$0, cst_Tilde_f = cst_Tilde_f$0;
   function return$0(x, f){return caml_call1(f, x);}
   function bind(t, bind_f, f){
    return caml_call1(t, function(x){return caml_call2(bind_f, x, f);});
   }
   var
    map =
      [0,
       -198771759,
       function(t, map_f, f){
        return caml_call1
                (t, function(x){return caml_call1(f, caml_call1(map_f, x));});
       }],
    include = caml_call1(Base_Monad[4], [0, bind, map, return$0]),
    symbol_bind = include[1],
    symbol_map = include[2],
    Let_syntax = include[3],
    Monad_infix = include[4],
    bind$0 = include[5],
    return$1 = include[6],
    map$0 = include[7],
    join = include[8],
    ignore_m = include[9],
    all = include[10],
    all_unit = include[11];
   function run(t){return caml_call1(t, function(_a_){return _a_;});}
   function of_curried(t, f){
    return caml_call1(t, function(a, b){return caml_call1(f, [0, a, b]);});
   }
   function of_unlabeled(t, f){return caml_call1(t, f);}
   function of_local(t){return t;}
   function of_local_k(f){return f;}
   caml_call1(Ppx_inline_test_lib[7], cst_tilde_f);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Tilde_f);
   var
    Tilde_f =
      [0,
       symbol_bind,
       symbol_map,
       Let_syntax,
       Monad_infix,
       bind$0,
       return$1,
       map$0,
       join,
       ignore_m,
       all,
       all_unit,
       run,
       of_curried,
       of_unlabeled,
       of_local,
       of_local_k];
   runtime.caml_register_global(12, Tilde_f, cst_Tilde_f$0);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJ0aWxkZV9mLmNtYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6WyJyZXR1cm4kMCIsIngiLCJmIiwiYmluZCIsInQiLCJiaW5kX2YiLCJtYXAiLCJtYXBfZiIsInJ1biIsIm9mX2N1cnJpZWQiLCJhIiwiYiIsIm9mX3VubGFiZWxlZCIsIm9mX2xvY2FsIiwib2ZfbG9jYWxfayJdLCJzb3VyY2VzIjpbIi9ob21lL2xpYW0tY2FycGVudGVyLy5vcGFtL3BlcnNvbmFsLXNpdGUvbGliL3RpbGRlX2YvdGlsZGVfZi5tbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0c7Ozs7O0c7Ozs7Ozs7Ozs7Ozs7Ozs7OztZQUtNQSxTQUFPQyxHQUFHQyxHQUFJLE9BQUEsV0FBSkEsR0FBSEQsR0FBVTtZQUNqQkUsS0FBS0MsR0FBS0MsUUFBUUg7SUFBSSxPQUFLLFdBQXRCRSxZQUEyQkgsR0FBSyxPQUFmLFdBQVpJLFFBQXNCSixHQUFkQyxHQUE4QjtHQUFDO0dBRTNDO0lBQU5JOzs7Z0JBRElGLEdBQUtHLE9BQU9MO1FBQUksT0FBSztpQkFBckJFLFlBQTBCSCxHQUFLLE9BQUUsV0FBckJDLEdBQXFCLFdBQTVCSyxPQUFxQk4sSUFBZ0I7T0FBQzs0Q0FEL0NFLE1BRUFHLEtBSEFOOzs7Ozs7Ozs7Ozs7WUFNRlEsSUFBSUosR0FBSSxPQUFLLFdBQVRBLGlCQUFJLGNBQVU7WUFDbEJLLFdBQVdMLEdBQUdGO0lBQUksT0FBSyxXQUFaRSxZQUFpQk0sR0FBRUMsR0FBSyxPQUFFLFdBQXZCVCxPQUFjUSxHQUFFQyxJQUFhO0dBQUM7WUFDNUNDLGFBQWFSLEdBQUdGLEdBQUksT0FBQSxXQUFQRSxHQUFHRixHQUFPO1lBQ3ZCVyxTQUFTVCxHQUFLLE9BQUxBLEVBQU07WUFDZlUsV0FBV1osR0FBSyxPQUFMQSxFQUFNOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O09BSmpCTTtPQUNBQztPQUNBRztPQUNBQztPQUNBQzs7O0UiLCJzb3VyY2VzQ29udGVudCI6WyJvcGVuISBCYXNlXG5cbmluY2x1ZGUgTW9uYWQuTWFrZV9pbmRleGVkIChzdHJ1Y3RcbiAgdHlwZSAoJ2EsICdpLCAnaikgdCA9IGY6KCdhIC0+ICdqKSAtPiAnaVxuXG4gIGxldCByZXR1cm4geCB+ZiA9IGYgeFxuICBsZXQgYmluZCB0IH5mOmJpbmRfZiB+ZiA9IHQgfmY6KGZ1biB4IC0+IGJpbmRfZiB4IH5mKVxuICBsZXQgbWFwIHQgfmY6bWFwX2YgfmYgPSB0IH5mOihmdW4geCAtPiBmIChtYXBfZiB4KSlcbiAgbGV0IG1hcCA9IGBDdXN0b20gbWFwXG5lbmQpXG5cbmxldCBydW4gdCA9IHQgfmY6Rm4uaWRcbmxldCBvZl9jdXJyaWVkIHQgfmYgPSB0IH5mOihmdW4gYSBiIC0+IGYgKGEsIGIpKVxubGV0IG9mX3VubGFiZWxlZCB0IH5mID0gdCBmXG5sZXQgb2ZfbG9jYWwgdCA9ICh0IDogZjooJ2EgLT4gJ2IpIC0+ICdjIDo+IGY6KCdhIC0+ICdiKSAtPiAnYylcbmxldCBvZl9sb2NhbF9rIGYgPSAoZiA6ICdhIC0+IGY6KCdiIC0+ICdjKSAtPiAnZCA6PiAnYSAtPiBmOignYiAtPiAnYykgLT4gJ2QpXG4iXX0=
