// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Bonsai_web_ui_file
//# unitInfo: Requires: Bonsai, Core, Core__Bigstring, Core__Error, Core__Filename, Core__Int, Core__Option, Core__Or_error, Core__Percent, Core__Queue, Core__Result, Core__String, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Ppx_string_runtime, Sexplib0__Sexp_conv, Sexplib0__Sexp_conv_error, Sexplib0__Sexp_conv_record, Ui_effect, Ui_incr
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Aborted = "Aborted",
    cst_Bonsai_web_ui_file$0 = "Bonsai_web_ui_file",
    cst_Error = "Error",
    cst_aborted = "aborted",
    cst_bonsai_web_ui_file$0 = "bonsai_web_ui_file",
    cst_error = "error",
    cst_loaded$0 = "loaded",
    cst_total$0 = "total",
    cst_web_ui_file_src_bonsai_web = "web_ui/file/src/bonsai_web_ui_file.ml",
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace,
    caml_ml_string_length = runtime.caml_ml_string_length,
    caml_string_notequal = runtime.caml_string_notequal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   function caml_call6(f, a0, a1, a2, a3, a4, a5){
    return (f.l >= 0 ? f.l : f.l = f.length) == 6
            ? f(a0, a1, a2, a3, a4, a5)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5]);
   }
   function caml_call7(f, a0, a1, a2, a3, a4, a5, a6){
    return (f.l >= 0 ? f.l : f.l = f.length) == 7
            ? f(a0, a1, a2, a3, a4, a5, a6)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst = ">",
    error_source_006 = "web_ui/file/src/bonsai_web_ui_file.ml.Progress.t",
    error_source_068 = "web_ui/file/src/bonsai_web_ui_file.ml.Read_error.t",
    Assert_failure = global_data.Assert_failure,
    Core_Option = global_data.Core__Option,
    Bonsai = global_data.Bonsai,
    Ui_incr = global_data.Ui_incr,
    Core_Filename = global_data.Core__Filename,
    Ui_effect = global_data.Ui_effect,
    Sexplib0_Sexp_conv_error = global_data.Sexplib0__Sexp_conv_error,
    Sexplib0_Sexp_conv_record = global_data.Sexplib0__Sexp_conv_record,
    Core_Bigstring = global_data.Core__Bigstring,
    Core_Or_error = global_data.Core__Or_error,
    Core_Result = global_data.Core__Result,
    Core_Int = global_data.Core__Int,
    Core_Queue = global_data.Core__Queue,
    Core = global_data.Core,
    Sexplib0_Sexp_conv = global_data.Sexplib0__Sexp_conv,
    Ppx_string_runtime = global_data.Ppx_string_runtime,
    Core_String = global_data.Core__String,
    Core_Error = global_data.Core__Error,
    Core_Percent = global_data.Core__Percent,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_file$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_file$0);
   caml_call1(Ppx_expect_runtime[1][1], cst_web_ui_file_src_bonsai_web);
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_file$0,
     "bonsai_web_ui_file.ml");
   var
    _M_ = [0, cst_web_ui_file_src_bonsai_web, 341, 4],
    _P_ = [0, cst_web_ui_file_src_bonsai_web, 341, 4],
    _N_ = [0, [0, cst_web_ui_file_src_bonsai_web, 341, 9723, 9727]],
    _O_ = [0, [0, cst_web_ui_file_src_bonsai_web, 341, 9723, 9727]],
    _Q_ = [0, cst_web_ui_file_src_bonsai_web, 342, 9747, 9753],
    _R_ = [0, [0, cst_web_ui_file_src_bonsai_web, 341, 9723, 9727]],
    _K_ = [0, [0, cst_web_ui_file_src_bonsai_web, 335, 9591, 9595]],
    _L_ = [0, [0, cst_web_ui_file_src_bonsai_web, 334, 9549, 9553]],
    _I_ = [0, [0, cst_web_ui_file_src_bonsai_web, 324, 9210, 9220]],
    _J_ = [0, [0, cst_web_ui_file_src_bonsai_web, 311, 8485, 8489]],
    _w_ = [0, [0, cst_web_ui_file_src_bonsai_web, 286, 7623, 7627]],
    _x_ = [0, [0, cst_web_ui_file_src_bonsai_web, 286, 7623, 7627]],
    _y_ = [0, [0, cst_web_ui_file_src_bonsai_web, 286, 7623, 7627]],
    _z_ = [0, [0, cst_web_ui_file_src_bonsai_web, 282, 7480, 7484]],
    _A_ = [0, [0, cst_web_ui_file_src_bonsai_web, 282, 7480, 7484]],
    _B_ = [0, [0, cst_web_ui_file_src_bonsai_web, 283, 7497, 7503]],
    _C_ = [0, [0, cst_web_ui_file_src_bonsai_web, 282, 7480, 7484]],
    _D_ = [0, [0, cst_web_ui_file_src_bonsai_web, 273, 7177, 7181]],
    _E_ = [0, [0, cst_web_ui_file_src_bonsai_web, 273, 7177, 7181]],
    _F_ = [0, [0, cst_web_ui_file_src_bonsai_web, 273, 7177, 7181]],
    _G_ = [0, [0, cst_web_ui_file_src_bonsai_web, 273, 7177, 7181]],
    _H_ = [0, [0, cst_web_ui_file_src_bonsai_web, 273, 7177, 7181]],
    _q_ = [0, cst_web_ui_file_src_bonsai_web, 266, 6],
    _t_ = [0, cst_web_ui_file_src_bonsai_web, 266, 6],
    _r_ = [0, [0, cst_web_ui_file_src_bonsai_web, 266, 6965, 6971]],
    _s_ = [0, [0, cst_web_ui_file_src_bonsai_web, 266, 6965, 6971]],
    _u_ = [0, cst_web_ui_file_src_bonsai_web, 267, 6988, 6996],
    _v_ = [0, [0, cst_web_ui_file_src_bonsai_web, 266, 6965, 6971]],
    _o_ = [0, "Start_read"],
    _p_ = [0, "Set_status"],
    _k_ = [0, "status"],
    _l_ = [0, "file_read"],
    _m_ = [0, "Reading"],
    _n_ = [0, "Before_first_read"],
    _h_ = [0, "Starting"],
    _i_ = [0, "In_progress"],
    _j_ = [0, "Complete"],
    _g_ = [1, 0],
    _f_ = [0, cst_web_ui_file_src_bonsai_web, 158, 8],
    cst_Bonsai_web_ui_file_Test_da =
      "Bonsai_web_ui_file.Test_data.feed: already closed",
    _e_ = [0, cst_web_ui_file_src_bonsai_web, 50, 21],
    cst_file = "<file ",
    _c_ = [0, cst_Error],
    _d_ = [0, cst_Aborted],
    _a_ = [0, cst_total$0],
    _b_ = [0, cst_loaded$0],
    cst_total = cst_total$0,
    cst_loaded = cst_loaded$0,
    cst_bonsai_web_ui_file = cst_bonsai_web_ui_file$0,
    cst_Bonsai_web_ui_file = cst_Bonsai_web_ui_file$0;
   function compare(a_001, b_002){
    if(a_001 === b_002) return 0;
    var n = caml_call2(Core[382], a_001[1], b_002[1]);
    return 0 === n ? caml_call2(Core[382], a_001[2], b_002[2]) : n;
   }
   function equal(a_003, b_004){
    if(a_003 === b_004) return 1;
    var _bT_ = caml_call2(Core[384], a_003[1], b_004[1]);
    return _bT_ ? caml_call2(Core[384], a_003[2], b_004[2]) : _bT_;
   }
   function t_of_sexp(x_007){
    function _bQ_(param){
     var total = param[2][1], loaded = param[1];
     return [0, loaded, total];
    }
    var _bR_ = 0;
    function _bS_(param){
     return caml_string_notequal(param, cst_loaded$0)
             ? caml_string_notequal(param, cst_total$0) ? -1 : 1
             : 0;
    }
    return caml_call6
            (Sexplib0_Sexp_conv_record[3],
             error_source_006,
             [0, cst_loaded, 1, Core[390], [0, cst_total, 1, Core[390], 0]],
             _bS_,
             _bR_,
             _bQ_,
             x_007);
   }
   function sexp_of_t(param){
    var
     total_011 = param[2],
     loaded_009 = param[1],
     arg_012 = caml_call1(Core[389], total_011),
     bnds_008 = [0, [1, [0, _a_, [0, arg_012, 0]]], 0],
     arg_010 = caml_call1(Core[389], loaded_009),
     bnds_008$0 = [0, [1, [0, _b_, [0, arg_010, 0]]], bnds_008];
    return [1, bnds_008$0];
   }
   function to_percentage(param){
    var total = param[2], loaded = param[1];
    return caml_call1(Core_Percent[76], loaded / total);
   }
   var Progress = [0, compare, equal, t_of_sexp, sexp_of_t, to_percentage];
   function compare$0(a_058, b_059){
    if(a_058 === b_059) return 0;
    if(! a_058) return b_059 ? -1 : 0;
    if(! b_059) return 1;
    var b_061 = b_059[1], a_060 = a_058[1];
    return caml_call2(Core_Error[1], a_060, b_061);
   }
   function equal$0(a_062, b_063){
    if(a_062 === b_063) return 1;
    if(! a_062) return b_063 ? 0 : 1;
    if(! b_063) return 0;
    var b_065 = b_063[1], a_064 = a_062[1];
    return caml_call2(Core_Error[3], a_064, b_065);
   }
   function t_of_sexp$0(sexp_070){
    a:
    {
     if(0 === sexp_070[0]){
      var _bN_ = sexp_070[1];
      b:
      if(caml_string_notequal(_bN_, cst_Aborted)){
       if(caml_string_notequal(_bN_, cst_Error)){
        if(! caml_string_notequal(_bN_, cst_aborted)) break b;
        if(caml_string_notequal(_bN_, cst_error)) break a;
       }
       return caml_call2
               (Sexplib0_Sexp_conv_error[9], error_source_068, sexp_070);
      }
      return 0;
     }
     var _bO_ = sexp_070[1];
     if(! _bO_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[11], error_source_068, sexp_070);
     var _bP_ = _bO_[1];
     if(0 !== _bP_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[10], error_source_068, sexp_070);
     var tag_071 = _bP_[1];
     b:
     if(caml_string_notequal(tag_071, cst_Aborted)){
      if(caml_string_notequal(tag_071, cst_Error)){
       if(! caml_string_notequal(tag_071, cst_aborted)) break b;
       if(caml_string_notequal(tag_071, cst_error)) break a;
      }
      var sexp_args_072 = _bO_[2];
      if(sexp_args_072 && ! sexp_args_072[2]){
       var
        arg0_073 = sexp_args_072[1],
        res0_074 = caml_call1(Core_Error[8], arg0_073);
       return [0, res0_074];
      }
      return caml_call3
              (Sexplib0_Sexp_conv_error[8],
               error_source_068,
               tag_071,
               sexp_070);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[7], error_source_068, sexp_070);
    }
    return caml_call2
            (Sexplib0_Sexp_conv_error[12], error_source_068, sexp_070);
   }
   function sexp_of_t$0(param){
    if(! param) return _d_;
    var arg0_075 = param[1], res0_076 = caml_call1(Core_Error[9], arg0_075);
    return [1, [0, _c_, [0, res0_076, 0]]];
   }
   var Read_error = [0, compare$0, equal$0, t_of_sexp$0, sexp_of_t$0];
   function abort(r){return r[2];}
   function result(r){return r[1];}
   function filename(r){return r[2];}
   function create(read, filename){return [0, read, filename];}
   function sexp_of_t$1(t){
    var
     _bJ_ = [0, caml_call1(Ppx_string_runtime[1][2], cst), 0],
     _bK_ = caml_call1(Core_String[137], t[2]),
     _bL_ = [0, caml_call1(Ppx_string_runtime[1][3], _bK_), _bJ_],
     _bM_ = [0, caml_call1(Ppx_string_runtime[1][2], cst_file), _bL_];
    return [0, caml_call1(Ppx_string_runtime[1][4], _bM_)];
   }
   function read(opt, t){
    if(opt)
     var sth = opt[1], on_progress = sth;
    else
     var on_progress = function(progress){return Ui_effect[1];};
    return caml_call1(t[1], on_progress);
   }
   function contents(t){
    function _bG_(param){
     if(0 === param[0]){var contents = param[1]; return [0, contents];}
     var match = param[1];
     if(! match)
      throw caml_maybe_attach_backtrace([0, Assert_failure, _e_], 1);
     var e = match[1];
     return [1, e];
    }
    var _bH_ = read(0, t), _bI_ = caml_call2(Ui_effect[13][2], _bH_, result);
    return caml_call2(Ui_effect[13][4][3], _bI_, _bG_);
   }
   var Expert = [0, create];
   function iter(t, f){
    if(typeof t === "number") return 0;
    var callbacks = t[1];
    return caml_call1(f, callbacks);
   }
   function create_stream(filename, total_bytes){
    return [0,
            filename,
            [1, caml_call2(Core_Queue[66], 0, 0), total_bytes],
            0];
   }
   function create_static(filename, contents){
    return [0,
            filename,
            [0, [0, caml_call3(Core_Bigstring[14], 0, 0, contents)]],
            0];
   }
   function read_status(t){
    var _bF_ = t[3];
    return typeof _bF_ === "number"
            ? _bF_ ? -216426513 : -166948672
            : -801955028;
   }
   function feed_exn(t, chunk){
    var match = t[2];
    if(0 === match[0]){
     var
      _bz_ = caml_call1(Sexplib0_Sexp_conv[7], cst_Bonsai_web_ui_file_Test_da);
     return caml_call1(Core[261], _bz_);
    }
    var total_bytes = match[2], chunks = match[1];
    caml_call2(Core_Queue[43], chunks, chunk);
    var _bA_ = caml_ml_string_length;
    function _bB_(_bE_, _bD_){return _bE_ + _bD_ | 0;}
    var
     progress =
       [0,
        caml_call3(Core_Queue[25], [0, Core_Int[59], _bB_], chunks, _bA_),
        total_bytes];
    function _bC_(read){return caml_call1(read[1], progress);}
    return iter(t[3], _bC_);
   }
   function close(t){
    var match = t[2];
    if(0 === match[0]) return 0;
    var chunks = match[1], _br_ = caml_ml_string_length;
    function _bs_(_by_, _bx_){return _by_ + _bx_ | 0;}
    var
     _bt_ = caml_call3(Core_Queue[25], [0, Core_Int[59], _bs_], chunks, _br_),
     result = caml_call1(Core_Bigstring[121], _bt_);
    function _bu_(dst_pos, src){
     caml_call5
      (Core_Bigstring[29][1],
       src,
       0,
       result,
       dst_pos,
       caml_ml_string_length(src));
     return dst_pos + caml_ml_string_length(src) | 0;
    }
    var
     len = caml_call3(Core_Queue[19], chunks, 0, _bu_),
     _bv_ = caml_call1(Core_Bigstring[21], result);
    if(! caml_call2(Core[90], _bv_, len))
     throw caml_maybe_attach_backtrace([0, Assert_failure, _f_], 1);
    var result$0 = [0, result];
    t[2] = [0, result$0];
    function _bw_(read){return caml_call1(read[2], result$0);}
    return iter(t[3], _bw_);
   }
   function close_error(t, error){
    if(0 === t[2][0]) return 0;
    var result = [1, error];
    t[2] = [0, result];
    function _bq_(read){return caml_call1(read[2], result);}
    return iter(t[3], _bq_);
   }
   function create$0(test_data){
    function read(on_progress){
     var result_var = caml_call1(Ui_effect[23][1][1], 0), _bd_ = 0;
     function _be_(param){
      function _bk_(result){
       function _bo_(e){return [0, e];}
       var _bp_ = caml_call2(Core_Result[47], result, _bo_);
       return caml_call2(Ui_effect[23][1][3], result_var, _bp_);
      }
      var
       read =
         [0,
          function(progress){
           var _bn_ = caml_call1(on_progress, progress);
           return caml_call1(Ui_effect[21][2], _bn_);
          },
          _bk_],
       match = test_data[2];
      if(0 === match[0]){
       var result = match[1];
       caml_call1(read[2], result);
      }
      else{
       var
        total_bytes = match[2],
        chunks = match[1],
        _bh_ = caml_ml_string_length,
        _bi_ = function(_bm_, _bl_){return _bm_ + _bl_ | 0;},
        _bj_ =
          [0,
           caml_call3(Core_Queue[25], [0, Core_Int[59], _bi_], chunks, _bh_),
           total_bytes];
       caml_call1(read[1], _bj_);
      }
      test_data[3] = [0, read];
      return result_var;
     }
     var result = caml_call2(Ui_effect[23][2], _be_, _bd_), _bf_ = 0;
     function _bg_(param){
      test_data[3] = 1;
      return caml_call2(Ui_effect[23][1][3], result_var, _g_);
     }
     var abort = caml_call2(Ui_effect[17], _bg_, _bf_);
     return [0, result, abort];
    }
    var _bc_ = test_data[1];
    return [0, caml_call1(Ui_effect[17], read), _bc_];
   }
   var
    sexp_of_t$2 = Sexplib0_Sexp_conv[23],
    sexp_of_t$3 = Sexplib0_Sexp_conv[23];
   function sexp_of_t$4(param){
    if(typeof param === "number") return _h_;
    if(0 === param[0]){
     var arg0_109 = param[1], res0_110 = caml_call1(Progress[4], arg0_109);
     return [1, [0, _i_, [0, res0_110, 0]]];
    }
    var
     arg0_111 = param[1],
     res0_112 = caml_call2(Core_Or_error[17], Core_Bigstring[6], arg0_111);
    return [1, [0, _j_, [0, res0_112, 0]]];
   }
   function sexp_of_t$5(param){
    if(! param) return _n_;
    var
     status_126 = param[2],
     file_read_124 = param[1],
     arg_127 = sexp_of_t$4(status_126),
     bnds_123 = [0, [1, [0, _k_, [0, arg_127, 0]]], 0],
     arg_125 = caml_call1(sexp_of_t$3, file_read_124),
     bnds_123$0 = [0, [1, [0, _l_, [0, arg_125, 0]]], bnds_123];
    return [1, [0, _m_, bnds_123$0]];
   }
   function sexp_of_t$6(param){
    if(0 === param[0]){
     var arg0_148 = param[1], res0_149 = caml_call1(sexp_of_t$3, arg0_148);
     return [1, [0, _o_, [0, res0_149, 0]]];
    }
    var arg0_150 = param[1], res0_151 = sexp_of_t$4(arg0_150);
    return [1, [0, _p_, [0, res0_151, 0]]];
   }
   function apply_action(context, t, action){
    if(0 !== action[0]){
     var status = action[1];
     if(! t) return t;
     var file_read$0 = t[1];
     return [0, file_read$0, status];
    }
    var file_read = action[1];
    if(t){
     var old_file_read = t[1];
     caml_call2(Bonsai[16][2], context, old_file_read[2]);
    }
    return [0, file_read, 0];
   }
   function create_helper(file){
    function _as_(pattern_syntax_154){
     function _az_(state){
      function _aD_(inject){
       function _aK_(pattern_syntax_159){
        function _aW_(param){
         function _a0_(pattern_syntax_161){
          function _a__(param){return caml_call1(Bonsai[6], state);}
          function _a$_(param){return 0;}
          var
           _ba_ = caml_call3(Bonsai[49][5][4], _w_, pattern_syntax_161, _a$_),
           _bb_ = caml_call1(Bonsai[49][5][6], _ba_);
          return caml_call3(Bonsai[49][5][1], _x_, _bb_, _a__);
         }
         function _a1_(inject, file){
          function _a5_(file_read){
           function _a7_(param){
            function _a9_(param){
             if(0 === param[0]){
              var contents = param[1];
              return caml_call1(inject, [1, [1, [0, contents]]]);
             }
             var match = param[1];
             if(! match) return caml_call1(Ui_effect[13][1], 0);
             var e = match[1];
             return caml_call1(inject, [1, [1, [1, e]]]);
            }
            return caml_call2(Ui_effect[13][4][2], file_read[1], _a9_);
           }
           var _a8_ = caml_call1(inject, [0, file_read]);
           return caml_call2(Ui_effect[13][4][2], _a8_, _a7_);
          }
          var
           _a6_ =
             read
              ([0,
                function(progress){
                 return caml_call1(inject, [1, [0, progress]]);
                }],
               file);
          return caml_call2(Ui_effect[13][4][2], _a6_, _a5_);
         }
         var _a2_ = caml_call3(Bonsai[49][5][4], 0, inject, _a1_);
         function _a3_(a_162, b_163){return a_162 === b_163 ? 1 : 0;}
         var
          _a4_ = caml_call4(Bonsai[44][1], [0, sexp_of_t$2], _a3_, file, _a2_);
         return caml_call3(Bonsai[49][5][1], _y_, _a4_, _a0_);
        }
        function _aX_(param){return 0;}
        var
         _aY_ = caml_call3(Bonsai[49][5][4], _z_, pattern_syntax_159, _aX_),
         _aZ_ = caml_call1(Bonsai[49][5][6], _aY_);
        return caml_call3(Bonsai[49][5][1], _A_, _aZ_, _aW_);
       }
       function _aL_(abort){
        return caml_call4(Bonsai[44][3], 0, [0, abort], 0, 0);
       }
       function _aH_(pattern_syntax_152){
        function _aN_(param){
         if(0 === param) return caml_call1(Bonsai[7], Ui_effect[1]);
         if(1 !== param)
          throw caml_maybe_attach_backtrace([0, Assert_failure, _t_], 1);
         function _aR_(file_read){
          var _aV_ = caml_call2(Bonsai[49][2], file_read, abort);
          return caml_call1(Bonsai[6], _aV_);
         }
         function _aS_(param){
          if(! param)
           throw caml_maybe_attach_backtrace([0, Assert_failure, _q_], 1);
          var pattern_syntax_153 = param[1];
          return pattern_syntax_153;
         }
         var
          _aT_ = caml_call3(Bonsai[49][5][4], _r_, pattern_syntax_152, _aS_),
          _aU_ = caml_call1(Bonsai[49][5][6], _aT_);
         return caml_call3(Bonsai[49][5][1], _s_, _aU_, _aR_);
        }
        var _aO_ = 2;
        function _aP_(param){return param ? 1 : 0;}
        var _aQ_ = caml_call3(Bonsai[49][5][4], 0, pattern_syntax_152, _aP_);
        return caml_call4(Bonsai[49][5][3], _u_, _aQ_, _aO_, _aN_);
       }
       var
        _aI_ = caml_call1(Bonsai[49][5][6], state),
        _aJ_ = caml_call3(Bonsai[49][5][1], _v_, _aI_, _aH_),
        _aM_ = caml_call3(Bonsai[49][5][1], _B_, _aJ_, _aL_);
       return caml_call3(Bonsai[49][5][1], _C_, _aM_, _aK_);
      }
      function _aE_(param){
       var pattern_syntax_155 = param[2];
       return pattern_syntax_155;
      }
      var
       _aF_ = caml_call3(Bonsai[49][5][4], _D_, pattern_syntax_154, _aE_),
       _aG_ = caml_call1(Bonsai[49][5][6], _aF_);
      return caml_call3(Bonsai[49][5][1], _E_, _aG_, _aD_);
     }
     function _aA_(param){
      var pattern_syntax_156 = param[1];
      return pattern_syntax_156;
     }
     var
      _aB_ = caml_call3(Bonsai[49][5][4], _F_, pattern_syntax_154, _aA_),
      _aC_ = caml_call1(Bonsai[49][5][6], _aB_);
     return caml_call3(Bonsai[49][5][1], _G_, _aC_, _az_);
    }
    var
     _at_ = 0,
     _au_ = 0,
     _av_ =
       [0,
        function(a_157, b_158){
         if(a_157 === b_158) return 1;
         if(! a_157) return b_158 ? 0 : 1;
         if(! b_158) return 0;
         var _ay_ = a_157[1] === b_158[1] ? 1 : 0;
         if(! _ay_) return _ay_;
         var b_088 = b_158[2], a_087 = a_157[2];
         if(a_087 === b_088) return 1;
         if(typeof a_087 === "number")
          return typeof b_088 === "number" ? 1 : 0;
         if(0 === a_087[0]){
          var a_089 = a_087[1];
          if(typeof b_088 !== "number"){
           if(0 !== b_088[0]) return 0;
           var b_090 = b_088[1];
           return caml_call2(Progress[2], a_089, b_090);
          }
         }
         else{
          var a_091 = a_087[1];
          if(typeof b_088 !== "number"){
           if(0 === b_088[0]) return 0;
           var
            b_092 = b_088[1],
            _ax_ =
              function(a_093, b_094){
               return caml_call2(Core_Bigstring[12], a_093, b_094);
              };
           return caml_call3(Core_Or_error[12], _ax_, a_091, b_092);
          }
         }
         return 0;
        }],
     _aw_ =
       caml_call7
        (Bonsai[17],
         0,
         [0, sexp_of_t$5],
         [0, sexp_of_t$6],
         _av_,
         _au_,
         apply_action,
         _at_);
    return caml_call3(Bonsai[49][5][1], _H_, _aw_, _as_);
   }
   function create_multiple(files){
    function _ah_(file_states){
     var _ao_ = Ui_incr[82][4];
     function _ap_(_ar_){return _ar_;}
     function _aq_(eta){return caml_call4(_ao_, 0, 0, eta, _ap_);}
     return caml_call2(Bonsai[48][2], file_states, _aq_);
    }
    function _ai_(filename, file){
     function _ak_(reading){
      function _am_(param){
       if(! param) return 0;
       var status = param[2];
       return [0, status];
      }
      var _an_ = caml_call3(Bonsai[49][5][4], 0, reading, _am_);
      return caml_call1(Bonsai[6], _an_);
     }
     var _al_ = create_helper(file);
     return caml_call3(Bonsai[49][5][1], _I_, _al_, _ak_);
    }
    var
     _aj_ =
       caml_call3
        (Bonsai[34], [0, Core_Filename[2], Core_Filename[58]], files, _ai_);
    return caml_call3(Bonsai[49][5][1], _J_, _aj_, _ah_);
   }
   function create_single(file){
    function _ac_(state){
     function _ae_(param){
      var state = param[2], file = param[1];
      if(state) var status = state[2], _ag_ = status; else var _ag_ = 0;
      return [0, file[2], _ag_];
     }
     var _af_ = caml_call2(Bonsai[49][5][7], file, state);
     return caml_call3(Bonsai[49][5][8], _K_, _af_, _ae_);
    }
    var _ad_ = create_helper(file);
    return caml_call3(Bonsai[49][5][1], _L_, _ad_, _ac_);
   }
   function create_single_opt(file){
    function _S_(pattern_syntax_173){
     function _U_(param){
      if(0 === param) return caml_call1(Bonsai[7], 0);
      if(1 !== param)
       throw caml_maybe_attach_backtrace([0, Assert_failure, _P_], 1);
      function _Y_(file){
       var _aa_ = Core_Option[58], _ab_ = create_single(file);
       return caml_call2(Bonsai[3][2], _ab_, _aa_);
      }
      function _Z_(param){
       if(! param)
        throw caml_maybe_attach_backtrace([0, Assert_failure, _M_], 1);
       var pattern_syntax_174 = param[1];
       return pattern_syntax_174;
      }
      var
       ___ = caml_call3(Bonsai[49][5][4], _N_, pattern_syntax_173, _Z_),
       _$_ = caml_call1(Bonsai[49][5][6], ___);
      return caml_call3(Bonsai[49][5][1], _O_, _$_, _Y_);
     }
     var _V_ = 2;
     function _W_(param){return param ? 1 : 0;}
     var _X_ = caml_call3(Bonsai[49][5][4], 0, pattern_syntax_173, _W_);
     return caml_call4(Bonsai[49][5][3], _Q_, _X_, _V_, _U_);
    }
    var _T_ = caml_call1(Bonsai[49][5][6], file);
    return caml_call3(Bonsai[49][5][1], _R_, _T_, _S_);
   }
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_file);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_file);
   var
    Bonsai_web_ui_file =
      [0,
       sexp_of_t$1,
       filename,
       contents,
       Progress,
       Read_error,
       [0, result, abort],
       read,
       [0,
        [0, sexp_of_t$4],
        create_single,
        create_single_opt,
        create_multiple],
       [0,
        [0,
         create_static,
         create_stream,
         feed_exn,
         close,
         close_error,
         read_status],
        create$0],
       Expert];
   runtime.caml_register_global
    (144, Bonsai_web_ui_file, cst_Bonsai_web_ui_file$0);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
