// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Bonsai_web_ui_extendy
//# unitInfo: Requires: Bonsai, Bonsai_web, Core, Core__Fn, Core__Int, Core__List, Core__Map, Core__Tuple, Incr_map, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Sexplib0__Sexp_conv_record
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_extendy$0 = "Bonsai_web_ui_extendy",
    cst_bonsai_web_ui_extendy$0 = "bonsai_web_ui_extendy",
    cst_web_ui_extendy_src_bonsai_ =
      "web_ui/extendy/src/bonsai_web_ui_extendy.ml";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call7(f, a0, a1, a2, a3, a4, a5, a6){
    return (f.l >= 0 ? f.l : f.l = f.length) == 7
            ? f(a0, a1, a2, a3, a4, a5, a6)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Bonsai_web = global_data.Bonsai_web,
    Bonsai = global_data.Bonsai,
    Core_Tuple = global_data.Core__Tuple,
    Incr_map = global_data.Incr_map,
    Core_Map = global_data.Core__Map,
    Core_Int = global_data.Core__Int,
    Core_List = global_data.Core__List,
    Core_Fn = global_data.Core__Fn,
    Core = global_data.Core;
   global_data.Sexplib0__Sexp_conv_record;
   var
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_extendy$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_extendy$0);
   caml_call1(Ppx_expect_runtime[1][1], cst_web_ui_extendy_src_bonsai_);
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_extendy$0,
     "bonsai_web_ui_extendy.ml");
   var
    _l_ = [0, [0, cst_web_ui_extendy_src_bonsai_, 58, 1445, 1453]],
    _m_ = [0, [0, cst_web_ui_extendy_src_bonsai_, 57, 1388, 1396]],
    _i_ = [0, 1],
    _j_ = [0, [0, cst_web_ui_extendy_src_bonsai_, 68, 1798, 1800]],
    _k_ = [0, [0, cst_web_ui_extendy_src_bonsai_, 64, 1669, 1671]],
    _n_ = [0, [0, cst_web_ui_extendy_src_bonsai_, 51, 1209, 1211]],
    _o_ = [0, [0, cst_web_ui_extendy_src_bonsai_, 50, 1137, 1139]],
    _p_ = [0, [0, cst_web_ui_extendy_src_bonsai_, 50, 1137, 1139]],
    _q_ = [0, [0, cst_web_ui_extendy_src_bonsai_, 50, 1137, 1139]],
    _r_ = [0, [0, cst_web_ui_extendy_src_bonsai_, 50, 1137, 1139]],
    _s_ = [0, [0, cst_web_ui_extendy_src_bonsai_, 50, 1137, 1139]],
    _c_ = [0, "how_many"],
    _d_ = [0, "Add"],
    _e_ = [0, "Remove"],
    _a_ = [0, "count"],
    _b_ = [0, "data"],
    cst_bonsai_web_ui_extendy = cst_bonsai_web_ui_extendy$0,
    cst_Bonsai_web_ui_extendy = cst_Bonsai_web_ui_extendy$0;
   function sexp_of_t(param){
    var
     count_011 = param[2],
     data_009 = param[1],
     arg_012 = caml_call1(Core[389], count_011),
     bnds_008 = [0, [1, [0, _a_, [0, arg_012, 0]]], 0],
     arg_010 = caml_call2(Core_Int[98][45], Core[620], data_009),
     bnds_008$0 = [0, [1, [0, _b_, [0, arg_010, 0]]], bnds_008];
    return [1, bnds_008$0];
   }
   var default$0 = [0, Core_Int[98][5], 0];
   function add_one(model){
    var key = model[2];
    return [0, caml_call3(Core_Map[37], model[1], key, 0), key + 1 | 0];
   }
   function sexp_of_t$0(param){
    if(0 === param[0]){
     var
      how_many_014 = param[1],
      arg_015 = caml_call1(Core[389], how_many_014),
      bnds_013 = [0, [1, [0, _c_, [0, arg_015, 0]]], 0];
     return [1, [0, _d_, bnds_013]];
    }
    var arg0_016 = param[1], res0_017 = caml_call1(Core[389], arg0_016);
    return [1, [0, _e_, [0, res0_017, 0]]];
   }
   var _f_ = 0;
   function _g_(param, model, _ag_){
    if(0 === _ag_[0]){
     var how_many = _ag_[1];
     return caml_call3(Core_Fn[4], how_many, add_one, model);
    }
    var key = _ag_[1], _af_ = model[2];
    return [0, caml_call2(Core_Map[47], model[1], key), _af_];
   }
   var
    _h_ =
      [0,
       function(a_018, b_019){
        if(a_018 === b_019) return 1;
        var _ab_ = b_019[1], _ac_ = a_018[1];
        function _ad_(a_003, b_004){
         return caml_call2(Core[615], a_003, b_004);
        }
        var _ae_ = caml_call3(Core_Int[98][4], _ad_, _ac_, _ab_);
        return _ae_ ? caml_call2(Core[384], a_018[2], b_019[2]) : _ae_;
       }],
    state_component =
      caml_call7
       (Bonsai[17],
        0,
        [0, sexp_of_t],
        [0, sexp_of_t$0],
        _h_,
        default$0,
        _g_,
        _f_);
   function component(t, wrap_remove){
    function _z_(pattern_syntax_020){
     function _A_(inject_action){
      function _E_(data){
       function _I_(map){
        function _S_(contents_map){
         function _W_(param){
          var
           match = param[2],
           inject_action = match[2],
           map = match[1],
           contents = param[1],
           append = caml_call1(inject_action, _i_);
          function remove(id){return caml_call1(inject_action, [1, id]);}
          function set_length(length){
           var difference = length - caml_call1(Core_Map[35], map) | 0;
           switch(caml_call1(Core_Int[11], difference)){
             case 0:
              var
               _Z_ = function(_aa_){return _aa_[2];},
               ___ = caml_call1(Core_Map[80], map),
               effects_in_map = caml_call2(Core_List[62], ___, _Z_),
               _$_ =
                 caml_call2(Core_List[134], effects_in_map, - difference | 0);
              return [0, Bonsai_web[5][2], _$_];
             case 1:
              return Bonsai_web[5][1];
             default: return caml_call1(inject_action, [0, difference]);
           }
          }
          return [0, contents, append, set_length, remove];
         }
         var
          _X_ = caml_call2(Bonsai[49][5][7], map, inject_action),
          _Y_ = caml_call2(Bonsai[49][5][7], contents_map, _X_);
         return caml_call3(Bonsai[49][5][8], _j_, _Y_, _W_);
        }
        function _T_(map){
         var _V_ = caml_call1(Core_Tuple[1][8], wrap_remove);
         return caml_call4(Incr_map[5], 0, 0, map, _V_);
        }
        var _U_ = caml_call2(Bonsai[48][2], map, _T_);
        return caml_call3(Bonsai[49][5][1], _k_, _U_, _S_);
       }
       function _J_(key, data){
        function _L_(result){
         function _N_(param){
          var
           _Q_ = param[2],
           inject_action = _Q_[2],
           key = _Q_[1],
           match = param[1],
           reset = match[2],
           out = match[1],
           _R_ = [0, reset, [0, caml_call1(inject_action, [1, key]), 0]],
           inject_remove = [0, Bonsai_web[5][2], _R_];
          return [0, out, inject_remove];
         }
         var
          _O_ = caml_call2(Bonsai[49][5][7], key, inject_action),
          _P_ = caml_call2(Bonsai[49][5][7], result, _O_);
         return caml_call3(Bonsai[49][5][8], _l_, _P_, _N_);
        }
        var _M_ = caml_call1(Bonsai[39], t);
        return caml_call3(Bonsai[49][5][1], _m_, _M_, _L_);
       }
       var
        _K_ =
          caml_call3(Bonsai[34], [0, Core_Int[77], Core_Int[97]], data, _J_);
       return caml_call3(Bonsai[49][5][1], _n_, _K_, _I_);
      }
      function _F_(param){
       var pattern_syntax_021 = param[1][1];
       return pattern_syntax_021;
      }
      var
       _G_ = caml_call3(Bonsai[49][5][4], _o_, pattern_syntax_020, _F_),
       _H_ = caml_call1(Bonsai[49][5][6], _G_);
      return caml_call3(Bonsai[49][5][1], _p_, _H_, _E_);
     }
     function _B_(param){
      var pattern_syntax_022 = param[2];
      return pattern_syntax_022;
     }
     var
      _C_ = caml_call3(Bonsai[49][5][4], _q_, pattern_syntax_020, _B_),
      _D_ = caml_call1(Bonsai[49][5][6], _C_);
     return caml_call3(Bonsai[49][5][1], _r_, _D_, _A_);
    }
    return caml_call3(Bonsai[49][5][1], _s_, state_component, _z_);
   }
   function component$0(t){
    return component(t, function(a, param){return a;});
   }
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_extendy);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_extendy);
   var
    _t_ = Core_Int[99],
    _u_ = _t_[2],
    _v_ = _t_[1],
    _w_ = Core_Int[98],
    _x_ = _w_[2],
    _y_ = _w_[1],
    Bonsai_web_ui_extendy =
      [0,
       [0,
        Core_Int[76],
        Core_Int[77],
        Core_Int[81],
        Core_Int[82],
        Core_Int[83],
        Core_Int[84],
        Core_Int[85],
        Core_Int[86],
        Core_Int[87],
        Core_Int[88],
        Core_Int[89],
        Core_Int[90],
        Core_Int[91],
        Core_Int[92],
        Core_Int[93],
        Core_Int[94],
        Core_Int[95],
        Core_Int[97],
        Core_Int[106],
        Core_Int[107],
        Core_Int[108],
        Core_Int[96],
        [0,
         [0, _y_[9], _y_[10], _y_[11]],
         [0, _x_[9], _x_[10], _x_[11], _x_[12], _x_[13]],
         _w_[3],
         _w_[4],
         _w_[5],
         _w_[6],
         _w_[7],
         _w_[8],
         _w_[9],
         _w_[10],
         _w_[11],
         _w_[12],
         _w_[13],
         _w_[14],
         _w_[15],
         _w_[16],
         _w_[17],
         _w_[18],
         _w_[19],
         _w_[20],
         _w_[21],
         _w_[22],
         _w_[23],
         _w_[24],
         _w_[25],
         _w_[26],
         _w_[27],
         _w_[28],
         _w_[29],
         _w_[30],
         _w_[31],
         _w_[32],
         _w_[33],
         _w_[34],
         _w_[35],
         _w_[36],
         _w_[37],
         _w_[38],
         _w_[39],
         _w_[40],
         _w_[41],
         _w_[42],
         _w_[43],
         _w_[44],
         _w_[45]],
        [0,
         [0, _v_[1], _v_[2], _v_[11]],
         [0, _u_[9], _u_[10], _u_[11], _u_[12], _u_[13]],
         _t_[3],
         _t_[4],
         _t_[5],
         _t_[6],
         _t_[7],
         _t_[8],
         _t_[9],
         _t_[10],
         _t_[11],
         _t_[12],
         _t_[13],
         _t_[14],
         _t_[15],
         _t_[16],
         _t_[17],
         _t_[18],
         _t_[19],
         _t_[20],
         _t_[21],
         _t_[22],
         _t_[23],
         _t_[24],
         _t_[25],
         _t_[26],
         _t_[27],
         _t_[28]]],
       component$0,
       component];
   runtime.caml_register_global
    (42, Bonsai_web_ui_extendy, cst_Bonsai_web_ui_extendy$0);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJib25zYWlfd2ViX3VpX2V4dGVuZHkuY21hLmpzIiwic291cmNlUm9vdCI6IiIsIm5hbWVzIjpbInNleHBfb2ZfdCIsImNvdW50XzAxMSIsImRhdGFfMDA5IiwiYXJnXzAxMiIsImJuZHNfMDA4IiwiYXJnXzAxMCIsImJuZHNfMDA4JDAiLCJkZWZhdWx0JDAiLCJhZGRfb25lIiwibW9kZWwiLCJrZXkiLCJzZXhwX29mX3QkMCIsImhvd19tYW55XzAxNCIsImFyZ18wMTUiLCJibmRzXzAxMyIsImFyZzBfMDE2IiwicmVzMF8wMTciLCJob3dfbWFueSIsImFfMDE4IiwiYl8wMTkiLCJhXzAwMyIsImJfMDA0Iiwic3RhdGVfY29tcG9uZW50IiwiY29tcG9uZW50IiwidCIsIndyYXBfcmVtb3ZlIiwicGF0dGVybl9zeW50YXhfMDIwIiwiaW5qZWN0X2FjdGlvbiIsImRhdGEiLCJtYXAiLCJjb250ZW50c19tYXAiLCJjb250ZW50cyIsImFwcGVuZCIsInJlbW92ZSIsImlkIiwic2V0X2xlbmd0aCIsImxlbmd0aCIsImRpZmZlcmVuY2UiLCJlZmZlY3RzX2luX21hcCIsInJlc3VsdCIsInJlc2V0Iiwib3V0IiwiaW5qZWN0X3JlbW92ZSIsInBhdHRlcm5fc3ludGF4XzAyMSIsInBhdHRlcm5fc3ludGF4XzAyMiIsImNvbXBvbmVudCQwIiwiYSJdLCJzb3VyY2VzIjpbIi9ob21lL2xpYW0tY2FycGVudGVyLy5vcGFtL3BlcnNvbmFsLXNpdGUvbGliL2JvbnNhaS93ZWJfdWlfZXh0ZW5keS9ib25zYWlfd2ViX3VpX2V4dGVuZHkubWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0c7Ozs7O0c7Ozs7O0c7Ozs7O0c7Ozs7O0c7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1lBYUVBO0lBQUE7S0FFSUM7S0FEQUM7S0FDQUMsVUFBQSxzQkFBQUY7S0FGSkcsZ0NBRUlEO0tBREFFLFVBQUEsd0NBQUFIO0tBREpJLGtDQUNJRCxlQURKRDtJQUFBLFdBQUFFO0dBSXdCO0dBRVYsSUFBVkM7WUFFQUMsUUFBUUM7SUFDVixJQUFJQyxNQURNRDtJQUVWLFdBQVMseUJBRkNBLFVBQ05DLFNBQUFBO0dBQzREO0dBT2xFLFNBQUFDO0lBQUE7S0FDYTtNQUFBQztNQUFBQyxVQUFBLHNCQUFBRDtNQUFYRSxnQ0FBV0Q7S0FBWCxvQkFBQUM7O0lBQ0EsSUFBQUMscUJBQUFDLFdBQUEsc0JBQUFEO0lBQUEsd0JBQUFDO0dBQ2tCOzt1QkFVd0NQO0lBQTVDO1NBQ05RO0tBQWMsT0FBQSx1QkFBZEEsVUF2Qk5ULFNBc0J3REM7O1FBakIxQ0Msc0JBaUIwQ0Q7SUFqQnBDLFdBQW9CLHlCQWlCZ0JBLFVBakIxQ0M7R0FtQndCO0dBUjFDOzs7Z0JBR2tCUSxPQUFBQztRQUFBLEdBQUFELFVBQUFDLE9BMUJGO21CQTBCRUEsaUJBQUFEO3NCQTFCUEUsT0FBQUM7U0FBQSxPQUFBLHNCQUFBRCxPQUFBQztRQUFJO1FBQUMsV0FBQTtRQUFBLG9DQTBCRUgsVUFBQUM7T0FBTztJQUp2Qkc7TUFDRjs7O1lBeEJBdEI7WUFpQkFXOztRQVhJSjs7O1lBNkJGZ0IsVUFBV0MsR0FBR0M7aUJBQ2hCQztrQkFBbUNDO21CQUF6QkM7b0JBQ0ZDO3FCQWFBQzs7VUFPSzs7V0FEVEg7V0FEQUU7V0FESUU7V0FHSkMsU0FBUyxXQURUTDtVQUVKLFNBQUlNLE9BQU9DLElBQUssT0FBYyxXQUYxQlAsbUJBRU9PLEtBQXFDO21CQUM1Q0MsV0FBV0M7V0FDYixJQUFJQyxhQURTRCxTQUNhLHlCQUx4QlA7a0JBTUkseUJBREZROztjQUtGO2VBQUEscUI7ZUFBa0MsTUFBQSx5QkFWbENSO2VBVUlTLGlCQUFpQjtlQUNUO2lCQUFBLDJCQURSQSxrQkFMRkQ7Y0FNRjs7O3NCQUhpQyxPQUFBLFdBUGpDVixtQkFJRVU7O1VBTWtEO1VBRXhELFdBZFFOLFVBR0pDLFFBRUFHLFlBREFGOzs7NkNBckJJSixLQUQyQkY7NkNBYzNCRzs7O3FCQUMwQkQ7U0FDVixVQUFBLDZCQWpCUko7U0FpQlEsT0FBQSw4QkFEVUk7UUFDa0I7UUFEbEQsVUFBQSwwQkFkTUE7OztvQkFJSW5CLEtBQUlrQjtxQkFFRlc7O1VBSXdCOztXQUQ1Qlo7V0FEQWpCOztXQURTOEI7V0FBTEM7V0FHd0IsVUFIbkJELFdBRzRCLFdBRHJDYixtQkFEQWpCO1dBRUFnQztVQUNKLFdBSlFELEtBR0pDOzs7NkNBTkVoQyxLQUx1QmlCOzZDQU9yQlk7OztRQUFTLFVBQUEsdUJBUlZmOzs7T0FHWDs7VUFBQSx3REFGUUk7Ozs7V0FBQWU7Y0FBQUE7OzsrQ0FBVmpCOzs7OztVQUFtQ2tCO2FBQUFBOzs7OENBQW5DbEI7Ozs7NkNBYkVKOztZQWdEQXVCLFlBQVVyQjtJQUFJLE9BcENkRCxVQW9DVUMsWUFBbUNzQixVQUFPLE9BQVBBLEVBQVE7R0FBQzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztPQUF0REQ7T0FwQ0F0Qjs7OztFIiwic291cmNlc0NvbnRlbnQiOlsib3BlbiEgQ29yZVxub3BlbiBCb25zYWlfd2ViXG5vcGVuIEJvbnNhaS5MZXRfc3ludGF4XG5tb2R1bGUgSWQgPSBJbnRcblxudHlwZSAnYSB0ID1cbiAgeyBjb250ZW50cyA6ICdhIElkLk1hcC50XG4gIDsgYXBwZW5kIDogdW5pdCBFZmZlY3QudFxuICA7IHNldF9sZW5ndGggOiBpbnQgLT4gdW5pdCBFZmZlY3QudFxuICA7IHJlbW92ZSA6IElkLnQgLT4gdW5pdCBFZmZlY3QudFxuICB9XG5cbm1vZHVsZSBNb2RlbCA9IHN0cnVjdFxuICB0eXBlIHQgPVxuICAgIHsgZGF0YSA6IHVuaXQgSWQuTWFwLnRcbiAgICA7IGNvdW50IDogaW50XG4gICAgfVxuICBbQEBkZXJpdmluZyBlcXVhbCwgc2V4cF1cblxuICBsZXQgZGVmYXVsdCA9IHsgZGF0YSA9IEludC5NYXAuZW1wdHk7IGNvdW50ID0gMCB9XG5cbiAgbGV0IGFkZF9vbmUgbW9kZWwgPVxuICAgIGxldCBrZXkgPSBtb2RlbC5jb3VudCBpblxuICAgIHsgZGF0YSA9IE1hcC5hZGRfZXhuIG1vZGVsLmRhdGEgfmtleSB+ZGF0YTooKTsgY291bnQgPSBrZXkgKyAxIH1cbiAgOztcblxuICBsZXQgcmVtb3ZlIG1vZGVsIH5rZXkgPSB7IG1vZGVsIHdpdGggZGF0YSA9IE1hcC5yZW1vdmUgbW9kZWwuZGF0YSBrZXkgfVxuZW5kXG5cbm1vZHVsZSBBY3Rpb24gPSBzdHJ1Y3RcbiAgdHlwZSB0ID1cbiAgICB8IEFkZCBvZiB7IGhvd19tYW55IDogaW50IH1cbiAgICB8IFJlbW92ZSBvZiBpbnRcbiAgW0BAZGVyaXZpbmcgc2V4cF9vZl1cbmVuZFxuXG5sZXQgc3RhdGVfY29tcG9uZW50ID1cbiAgQm9uc2FpLnN0YXRlX21hY2hpbmUwXG4gICAgKClcbiAgICB+c2V4cF9vZl9tb2RlbDpbJXNleHBfb2Y6IE1vZGVsLnRdXG4gICAgfmVxdWFsOlslZXF1YWw6IE1vZGVsLnRdXG4gICAgfnNleHBfb2ZfYWN0aW9uOlslc2V4cF9vZjogQWN0aW9uLnRdXG4gICAgfmRlZmF1bHRfbW9kZWw6TW9kZWwuZGVmYXVsdFxuICAgIH5hcHBseV9hY3Rpb246KGZ1biAoXyA6IF8gQm9uc2FpLkFwcGx5X2FjdGlvbl9jb250ZXh0LnQpIChtb2RlbCA6IE1vZGVsLnQpIC0+IGZ1bmN0aW9uXG4gICAgfCBBZGQgeyBob3dfbWFueSB9IC0+IEZuLmFwcGx5X25fdGltZXMgfm46aG93X21hbnkgTW9kZWwuYWRkX29uZSBtb2RlbFxuICAgIHwgUmVtb3ZlIGtleSAtPiBNb2RlbC5yZW1vdmUgbW9kZWwgfmtleSlcbjs7XG5cbmxldCBjb21wb25lbnQnIHQgfndyYXBfcmVtb3ZlID1cbiAgbGV0JXN1YiB7IE1vZGVsLmRhdGE7IGNvdW50ID0gXyB9LCBpbmplY3RfYWN0aW9uID0gc3RhdGVfY29tcG9uZW50IGluXG4gIGxldCVzdWIgbWFwID1cbiAgICBCb25zYWkuYXNzb2NcbiAgICAgIChtb2R1bGUgSW50KVxuICAgICAgZGF0YVxuICAgICAgfmY6KGZ1biBrZXkgX2RhdGEgLT5cbiAgICAgICAgKCogTW9kZWwtcmVzZXR0ZXIgYWxsb3dzIGFzc29jIHRvIHJlY2xhaW0gc3BhY2UgYWZ0ZXIgYSBub2RlIGhhcyBiZWVuIHJlbW92ZWQgKilcbiAgICAgICAgbGV0JXN1YiByZXN1bHQgPSBCb25zYWkud2l0aF9tb2RlbF9yZXNldHRlciB0IGluXG4gICAgICAgIGxldCVhcnIgb3V0LCByZXNldCA9IHJlc3VsdFxuICAgICAgICBhbmQga2V5ID0ga2V5XG4gICAgICAgIGFuZCBpbmplY3RfYWN0aW9uID0gaW5qZWN0X2FjdGlvbiBpblxuICAgICAgICBsZXQgaW5qZWN0X3JlbW92ZSA9IEVmZmVjdC5NYW55IFsgcmVzZXQ7IGluamVjdF9hY3Rpb24gKEFjdGlvbi5SZW1vdmUga2V5KSBdIGluXG4gICAgICAgIG91dCwgaW5qZWN0X3JlbW92ZSlcbiAgaW5cbiAgbGV0JXN1YiBjb250ZW50c19tYXAgPVxuICAgIEJvbnNhaS5JbmNyLmNvbXB1dGUgbWFwIH5mOihmdW4gbWFwIC0+XG4gICAgICBJbmNyX21hcC5tYXAgbWFwIH5mOihUdXBsZTIudW5jdXJyeSB3cmFwX3JlbW92ZSkpXG4gIGluXG4gIGxldCVhcnIgY29udGVudHMgPSBjb250ZW50c19tYXBcbiAgYW5kIG1hcCA9IG1hcFxuICBhbmQgaW5qZWN0X2FjdGlvbiA9IGluamVjdF9hY3Rpb24gaW5cbiAgbGV0IGFwcGVuZCA9IGluamVjdF9hY3Rpb24gKEFjdGlvbi5BZGQgeyBob3dfbWFueSA9IDEgfSkgaW5cbiAgbGV0IHJlbW92ZSBpZCA9IGluamVjdF9hY3Rpb24gKEFjdGlvbi5SZW1vdmUgaWQpIGluXG4gIGxldCBzZXRfbGVuZ3RoIGxlbmd0aCA9XG4gICAgbGV0IGRpZmZlcmVuY2UgPSBsZW5ndGggLSBNYXAubGVuZ3RoIG1hcCBpblxuICAgIG1hdGNoIEludC5zaWduIGRpZmZlcmVuY2Ugd2l0aFxuICAgIHwgWmVybyAtPiBFZmZlY3QuSWdub3JlXG4gICAgfCBQb3MgLT4gaW5qZWN0X2FjdGlvbiAoQWN0aW9uLkFkZCB7IGhvd19tYW55ID0gZGlmZmVyZW5jZSB9KVxuICAgIHwgTmVnIC0+XG4gICAgICBsZXQgZWZmZWN0c19pbl9tYXAgPSBMaXN0LnJldl9tYXAgKE1hcC5kYXRhIG1hcCkgfmY6c25kIGluXG4gICAgICBFZmZlY3QuTWFueSAoTGlzdC50YWtlIGVmZmVjdHNfaW5fbWFwICgtZGlmZmVyZW5jZSkpXG4gIGluXG4gIHsgY29udGVudHM7IGFwcGVuZDsgc2V0X2xlbmd0aDsgcmVtb3ZlIH1cbjs7XG5cbmxldCBjb21wb25lbnQgdCA9IGNvbXBvbmVudCcgdCB+d3JhcF9yZW1vdmU6KGZ1biBhIF8gLT4gYSlcbiJdfQ==
