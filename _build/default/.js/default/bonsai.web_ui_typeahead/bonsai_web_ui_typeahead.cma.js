// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Bonsai_web_ui_typeahead
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, Bonsai_web_ui_typeahead = [0];
   runtime.caml_register_global
    (0, Bonsai_web_ui_typeahead, "Bonsai_web_ui_typeahead");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_typeahead__Typeahead
//# unitInfo: Requires: Bonsai, Bonsai_web, Bonsai_web_ui_common_components, Core, Core__Bool, Core__Comparable, Core__Fn, Core__List, Core__Option, Core__Set, Core__Sexp, Core__String, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Ui_effect, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$8 = "",
    cst_Bonsai_web_ui_typeahead_Ty$0 = "Bonsai_web_ui_typeahead__Typeahead",
    cst_bonsai_web_ui_typeahead$0 = "bonsai_web_ui_typeahead",
    cst_web_ui_typeahead_src_typea = "web_ui/typeahead/src/typeahead.ml",
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst$7 = cst$8,
    cst$4 = cst$8,
    cst$5 = cst$8,
    cst$6 = cst$8,
    cst$2 = cst$8,
    cst$1 = cst$8,
    cst$3 = cst$8,
    cst$0 = cst$8,
    cst = cst$8,
    Bonsai_web = global_data.Bonsai_web,
    Core_String = global_data.Core__String,
    Core_Set = global_data.Core__Set,
    Assert_failure = global_data.Assert_failure,
    Bonsai = global_data.Bonsai,
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Bonsai_web_ui_common_component =
      global_data.Bonsai_web_ui_common_components,
    Core_Bool = global_data.Core__Bool,
    Core_Sexp = global_data.Core__Sexp,
    Ui_effect = global_data.Ui_effect,
    Core = global_data.Core,
    Core_Fn = global_data.Core__Fn,
    Core_List = global_data.Core__List,
    Core_Comparable = global_data.Core__Comparable,
    Core_Option = global_data.Core__Option,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_typeahead_Ty$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_typeahead$0);
   caml_call1(Ppx_expect_runtime[1][1], cst_web_ui_typeahead_src_typea);
   caml_call2
    (Ppx_inline_test_lib[6], cst_bonsai_web_ui_typeahead$0, "typeahead.ml");
   var
    _K_ = [0, cst_web_ui_typeahead_src_typea, 389, 4],
    _J_ = [0, [0, cst_web_ui_typeahead_src_typea, 392, 12469, 12475]],
    _L_ = [0, cst_web_ui_typeahead_src_typea, 390, 12403, 12409],
    _M_ = [0, [0, cst_web_ui_typeahead_src_typea, 389, 12370, 12374]],
    _I_ = [0, [0, cst_web_ui_typeahead_src_typea, 408, 13008, 13010]],
    _N_ = [0, [0, cst_web_ui_typeahead_src_typea, 386, 12276, 12282]],
    _O_ = [0, [0, cst_web_ui_typeahead_src_typea, 385, 12248, 12252]],
    _P_ = [0, [0, cst_web_ui_typeahead_src_typea, 384, 12227, 12229]],
    cst_bonsai_web_ui_typeahead_pi = "bonsai-web-ui-typeahead-pills",
    _Q_ = [0, [0, cst_web_ui_typeahead_src_typea, 376, 12013, 12015]],
    _R_ = [0, [0, cst_web_ui_typeahead_src_typea, 359, 11701, 11703]],
    _S_ = [0, [0, cst_web_ui_typeahead_src_typea, 358, 11668, 11670]],
    _T_ = [0, [0, cst_web_ui_typeahead_src_typea, 355, 11533, 11535]],
    _U_ = [0, [0, cst_web_ui_typeahead_src_typea, 355, 11533, 11535]],
    _V_ = [0, [0, cst_web_ui_typeahead_src_typea, 355, 11533, 11535]],
    _W_ = [0, [0, cst_web_ui_typeahead_src_typea, 355, 11533, 11535]],
    _X_ = [0, [0, cst_web_ui_typeahead_src_typea, 355, 11533, 11535]],
    _Y_ = [0, [0, cst_web_ui_typeahead_src_typea, 346, 11103, 11107]],
    _Z_ = [0, [0, cst_web_ui_typeahead_src_typea, 345, 11067, 11069]],
    ___ = [0, [0, cst_web_ui_typeahead_src_typea, 344, 11023, 11025]],
    _$_ = [0, [0, cst_web_ui_typeahead_src_typea, 344, 11023, 11025]],
    _aa_ = [0, [0, cst_web_ui_typeahead_src_typea, 344, 11023, 11025]],
    _ab_ = [0, [0, cst_web_ui_typeahead_src_typea, 344, 11023, 11025]],
    _ac_ = [0, [0, cst_web_ui_typeahead_src_typea, 344, 11023, 11025]],
    _ad_ = [0, [0, cst_web_ui_typeahead_src_typea, 343, 10949, 10951]],
    _ae_ = [0, [0, cst_web_ui_typeahead_src_typea, 343, 10949, 10951]],
    _af_ = [0, [0, cst_web_ui_typeahead_src_typea, 343, 10949, 10951]],
    _ag_ = [0, [0, cst_web_ui_typeahead_src_typea, 343, 10949, 10951]],
    _ah_ = [0, [0, cst_web_ui_typeahead_src_typea, 343, 10949, 10951]],
    _H_ = [0, [0, cst_web_ui_typeahead_src_typea, 258, 8363, 8365]],
    _j_ = [0, cst_web_ui_typeahead_src_typea, 210, 4],
    _i_ = [0, [0, cst_web_ui_typeahead_src_typea, 213, 7197, 7203]],
    _k_ = [0, cst_web_ui_typeahead_src_typea, 211, 7135, 7141],
    _l_ = [0, [0, cst_web_ui_typeahead_src_typea, 210, 7102, 7106]],
    _d_ = [0, [0, cst_web_ui_typeahead_src_typea, 234, 7911, 7913]],
    _e_ = [0, [0, cst_web_ui_typeahead_src_typea, 225, 7562, 7566]],
    _f_ = [0, [0, cst_web_ui_typeahead_src_typea, 224, 7537, 7539]],
    _g_ = [0, [0, cst_web_ui_typeahead_src_typea, 220, 7437, 7441]],
    _h_ = [0, [0, cst_web_ui_typeahead_src_typea, 219, 7420, 7422]],
    _m_ = [0, [0, cst_web_ui_typeahead_src_typea, 207, 7008, 7014]],
    _n_ = [0, [0, cst_web_ui_typeahead_src_typea, 206, 6980, 6984]],
    _o_ = [0, [0, cst_web_ui_typeahead_src_typea, 205, 6959, 6961]],
    _p_ = [0, [0, cst_web_ui_typeahead_src_typea, 180, 6237, 6241]],
    _q_ = [0, [0, cst_web_ui_typeahead_src_typea, 179, 6219, 6221]],
    _r_ = [0, [0, cst_web_ui_typeahead_src_typea, 178, 6186, 6188]],
    _s_ = [0, [0, cst_web_ui_typeahead_src_typea, 175, 6084, 6086]],
    _t_ = [0, [0, cst_web_ui_typeahead_src_typea, 175, 6084, 6086]],
    _u_ = [0, [0, cst_web_ui_typeahead_src_typea, 175, 6084, 6086]],
    _v_ = [0, [0, cst_web_ui_typeahead_src_typea, 175, 6084, 6086]],
    _w_ = [0, [0, cst_web_ui_typeahead_src_typea, 175, 6084, 6086]],
    _x_ = [0, [0, cst_web_ui_typeahead_src_typea, 172, 5952, 5954]],
    _y_ = [0, [0, cst_web_ui_typeahead_src_typea, 172, 5952, 5954]],
    _z_ = [0, [0, cst_web_ui_typeahead_src_typea, 172, 5952, 5954]],
    _A_ = [0, [0, cst_web_ui_typeahead_src_typea, 172, 5952, 5954]],
    _B_ = [0, [0, cst_web_ui_typeahead_src_typea, 172, 5952, 5954]],
    _C_ = [0, [0, cst_web_ui_typeahead_src_typea, 169, 5833, 5835]],
    _D_ = [0, [0, cst_web_ui_typeahead_src_typea, 169, 5833, 5835]],
    _E_ = [0, [0, cst_web_ui_typeahead_src_typea, 169, 5833, 5835]],
    _F_ = [0, [0, cst_web_ui_typeahead_src_typea, 169, 5833, 5835]],
    _G_ = [0, [0, cst_web_ui_typeahead_src_typea, 169, 5833, 5835]],
    cst_value = "value",
    cst_list = "list",
    cst_text = "text",
    _a_ = [0, 1],
    _b_ = [0, 1],
    cst_bonsai_web_ui_typeahead = cst_bonsai_web_ui_typeahead$0,
    cst_Bonsai_web_ui_typeahead_Ty = cst_Bonsai_web_ui_typeahead_Ty$0;
   function _c_
   (opt,
    _eb_,
    set_focused,
    extra_attrs,
    to_string,
    id,
    handle_unknown_option,
    all_options,
    on_change,
    on_input,
    param){
    if(opt) var sth = opt[1], placeholder = sth; else var placeholder = cst$0;
    if(_eb_) var sth$0 = _eb_[1], value = sth$0; else var value = cst;
    var
     _ec_ =
       [246,
        function(param){
         var _ed_ = 0, _ee_ = 0, _ef_ = 0;
         function _eg_(param, needle){
          if(runtime.caml_string_notequal(needle, cst$8))
           var
            _ev_ =
              function(state){
               if(typeof state === "number")
                var haystack_result = state ? 0 : 0;
               else
                var value = state[1], haystack_result = [0, value];
               var
                unknown_option_result =
                  caml_call1(handle_unknown_option, needle);
               return caml_call2
                       (Core_Option[59], unknown_option_result, haystack_result);
              },
            _ew_ =
              function(state, value){
               var value_string = caml_call1(to_string, value);
               return caml_call2(Core_String[120][30], value_string, needle)
                       ? [1, [0, value]]
                       : caml_call2
                          (Core_String[120][5], value_string, needle)
                         ? typeof
                           state
                           === "number"
                           ? state ? _a_ : [0, [0, value]]
                           : _b_
                         : [0, state];
              },
            maybe_t = caml_call4(Core_List[22], all_options, 0, _ew_, _ev_);
          else
           var maybe_t = 0;
          return caml_call2(on_change, maybe_t, needle);
         }
         var _eh_ = [0, caml_call1(Virtual_dom_Vdom[1][58], _eg_), _ef_];
         function _ei_(param){return on_input;}
         var
          _ej_ = [0, caml_call1(Virtual_dom_Vdom[1][57], _ei_), _eh_],
          _ek_ =
            [0, caml_call2(Virtual_dom_Vdom[1][3], cst_value, value), _ej_];
         function _el_(param){return caml_call1(set_focused, 0);}
         var _em_ = [0, caml_call1(Virtual_dom_Vdom[1][54], _el_), _ek_];
         function _en_(param){return caml_call1(set_focused, 1);}
         var
          _eo_ = [0, caml_call1(Virtual_dom_Vdom[1][53], _en_), _em_],
          _ep_ = [0, caml_call1(Virtual_dom_Vdom[1][44], value), _eo_],
          _eq_ = [0, caml_call1(Virtual_dom_Vdom[1][27], placeholder), _ep_],
          _er_ = [0, caml_call2(Virtual_dom_Vdom[1][1], cst_list, id), _eq_],
          _es_ = [0, caml_call1(Virtual_dom_Vdom[1][43], cst_text), _er_],
          _et_ = caml_call2(Core[156], extra_attrs, _es_),
          _eu_ = [0, [0, caml_call1(Virtual_dom_Vdom[1][10], _et_), _ee_]];
         return caml_call3(Virtual_dom_Node[30], 0, _eu_, _ed_);
        }];
    return caml_call2(Virtual_dom_Node[64], 0, _ec_);
   }
   function datalist
   (filter_options_by,
    id,
    all_options,
    to_string,
    to_option_description,
    param){
    var
     _d6_ =
       [246,
        function(param){
         function option_of_t(t){
          var
           _d9_ = caml_call1(to_option_description, t),
           _d__ = [0, caml_call1(Virtual_dom_Node[6], _d9_), 0],
           _d$_ = caml_call1(to_string, t),
           _ea_ = [0, [0, caml_call1(Virtual_dom_Vdom[1][44], _d$_), 0]];
          return caml_call3(Virtual_dom_Node[36], 0, _ea_, _d__);
         }
         if(filter_options_by)
          var
           filter_options_by$0 = filter_options_by[1],
           _d7_ =
             function(item){
              return caml_call1(filter_options_by$0, item)
                      ? [0, option_of_t(item)]
                      : 0;
             },
           all_options$0 = caml_call2(Core_List[13], all_options, _d7_);
         else
          var
           all_options$0 = caml_call2(Core_List[51], all_options, option_of_t);
         var _d8_ = [0, [0, caml_call1(Virtual_dom_Vdom[1][25], id), 0]];
         return caml_call3(Virtual_dom_Node[14], 0, _d8_, all_options$0);
        }];
    return caml_call2(Virtual_dom_Node[64], 0, _d6_);
   }
   function show_datalist(focused, show_datalist_in_test){
    return focused
            ? 1
            : 853947087 === Bonsai_web[2] ? show_datalist_in_test : 0;
   }
   function create_internal
   (opt,
    placeholder,
    on_select_change,
    to_string,
    to_option_description,
    _cA_,
    M,
    equal,
    all_options,
    show_datalist_in_test){
    if(opt)
     var sth = opt[1], extra_attrs = sth;
    else
     var extra_attrs = caml_call1(Bonsai[2][1], 0);
    if(_cA_)
     var sth$0 = _cA_[1], handle_unknown_option = sth$0;
    else
     var
      _cJ_ = caml_call1(Core_Fn[1], 0),
      handle_unknown_option = caml_call1(Bonsai[2][1], _cJ_);
    function _cB_(a){
     var _d5_ = caml_call1(M[1], a);
     return caml_call2(Core_Sexp[84], 0, _d5_);
    }
    var
     _cC_ = caml_call1(Bonsai[2][1], _cB_),
     to_string$0 = caml_call2(Core_Option[39], to_string, _cC_),
     to_option_description$0 =
       caml_call2(Core_Option[39], to_option_description, to_string$0);
    function _cD_(param){return Ui_effect[1];}
    var
     _cE_ = caml_call1(Bonsai[2][1], _cD_),
     on_select_change$0 = caml_call2(Core_Option[39], on_select_change, _cE_);
    function _cF_(pattern_syntax_001){
     function _cK_(set_focused){
      function _cO_(focused){
       function _cS_(pattern_syntax_006){
        function _cV_(set_current_input){
         function _cZ_(current_input){
          function _c3_(pattern_syntax_011){
           function _c5_(set_selected){
            function _c9_(let_syntax_045){
             function _db_(id){
              function _dc_(input){
               function _dx_(datalist){
                function _dO_(view){
                 function _dS_(set_selected){
                  function _d0_(param){
                   var
                    _d4_ = param[2],
                    match = _d4_[2],
                    set_selected = match[2],
                    view = match[1],
                    current_input = _d4_[1],
                    selected = param[1];
                   return [0, selected, set_selected, current_input, view];
                  }
                  var
                   _d1_ = caml_call2(Bonsai[49][5][7], view, set_selected),
                   _d2_ = caml_call2(Bonsai[49][5][7], current_input, _d1_),
                   _d3_ = caml_call2(Bonsai[49][5][7], let_syntax_045, _d2_);
                  return caml_call3(Bonsai[49][5][8], _d_, _d3_, _d0_);
                 }
                 function _dT_(param, selected){
                  var
                   match = param[2],
                   to_string = match[2],
                   set_current_input = match[1],
                   set_selected = param[1],
                   _dX_ =
                     [246,
                      function(param){
                       var
                        current_input =
                          caml_call3(Core_Option[41], selected, cst$1, to_string),
                        _dY_ = [0, caml_call1(set_current_input, current_input), 0],
                        _dZ_ = [0, caml_call1(set_selected, selected), _dY_];
                       return [0, Ui_effect[2], _dZ_];
                      }];
                  return caml_call1(Bonsai_web[5][13], _dX_);
                 }
                 var
                  _dU_ =
                    caml_call2(Bonsai[49][5][7], set_current_input, to_string$0),
                  _dV_ = caml_call2(Bonsai[49][5][7], set_selected, _dU_),
                  _dW_ = caml_call3(Bonsai[49][5][8], _e_, _dV_, _dT_);
                 return caml_call3(Bonsai[49][5][1], _f_, _dW_, _dS_);
                }
                function _dP_(param){
                 var datalist = param[2], input = param[1];
                 return caml_call3
                         (Virtual_dom_Node[17], 0, 0, [0, input, [0, datalist, 0]]);
                }
                var
                 _dQ_ = caml_call2(Bonsai[49][5][7], input, datalist),
                 _dR_ = caml_call3(Bonsai[49][5][8], _g_, _dQ_, _dP_);
                return caml_call3(Bonsai[49][5][1], _h_, _dR_, _dO_);
               }
               function _dy_(show_datalist){
                function _dC_(pattern_syntax_030){
                 function _dE_(param){
                  if(0 === param){
                   var _dI_ = caml_call1(Virtual_dom_Node[6], cst$2);
                   return caml_call1(Bonsai[7], _dI_);
                  }
                  if(1 !== param)
                   throw caml_maybe_attach_backtrace
                          ([0, Assert_failure, _j_], 1);
                  function _dJ_(param){
                   var
                    _dN_ = param[2],
                    match = _dN_[2],
                    all_options = match[2],
                    to_string = match[1],
                    id = _dN_[1],
                    to_option_description = param[1];
                   return datalist
                           (0, id, all_options, to_string, to_option_description, 0);
                  }
                  var
                   _dK_ =
                     caml_call2(Bonsai[49][5][7], to_string$0, all_options),
                   _dL_ = caml_call2(Bonsai[49][5][7], id, _dK_),
                   _dM_ =
                     caml_call2(Bonsai[49][5][7], to_option_description$0, _dL_);
                  return caml_call3(Bonsai[49][5][8], _i_, _dM_, _dJ_);
                 }
                 var _dF_ = 2;
                 function _dG_(param){return param ? 1 : 0;}
                 var
                  _dH_ =
                    caml_call3(Bonsai[49][5][4], 0, pattern_syntax_030, _dG_);
                 return caml_call4(Bonsai[49][5][3], _k_, _dH_, _dF_, _dE_);
                }
                var _dD_ = caml_call1(Bonsai[49][5][6], show_datalist);
                return caml_call3(Bonsai[49][5][1], _l_, _dD_, _dC_);
               }
               function _dz_(focused){
                return show_datalist(focused, show_datalist_in_test);
               }
               var
                _dA_ = caml_call3(Bonsai[49][5][8], _m_, focused, _dz_),
                _dB_ = caml_call3(Bonsai[49][5][1], _n_, _dA_, _dy_);
               return caml_call3(Bonsai[49][5][1], _o_, _dB_, _dx_);
              }
              function _dd_(param){
               var
                _do_ = param[2],
                _dp_ = _do_[2],
                _dq_ = _dp_[2],
                _dr_ = _dq_[2],
                _ds_ = _dr_[2],
                _dt_ = _ds_[2],
                _du_ = _dt_[2],
                match = _du_[2],
                to_string = match[2],
                set_current_input = match[1],
                current_input = _du_[1],
                on_select_change = _dt_[1],
                all_options = _ds_[1],
                handle_unknown_option = _dr_[1],
                id = _dq_[1],
                extra_attrs = _dp_[1],
                set_selected = _do_[1],
                set_focused = param[1];
               function on_input(input){
                return caml_call1(set_current_input, input);
               }
               function on_change(t, param){
                var
                 _dv_ = [0, caml_call1(on_select_change, t), 0],
                 _dw_ = [0, caml_call1(set_selected, t), _dv_];
                return [0, Ui_effect[2], _dw_];
               }
               return _c_
                       (placeholder,
                        [0, current_input],
                        set_focused,
                        extra_attrs,
                        to_string,
                        id,
                        handle_unknown_option,
                        all_options,
                        on_change,
                        on_input,
                        0);
              }
              var
               _de_ =
                 caml_call2(Bonsai[49][5][7], set_current_input, to_string$0),
               _df_ = caml_call2(Bonsai[49][5][7], current_input, _de_),
               _dg_ = caml_call2(Bonsai[49][5][7], on_select_change$0, _df_),
               _dh_ = caml_call2(Bonsai[49][5][7], all_options, _dg_),
               _di_ =
                 caml_call2(Bonsai[49][5][7], handle_unknown_option, _dh_),
               _dj_ = caml_call2(Bonsai[49][5][7], id, _di_),
               _dk_ = caml_call2(Bonsai[49][5][7], extra_attrs, _dj_),
               _dl_ = caml_call2(Bonsai[49][5][7], set_selected, _dk_),
               _dm_ = caml_call2(Bonsai[49][5][7], set_focused, _dl_),
               _dn_ = caml_call3(Bonsai[49][5][8], _p_, _dm_, _dd_);
              return caml_call3(Bonsai[49][5][1], _q_, _dn_, _dc_);
             }
             return caml_call3(Bonsai[49][5][1], _r_, Bonsai[8], _db_);
            }
            function _c__(param){
             var pattern_syntax_012 = param[1];
             return pattern_syntax_012;
            }
            var
             _c$_ =
               caml_call3(Bonsai[49][5][4], _s_, pattern_syntax_011, _c__),
             _da_ = caml_call1(Bonsai[49][5][6], _c$_);
            return caml_call3(Bonsai[49][5][1], _t_, _da_, _c9_);
           }
           function _c6_(param){
            var pattern_syntax_013 = param[2];
            return pattern_syntax_013;
           }
           var
            _c7_ = caml_call3(Bonsai[49][5][4], _u_, pattern_syntax_011, _c6_),
            _c8_ = caml_call1(Bonsai[49][5][6], _c7_);
           return caml_call3(Bonsai[49][5][1], _v_, _c8_, _c5_);
          }
          var _c4_ = caml_call5(Bonsai[12], 0, 0, [0, M[1]], [0, equal], 0);
          return caml_call3(Bonsai[49][5][1], _w_, _c4_, _c3_);
         }
         function _c0_(param){
          var pattern_syntax_007 = param[1];
          return pattern_syntax_007;
         }
         var
          _c1_ = caml_call3(Bonsai[49][5][4], _x_, pattern_syntax_006, _c0_),
          _c2_ = caml_call1(Bonsai[49][5][6], _c1_);
         return caml_call3(Bonsai[49][5][1], _y_, _c2_, _cZ_);
        }
        function _cW_(param){
         var pattern_syntax_008 = param[2];
         return pattern_syntax_008;
        }
        var
         _cX_ = caml_call3(Bonsai[49][5][4], _z_, pattern_syntax_006, _cW_),
         _cY_ = caml_call1(Bonsai[49][5][6], _cX_);
        return caml_call3(Bonsai[49][5][1], _A_, _cY_, _cV_);
       }
       var
        _cT_ =
          [0,
           function(a_009, b_010){
            return caml_call2(Core_String[145], a_009, b_010);
           }],
        _cU_ = caml_call4(Bonsai[11], 0, [0, Core_String[135]], _cT_, cst$3);
       return caml_call3(Bonsai[49][5][1], _B_, _cU_, _cS_);
      }
      function _cP_(param){
       var pattern_syntax_002 = param[1];
       return pattern_syntax_002;
      }
      var
       _cQ_ = caml_call3(Bonsai[49][5][4], _C_, pattern_syntax_001, _cP_),
       _cR_ = caml_call1(Bonsai[49][5][6], _cQ_);
      return caml_call3(Bonsai[49][5][1], _D_, _cR_, _cO_);
     }
     function _cL_(param){
      var pattern_syntax_003 = param[2];
      return pattern_syntax_003;
     }
     var
      _cM_ = caml_call3(Bonsai[49][5][4], _E_, pattern_syntax_001, _cL_),
      _cN_ = caml_call1(Bonsai[49][5][6], _cM_);
     return caml_call3(Bonsai[49][5][1], _F_, _cN_, _cK_);
    }
    var
     _cG_ = 0,
     _cH_ =
       [0,
        function(a_004, b_005){
         return caml_call2(Core_Bool[32], a_004, b_005);
        }],
     _cI_ = caml_call4(Bonsai[11], 0, [0, Core_Bool[22]], _cH_, _cG_);
    return caml_call3(Bonsai[49][5][1], _G_, _cI_, _cF_);
   }
   function create_multi_internal
   (opt,
    placeholder,
    _aU_,
    to_string,
    to_option_description,
    _aT_,
    _aS_,
    M,
    let_syntax_088,
    show_datalist_in_test){
    if(opt)
     var sth = opt[1], extra_attrs = sth;
    else
     var extra_attrs = caml_call1(Bonsai[2][1], 0);
    if(_aU_)
     var sth$0 = _aU_[1], let_syntax_074 = sth$0;
    else
     var
      _a3_ = caml_call1(Core[242], Ui_effect[1]),
      let_syntax_074 = caml_call1(Bonsai[2][1], _a3_);
    if(_aT_)
     var sth$1 = _aT_[1], handle_unknown_option = sth$1;
    else
     var
      _a2_ = caml_call1(Core_Fn[1], 0),
      handle_unknown_option = caml_call1(Bonsai[2][1], _a2_);
    if(_aS_)
     var sth$2 = _aS_[1], split = sth$2;
    else
     var split = Core_List[50];
    var
     sexp_of_t = M[1],
     include = caml_call1(Core_Comparable[13], M),
     comparator = include[16],
     Set = include[22];
    function _aV_(a){
     var _cz_ = caml_call1(sexp_of_t, a);
     return caml_call2(Core_Sexp[84], 0, _cz_);
    }
    var
     _aW_ = caml_call1(Bonsai[2][1], _aV_),
     let_syntax_091 = caml_call2(Core_Option[39], to_string, _aW_),
     let_syntax_092 =
       caml_call2(Core_Option[39], to_option_description, let_syntax_091),
     _aX_ = Set[6],
     _aY_ =
       [0, function(a_062, b_063){return caml_call2(Set[3], a_062, b_063);}],
     selected_options = caml_call4(Bonsai[11], 0, [0, Set[4]], _aY_, _aX_),
     _aZ_ = 0,
     _a0_ =
       [0,
        function(a_064, b_065){
         return caml_call2(Core_Bool[32], a_064, b_065);
        }],
     focused = caml_call4(Bonsai[11], 0, [0, Core_Bool[22]], _a0_, _aZ_);
    function _a1_(pattern_syntax_066){
     function _a4_(selected_options){
      function _a8_(let_syntax_073){
       function _ba_(pattern_syntax_069){
        function _bb_(set_focused){
         function _bf_(focused){
          function _bj_(inject_selected_options){
           function _bp_(pattern_syntax_076){
            function _bs_(inject_current_input){
             function _bw_(let_syntax_097){
              function _bA_(id){
               function _bN_(input){
                function _b4_(pills){
                 function _b8_(datalist){
                  function _cq_(param){
                   var
                    _cw_ = param[2],
                    _cx_ = _cw_[2],
                    _cy_ = _cx_[2],
                    match = _cy_[2],
                    pills = match[2],
                    input = match[1],
                    current_input = _cy_[1],
                    inject_selected_options = _cx_[1],
                    datalist = _cw_[1],
                    selected_options = param[1];
                   return [0,
                           selected_options,
                           inject_selected_options,
                           current_input,
                           caml_call3
                            (Virtual_dom_Node[17],
                             0,
                             0,
                             [0, input, [0, datalist, [0, pills, 0]]])];
                  }
                  var
                   _cr_ = caml_call2(Bonsai[49][5][7], input, pills),
                   _cs_ = caml_call2(Bonsai[49][5][7], let_syntax_097, _cr_),
                   _ct_ =
                     caml_call2(Bonsai[49][5][7], inject_selected_options, _cs_),
                   _cu_ = caml_call2(Bonsai[49][5][7], datalist, _ct_),
                   _cv_ = caml_call2(Bonsai[49][5][7], selected_options, _cu_);
                  return caml_call3(Bonsai[49][5][8], _I_, _cv_, _cq_);
                 }
                 function _b9_(show_datalist){
                  function _cb_(pattern_syntax_087){
                   function _cd_(param){
                    if(0 === param){
                     var _ch_ = caml_call3(Virtual_dom_Node[14], 0, 0, 0);
                     return caml_call1(Bonsai[7], _ch_);
                    }
                    if(1 !== param)
                     throw caml_maybe_attach_backtrace
                            ([0, Assert_failure, _K_], 1);
                    function _ci_(param){
                     var
                      _cn_ = param[2],
                      _co_ = _cn_[2],
                      match = _co_[2],
                      to_option_description = match[2],
                      to_string = match[1],
                      id = _co_[1],
                      selected_options = _cn_[1],
                      all_options = param[1],
                      all_options$0 =
                        caml_call2(Core_Set[34], [0, comparator], all_options),
                      remaining_options =
                        caml_call2(Core_Set[17], all_options$0, selected_options),
                      _cp_ = 0;
                     return datalist
                             ([0,
                               function(option){
                                return caml_call2(Core_Set[11], remaining_options, option);
                               }],
                              id,
                              all_options,
                              to_string,
                              to_option_description,
                              _cp_);
                    }
                    var
                     _cj_ =
                       caml_call2(Bonsai[49][5][7], let_syntax_091, let_syntax_092),
                     _ck_ = caml_call2(Bonsai[49][5][7], id, _cj_),
                     _cl_ = caml_call2(Bonsai[49][5][7], selected_options, _ck_),
                     _cm_ = caml_call2(Bonsai[49][5][7], let_syntax_088, _cl_);
                    return caml_call3(Bonsai[49][5][8], _J_, _cm_, _ci_);
                   }
                   var _ce_ = 2;
                   function _cf_(param){return param ? 1 : 0;}
                   var
                    _cg_ =
                      caml_call3(Bonsai[49][5][4], 0, pattern_syntax_087, _cf_);
                   return caml_call4(Bonsai[49][5][3], _L_, _cg_, _ce_, _cd_);
                  }
                  var _cc_ = caml_call1(Bonsai[49][5][6], show_datalist);
                  return caml_call3(Bonsai[49][5][1], _M_, _cc_, _cb_);
                 }
                 function _b__(focused){
                  return show_datalist(focused, show_datalist_in_test);
                 }
                 var
                  _b$_ = caml_call3(Bonsai[49][5][8], _N_, focused, _b__),
                  _ca_ = caml_call3(Bonsai[49][5][1], _O_, _b$_, _b9_);
                 return caml_call3(Bonsai[49][5][1], _P_, _ca_, _b8_);
                }
                var
                 _b5_ =
                   caml_call1
                    (Virtual_dom_Vdom[1][16], cst_bonsai_web_ui_typeahead_pi),
                 _b6_ = [0, caml_call1(Bonsai[2][1], _b5_)],
                 _b7_ =
                   caml_call5
                    (Bonsai_web_ui_common_component[1][2],
                     _b6_,
                     0,
                     let_syntax_091,
                     inject_selected_options,
                     selected_options);
                return caml_call3(Bonsai[49][5][1], _Q_, _b7_, _b4_);
               }
               if(placeholder)
                var sth = placeholder[1], placeholder$0 = sth;
               else
                var placeholder$0 = cst$6;
               function _bB_(param){
                var
                 _bO_ = param[2],
                 _bP_ = _bO_[2],
                 _bQ_ = _bP_[2],
                 _bR_ = _bQ_[2],
                 _bS_ = _bR_[2],
                 _bT_ = _bS_[2],
                 _bU_ = _bT_[2],
                 _bV_ = _bU_[2],
                 match = _bV_[2],
                 set_focused = match[2],
                 to_string = match[1],
                 on_set_change = _bV_[1],
                 id = _bU_[1],
                 extra_attrs = _bT_[1],
                 inject_selected_options = _bS_[1],
                 selected_options = _bR_[1],
                 all_options = _bQ_[1],
                 handle_unknown_option = _bP_[1],
                 inject_current_input = _bO_[1],
                 current_input = param[1];
                function on_input(input){
                 return caml_call1(inject_current_input, input);
                }
                function on_change(maybe_t, user_input){
                 if(maybe_t){
                  var
                   t = maybe_t[1],
                   selected_options$0 =
                     caml_call2(Core_Set[12], selected_options, t),
                   _bW_ = [0, caml_call1(inject_current_input, cst$4), 0],
                   _bX_ =
                     [0,
                      caml_call1(inject_selected_options, selected_options$0),
                      _bW_],
                   _bY_ =
                     [0, caml_call1(on_set_change, selected_options$0), _bX_];
                  return [0, Ui_effect[2], _bY_];
                 }
                 var
                  _bZ_ = caml_call1(split, user_input),
                  attempted_input_items =
                    caml_call1(Core_String[160][8], _bZ_);
                 function _b0_(option){
                  var option$0 = caml_call1(to_string, option);
                  return caml_call2
                          (Core_Set[11], attempted_input_items, option$0);
                 }
                 var
                  new_selected_options =
                    caml_call2(Core_List[12], all_options, _b0_),
                  selected_options$1 =
                    caml_call3
                     (Core_List[20],
                      new_selected_options,
                      selected_options,
                      Core_Set[12]),
                  _b1_ = 0,
                  _b2_ =
                    new_selected_options
                     ? caml_call1(inject_current_input, cst$5)
                     : caml_call1(inject_current_input, user_input),
                  _b3_ =
                    [0,
                     caml_call1(inject_selected_options, selected_options$1),
                     [0, _b2_, _b1_]];
                 return [0, Ui_effect[2], _b3_];
                }
                return _c_
                        ([0, placeholder$0],
                         [0, current_input],
                         set_focused,
                         extra_attrs,
                         to_string,
                         id,
                         handle_unknown_option,
                         all_options,
                         on_change,
                         on_input,
                         0);
               }
               var
                _bC_ =
                  caml_call2(Bonsai[49][5][7], let_syntax_091, set_focused),
                _bD_ = caml_call2(Bonsai[49][5][7], let_syntax_074, _bC_),
                _bE_ = caml_call2(Bonsai[49][5][7], id, _bD_),
                _bF_ = caml_call2(Bonsai[49][5][7], extra_attrs, _bE_),
                _bG_ =
                  caml_call2(Bonsai[49][5][7], inject_selected_options, _bF_),
                _bH_ = caml_call2(Bonsai[49][5][7], selected_options, _bG_),
                _bI_ = caml_call2(Bonsai[49][5][7], let_syntax_088, _bH_),
                _bJ_ =
                  caml_call2(Bonsai[49][5][7], handle_unknown_option, _bI_),
                _bK_ =
                  caml_call2(Bonsai[49][5][7], inject_current_input, _bJ_),
                _bL_ = caml_call2(Bonsai[49][5][7], let_syntax_097, _bK_),
                _bM_ = caml_call3(Bonsai[49][5][8], _H_, _bL_, _bB_);
               return caml_call3(Bonsai[49][5][1], _R_, _bM_, _bN_);
              }
              return caml_call3(Bonsai[49][5][1], _S_, Bonsai[8], _bA_);
             }
             function _bx_(param){
              var pattern_syntax_077 = param[1];
              return pattern_syntax_077;
             }
             var
              _by_ =
                caml_call3(Bonsai[49][5][4], _T_, pattern_syntax_076, _bx_),
              _bz_ = caml_call1(Bonsai[49][5][6], _by_);
             return caml_call3(Bonsai[49][5][1], _U_, _bz_, _bw_);
            }
            function _bt_(param){
             var pattern_syntax_078 = param[2];
             return pattern_syntax_078;
            }
            var
             _bu_ =
               caml_call3(Bonsai[49][5][4], _V_, pattern_syntax_076, _bt_),
             _bv_ = caml_call1(Bonsai[49][5][6], _bu_);
            return caml_call3(Bonsai[49][5][1], _W_, _bv_, _bs_);
           }
           var
            _bq_ =
              [0,
               function(a_079, b_080){
                return caml_call2(Core_String[145], a_079, b_080);
               }],
            _br_ =
              caml_call4(Bonsai[11], 0, [0, Core_String[135]], _bq_, cst$7);
           return caml_call3(Bonsai[49][5][1], _X_, _br_, _bp_);
          }
          function _bk_(param, selected_options){
           var
            on_set_change = param[2],
            inject_selected_options = param[1],
            _bn_ =
              [0, caml_call1(inject_selected_options, selected_options), 0],
            _bo_ = [0, caml_call1(on_set_change, selected_options), _bn_];
           return [0, Bonsai_web[5][2], _bo_];
          }
          var
           _bl_ = caml_call2(Bonsai[49][5][7], let_syntax_073, let_syntax_074),
           _bm_ = caml_call3(Bonsai[49][5][8], _Y_, _bl_, _bk_);
          return caml_call3(Bonsai[49][5][1], _Z_, _bm_, _bj_);
         }
         function _bg_(param){
          var pattern_syntax_070 = param[1];
          return pattern_syntax_070;
         }
         var
          _bh_ = caml_call3(Bonsai[49][5][4], ___, pattern_syntax_069, _bg_),
          _bi_ = caml_call1(Bonsai[49][5][6], _bh_);
         return caml_call3(Bonsai[49][5][1], _$_, _bi_, _bf_);
        }
        function _bc_(param){
         var pattern_syntax_071 = param[2];
         return pattern_syntax_071;
        }
        var
         _bd_ = caml_call3(Bonsai[49][5][4], _aa_, pattern_syntax_069, _bc_),
         _be_ = caml_call1(Bonsai[49][5][6], _bd_);
        return caml_call3(Bonsai[49][5][1], _ab_, _be_, _bb_);
       }
       return caml_call3(Bonsai[49][5][1], _ac_, focused, _ba_);
      }
      function _a9_(param){
       var pattern_syntax_067 = param[2];
       return pattern_syntax_067;
      }
      var
       _a__ = caml_call3(Bonsai[49][5][4], _ad_, pattern_syntax_066, _a9_),
       _a$_ = caml_call1(Bonsai[49][5][6], _a__);
      return caml_call3(Bonsai[49][5][1], _ae_, _a$_, _a8_);
     }
     function _a5_(param){
      var pattern_syntax_068 = param[1];
      return pattern_syntax_068;
     }
     var
      _a6_ = caml_call3(Bonsai[49][5][4], _af_, pattern_syntax_066, _a5_),
      _a7_ = caml_call1(Bonsai[49][5][6], _a6_);
     return caml_call3(Bonsai[49][5][1], _ag_, _a7_, _a4_);
    }
    return caml_call3(Bonsai[49][5][1], _ah_, selected_options, _a1_);
   }
   function create(_aP_, _aO_, _aN_, _aM_, _aL_, _aK_, _aJ_){
    return function(_aQ_){
     return function(_aR_){
      return create_internal
              (_aP_, _aO_, _aN_, _aM_, _aL_, _aK_, _aJ_, _aQ_, _aR_, 1);};};
   }
   function create_multi(_aH_, _aG_, _aF_, _aE_, _aD_, _aC_, _aB_, _aA_){
    return function(_aI_){
     return create_multi_internal
             (_aH_, _aG_, _aF_, _aE_, _aD_, _aC_, _aB_, _aA_, _aI_, 1);};
   }
   function create_with_browser_behavior_i
   (_ax_, _aw_, _av_, _au_, _at_, _as_, _ar_){
    return function(_ay_){
     return function(_az_){
      return create_internal
              (_ax_, _aw_, _av_, _au_, _at_, _as_, _ar_, _ay_, _az_, 0);};};
   }
   function create_multi_with_browser_beha
   (_ap_, _ao_, _an_, _am_, _al_, _ak_, _aj_, _ai_){
    return function(_aq_){
     return create_multi_internal
             (_ap_, _ao_, _an_, _am_, _al_, _ak_, _aj_, _ai_, _aq_, 0);};
   }
   var
    For_testing =
      [0, create_with_browser_behavior_i, create_multi_with_browser_beha],
    Private = [0, For_testing];
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_typeahead);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_typeahead_Ty);
   var Bonsai_web_ui_typeahead_Typeah = [0, create, create_multi, Private];
   runtime.caml_register_global
    (102, Bonsai_web_ui_typeahead_Typeah, cst_Bonsai_web_ui_typeahead_Ty$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_typeahead__Styles
//# unitInfo: Requires: Css_gen, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_typeahead_St = "Bonsai_web_ui_typeahead__Styles",
    cst_bonsai_web_ui_typeahead = "bonsai_web_ui_typeahead";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Css_gen = global_data.Css_gen;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_typeahead_St);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_typeahead);
   caml_call1(Ppx_expect_runtime[1][1], "web_ui/typeahead/src/styles.ml");
   caml_call2
    (Ppx_inline_test_lib[6], cst_bonsai_web_ui_typeahead, "styles.ml");
   var
    full_width = caml_call1(Css_gen[61], Css_gen[7][5]),
    _a_ =
      [0,
       caml_call2
        (Css_gen[21],
         "transition",
         "border-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms"),
       0],
    _b_ =
      [0,
       caml_call5
        (Css_gen[74], 0, 0, [0, [0, 17960, 3]], [0, [0, 17960, 40]], 0),
       _a_],
    _c_ = [0, caml_call4(Css_gen[89], 0, 0, 870530776, 0), _b_],
    _d_ = [0, caml_call1(Css_gen[64], [0, 17960, 38]), _c_],
    _e_ = [0, caml_call1(Css_gen[51], [0, 4298439, "--js-text-color"]), _d_],
    _f_ =
      [0,
       caml_call4
        (Css_gen[85],
         [0, [0, 17960, 2]],
         [0, [0, 3603131, "#e0e0e0"]],
         334701579,
         0),
       _e_],
    _g_ =
      [0,
       caml_call1
        (Css_gen[44], [0, "var(--js-main-font)", [0, "sans-serif", 0]]),
       _f_],
    typeahead = caml_call1(Css_gen[31], _g_),
    _h_ =
      [0,
       caml_call5
        (Css_gen[80],
         [0, [0, 4100410, 0.5]],
         [0, [0, 4100410, 0.5]],
         [0, [0, 4100410, 0.]],
         [0, [0, 4100410, 0.]],
         0),
       0],
    pill_container = caml_call1(Css_gen[31], _h_),
    _i_ = [0, caml_call1(Css_gen[36], -266363961), 0],
    _j_ =
      [0,
       caml_call5
        (Css_gen[80], 0, [0, [0, 17960, 10]], 0, [0, [0, 17960, 10]], 0),
       _i_],
    _k_ =
      [0,
       caml_call1
        (Css_gen[52], [0, 4298439, "--js-default-button-active-color"]),
       _j_],
    _l_ = [0, caml_call1(Css_gen[86], [0, 4100410, 10.]), _k_],
    _m_ = [0, caml_call2(Css_gen[21], "cursor", "pointer"), _l_],
    _n_ =
      [0,
       caml_call5
        (Css_gen[74],
         [0, [0, 4100410, 0.]],
         [0, [0, 4100410, 0.]],
         [0, [0, 4100410, 0.6]],
         [0, [0, 4100410, 0.6]],
         0),
       _m_],
    pill = caml_call1(Css_gen[31], _n_);
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_typeahead);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_typeahead_St);
   var
    Bonsai_web_ui_typeahead_Styles =
      [0, full_width, typeahead, pill, pill_container];
   runtime.caml_register_global
    (35, Bonsai_web_ui_typeahead_Styles, cst_Bonsai_web_ui_typeahead_St);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,
