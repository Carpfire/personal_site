// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Univ__
(function
  (globalThis){
   "use strict";
   var runtime = globalThis.jsoo_runtime, Univ = [0], Univ$0 = [0, Univ];
   runtime.caml_register_global(0, Univ$0, "Univ__");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Univ__Import
//# unitInfo: Requires: Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Univ_Import = "Univ__Import",
    cst_univ = "univ";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Univ_Import);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_univ);
   caml_call1(Ppx_expect_runtime[1][1], "univ/src/import.ml");
   caml_call2(Ppx_inline_test_lib[6], cst_univ, "import.ml");
   caml_call1(Ppx_inline_test_lib[7], cst_univ);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Univ_Import);
   var Univ_Import = [0];
   runtime.caml_register_global(11, Univ_Import, cst_Univ_Import);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Univ
//# unitInfo: Requires: Core, Core__Type_equal, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Univ$0 = "Univ",
    cst_univ$0 = "univ",
    cst_univ_src_univ_ml = "univ/src/univ.ml";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Core_Type_equal = global_data.Core__Type_equal,
    Core = global_data.Core,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Univ$0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][1], cst_univ$0);
   caml_call1(Ppx_expect_runtime[1][1], cst_univ_src_univ_ml);
   caml_call2(Ppx_inline_test_lib[6], cst_univ$0, "univ.ml");
   var
    View = [0],
    _a_ = [0, "_"],
    cst_Univ_match_exn_called_with =
      "Univ.match_exn called with mismatched value and type id",
    _b_ = [0, cst_univ_src_univ_ml, 29, 678, 690],
    cst_univ = cst_univ$0,
    cst_Univ = cst_Univ$0;
   function view(_e_){return _e_;}
   function create(id, value){return [0, id, value];}
   function type_id_name(param){
    var id = param[1];
    return caml_call1(Core_Type_equal[8][5], id);
   }
   function type_id_uid(param){
    var id = param[1];
    return caml_call1(Core_Type_equal[8][2], id);
   }
   function sexp_of_t(param){
    var value = param[2], id = param[1];
    return caml_call2(Core_Type_equal[8][6], id, value);
   }
   function does_match(param, id2){
    var id1 = param[1];
    return caml_call2(Core_Type_equal[8][8], id1, id2);
   }
   function match(param, id2){
    var value = param[2], id1 = param[1];
    return caml_call2(Core_Type_equal[8][9], id1, id2) ? [0, value] : 0;
   }
   function match_exn(t, id2){
    var value = t[2], id1 = t[1];
    if(caml_call2(Core_Type_equal[8][9], id1, id2)) return value;
    function _c_(param){
     var
      arg1_002 = param[2],
      arg0_001 = param[1],
      res0_003 = sexp_of_t(arg0_001);
     function _d_(param){return _a_;}
     var res1_004 = caml_call2(Core_Type_equal[8][1], _d_, arg1_002);
     return [1, [0, res0_003, [0, res1_004, 0]]];
    }
    return caml_call5
            (Core[247],
             0,
             _b_,
             cst_Univ_match_exn_called_with,
             [0, t, id2],
             _c_);
   }
   caml_call1(Ppx_inline_test_lib[7], cst_univ);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Univ);
   var
    Univ =
      [0,
       sexp_of_t,
       type_id_name,
       type_id_uid,
       create,
       does_match,
       match,
       match_exn,
       View,
       view];
   runtime.caml_register_global(16, Univ, cst_Univ$0);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJ1bml2LmNtYS5qcyIsInNvdXJjZVJvb3QiOiIiLCJuYW1lcyI6WyJ2aWV3IiwiY3JlYXRlIiwiaWQiLCJ2YWx1ZSIsInR5cGVfaWRfbmFtZSIsInR5cGVfaWRfdWlkIiwic2V4cF9vZl90IiwiZG9lc19tYXRjaCIsImlkMiIsImlkMSIsIm1hdGNoIiwibWF0Y2hfZXhuIiwidCIsImFyZzFfMDAyIiwiYXJnMF8wMDEiLCJyZXMwXzAwMyIsInJlczFfMDA0Il0sInNvdXJjZXMiOlsiL2hvbWUvbGlhbS1jYXJwZW50ZXIvLm9wYW0vcGVyc29uYWwtc2l0ZS9saWIvY29yZV9rZXJuZWwvdW5pdi91bml2X18ubWwiLCIvaG9tZS9saWFtLWNhcnBlbnRlci8ub3BhbS9wZXJzb25hbC1zaXRlL2xpYi9jb3JlX2tlcm5lbC91bml2L3VuaXYubWwiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7R0FLZ0IsdUNBQUE7OztFOzs7Ozs7Ozs7Ozs7Rzs7Ozs7Rzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7RTs7Ozs7Ozs7Ozs7OztHOzs7OztHOzs7OztHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7R0NERjtJQUFBOzs7Ozs7O1lBTVZBLFU7WUFDQUMsT0FBT0MsSUFBR0MsT0FBUSxXQUFYRCxJQUFHQyxPQUFxQjtZQUMvQkM7UUFBaUJGO0lBQVUsT0FBQSxrQ0FBVkE7O1lBQ2pCRztRQUFnQkg7SUFBVSxPQUFBLGtDQUFWQTs7WUFDaEJJO1FBQWtCSCxrQkFBSkQ7SUFBYyxPQUFBLGtDQUFkQSxJQUFJQzs7WUFDbEJJLGtCQUF3QkM7UUFBVEM7SUFBZSxPQUFBLGtDQUFmQSxLQUFTRDs7WUFFeEJFLGFBQWtDRjtJQUEzQixJQUFrQkwsa0JBQUxNO1dBQ2hCLGtDQURnQkEsS0FBY0QsV0FBVEw7R0FHYjtZQUdaUSxVQUFtQkMsR0FBdUJKO0lBQWhDLElBQWtCTCxRQUFUUyxNQUFJSCxNQUFKRztPQUNmLGtDQURtQkgsS0FBbUJELE1BRXBCLE9BRk1MOzs7TUFRZlU7TUFBQUM7TUFBQUMsV0FqQmJULFVBaUJhUTt5QjtTQUFBRSxrREFBQUg7b0JBQUFFLGNBQUFDOzs7Ozs7O2lCQVJNSixHQUF1Qko7O0dBUWxCOzs7Ozs7OztPQWpCeEJGO09BRkFGO09BQ0FDO09BRkFKO09BSUFNO09BRUFHO09BTUFDOztPQWJBWDs7O0UiLCJzb3VyY2VzQ29udGVudCI6WyIoKiBnZW5lcmF0ZWQgYnkgZHVuZSAqKVxuXG4oKiogQGNhbm9uaWNhbCBVbml2LkltcG9ydCAqKVxubW9kdWxlIEltcG9ydCA9IFVuaXZfX0ltcG9ydFxuXG5tb2R1bGUgVW5pdl9fID0gc3RydWN0IGVuZFxuW0BAZGVwcmVjYXRlZCBcInRoaXMgbW9kdWxlIGlzIHNoYWRvd2VkXCJdXG4iLCJvcGVuISBDb3JlXG5vcGVuISBJbXBvcnRcbm1vZHVsZSBJZCA9IFR5cGVfZXF1YWwuSWRcblxubW9kdWxlIFZpZXcgPSBzdHJ1Y3RcbiAgdHlwZSB0ID0gVCA6ICdhIElkLnQgKiAnYSAtPiB0XG5lbmRcblxuaW5jbHVkZSBWaWV3XG5cbmxldCB2aWV3ID0gRm4uaWRcbmxldCBjcmVhdGUgaWQgdmFsdWUgPSBUIChpZCwgdmFsdWUpXG5sZXQgdHlwZV9pZF9uYW1lIChUIChpZCwgXykpID0gSWQubmFtZSBpZFxubGV0IHR5cGVfaWRfdWlkIChUIChpZCwgXykpID0gSWQudWlkIGlkXG5sZXQgc2V4cF9vZl90IChUIChpZCwgdmFsdWUpKSA9IElkLnRvX3NleHAgaWQgdmFsdWVcbmxldCBkb2VzX21hdGNoIChUIChpZDEsIF8pKSBpZDIgPSBJZC5zYW1lIGlkMSBpZDJcblxubGV0IG1hdGNoXyAodHlwZSBhKSAoVCAoaWQxLCB2YWx1ZSkpIChpZDIgOiBhIElkLnQpID1cbiAgbWF0Y2ggSWQuc2FtZV93aXRuZXNzIGlkMSBpZDIgd2l0aFxuICB8IFNvbWUgVHlwZV9lcXVhbC5UIC0+IFNvbWUgKHZhbHVlIDogYSlcbiAgfCBOb25lIC0+IE5vbmVcbjs7XG5cbmxldCBtYXRjaF9leG4gKHR5cGUgYSkgKFQgKGlkMSwgdmFsdWUpIGFzIHQpIChpZDIgOiBhIElkLnQpID1cbiAgbWF0Y2ggSWQuc2FtZV93aXRuZXNzIGlkMSBpZDIgd2l0aFxuICB8IFNvbWUgVHlwZV9lcXVhbC5UIC0+ICh2YWx1ZSA6IGEpXG4gIHwgTm9uZSAtPlxuICAgIGZhaWx3aXRoc1xuICAgICAgfmhlcmU6WyVoZXJlXVxuICAgICAgXCJVbml2Lm1hdGNoX2V4biBjYWxsZWQgd2l0aCBtaXNtYXRjaGVkIHZhbHVlIGFuZCB0eXBlIGlkXCJcbiAgICAgICh0LCBpZDIpXG4gICAgICBbJXNleHBfb2Y6IHQgKiBfIElkLnRdXG47O1xuIl19
