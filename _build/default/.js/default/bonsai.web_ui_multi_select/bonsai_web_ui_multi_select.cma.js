// Generated by js_of_ocaml
//# buildInfo:effects=false, kind=cma, use-js-string=true, version=5.6.0

//# unitInfo: Provides: Bonsai_web_ui_multi_select__
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    Bonsai_web_ui_multi_select = [0],
    Bonsai_web_ui_multi_select$0 = [0, Bonsai_web_ui_multi_select];
   runtime.caml_register_global
    (0, Bonsai_web_ui_multi_select$0, "Bonsai_web_ui_multi_select__");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_multi_select__Import
//# unitInfo: Requires: Bonsai_web, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_multi_select = "Bonsai_web_ui_multi_select__Import",
    cst_bonsai_web_ui_multi_select = "bonsai_web_ui_multi_select";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Bonsai_web = global_data.Bonsai_web;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_multi_select);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_multi_select);
   caml_call1(Ppx_expect_runtime[1][1], "web_ui/multi_select/src/import.ml");
   caml_call2
    (Ppx_inline_test_lib[6], cst_bonsai_web_ui_multi_select, "import.ml");
   var
    Arrow_deprecated = Bonsai_web[1],
    am_running_how = Bonsai_web[2],
    am_within_disabled_fieldset = Bonsai_web[3],
    For_bonsai_internal = Bonsai_web[4],
    Effect = Bonsai_web[5],
    Html_syntax = Bonsai_web[6],
    Cont = Bonsai_web[7];
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_multi_select);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_multi_select);
   var
    Bonsai_web_ui_multi_select_Imp =
      [0,
       Arrow_deprecated,
       am_running_how,
       am_within_disabled_fieldset,
       For_bonsai_internal,
       Effect,
       Html_syntax,
       Cont];
   runtime.caml_register_global
    (12, Bonsai_web_ui_multi_select_Imp, cst_Bonsai_web_ui_multi_select);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_multi_select__Selection_status
//# unitInfo: Requires: Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Sexplib0__Sexp_conv_error
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_multi_select$0 =
      "Bonsai_web_ui_multi_select__Selection_status",
    cst_Selected = "Selected",
    cst_Unselected = "Unselected",
    cst_bonsai_web_ui_multi_select$0 = "bonsai_web_ui_multi_select",
    cst_selected = "selected",
    cst_unselected = "unselected",
    caml_string_notequal = runtime.caml_string_notequal;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    error_source_007 = "web_ui/multi_select/src/selection_status.ml.t",
    Sexplib0_Sexp_conv_error = global_data.Sexplib0__Sexp_conv_error,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_multi_select$0);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_multi_select$0);
   caml_call1
    (Ppx_expect_runtime[1][1], "web_ui/multi_select/src/selection_status.ml");
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_multi_select$0,
     "selection_status.ml");
   var
    compare = runtime.caml_int_compare,
    _a_ = [0, cst_Unselected],
    _b_ = [0, cst_Selected],
    cst_bonsai_web_ui_multi_select = cst_bonsai_web_ui_multi_select$0,
    cst_Bonsai_web_ui_multi_select = cst_Bonsai_web_ui_multi_select$0;
   function equal(_h_, _g_){return _h_ === _g_ ? 1 : 0;}
   function t_of_sexp(sexp_008){
    a:
    {
     if(0 === sexp_008[0]){
      var _c_ = sexp_008[1];
      b:
      if(caml_string_notequal(_c_, cst_Selected)){
       if(caml_string_notequal(_c_, cst_Unselected)){
        if(! caml_string_notequal(_c_, cst_selected)) break b;
        if(caml_string_notequal(_c_, cst_unselected)) break a;
       }
       return 1;
      }
      return 0;
     }
     var _d_ = sexp_008[1];
     if(! _d_)
      return caml_call2
              (Sexplib0_Sexp_conv_error[11], error_source_007, sexp_008);
     var _e_ = _d_[1];
     if(0 !== _e_[0])
      return caml_call2
              (Sexplib0_Sexp_conv_error[10], error_source_007, sexp_008);
     var _f_ = _e_[1];
     b:
     if(caml_string_notequal(_f_, cst_Selected)){
      if(caml_string_notequal(_f_, cst_Unselected)){
       if(! caml_string_notequal(_f_, cst_selected)) break b;
       if(caml_string_notequal(_f_, cst_unselected)) break a;
      }
      return caml_call2
              (Sexplib0_Sexp_conv_error[7], error_source_007, sexp_008);
     }
     return caml_call2
             (Sexplib0_Sexp_conv_error[7], error_source_007, sexp_008);
    }
    return caml_call2
            (Sexplib0_Sexp_conv_error[12], error_source_007, sexp_008);
   }
   function sexp_of_t(param){return param ? _a_ : _b_;}
   function toggle(param){return param ? 0 : 1;}
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_multi_select);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_multi_select);
   var
    Bonsai_web_ui_multi_select_Sel =
      [0, compare, t_of_sexp, sexp_of_t, equal, toggle];
   runtime.caml_register_global
    (23, Bonsai_web_ui_multi_select_Sel, cst_Bonsai_web_ui_multi_select$0);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_multi_select__Single_factor_intf
//# unitInfo: Requires: Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_multi_select =
      "Bonsai_web_ui_multi_select__Single_factor_intf",
    cst_bonsai_web_ui_multi_select = "bonsai_web_ui_multi_select";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_multi_select);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_multi_select);
   caml_call1
    (Ppx_expect_runtime[1][1],
     "web_ui/multi_select/src/single_factor_intf.ml");
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_multi_select,
     "single_factor_intf.ml");
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_multi_select);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_multi_select);
   var Bonsai_web_ui_multi_select_Sin = [0];
   runtime.caml_register_global
    (11, Bonsai_web_ui_multi_select_Sin, cst_Bonsai_web_ui_multi_select);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_multi_select__Single_factor
//# unitInfo: Requires: Bonsai, Bonsai_web, Bonsai_web_ui_multi_select__Selection_status, Core, Core__List, Core__Map, Core__Option, Core__Sequence, Core__Set, Core__Source_code_position, Core__String, Js_of_ocaml__Firebug, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Vdom_input_widgets, Vdom_keyboard__Keyboard_event_handler, Vdom_keyboard__Keystroke, Virtual_dom__Effect, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst$5 = "",
    cst_Bonsai_web_ui_multi_select =
      "Bonsai_web_ui_multi_select__Single_factor",
    cst_bonsai_web_ui_multi_select = "bonsai_web_ui_multi_select",
    cst_checked$1 = "checked",
    cst_web_ui_multi_select_src_si =
      "web_ui/multi_select/src/single_factor.ml",
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   function caml_call8(f, a0, a1, a2, a3, a4, a5, a6, a7){
    return (f.l >= 0 ? f.l : f.l = f.length) == 8
            ? f(a0, a1, a2, a3, a4, a5, a6, a7)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst$4 = cst$5,
    cst$3 = "; ",
    cst = "*",
    cst$2 = " ",
    cst$0 = "->",
    cst$1 = "  ",
    Bonsai = global_data.Bonsai,
    Vdom_keyboard_Keyboard_event_h =
      global_data.Vdom_keyboard__Keyboard_event_handler,
    Vdom_keyboard_Keystroke = global_data.Vdom_keyboard__Keystroke,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Core_Option = global_data.Core__Option,
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Bonsai_web = global_data.Bonsai_web,
    Virtual_dom_Effect = global_data.Virtual_dom__Effect,
    Core = global_data.Core,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    Js_of_ocaml_Firebug = global_data.Js_of_ocaml__Firebug,
    Assert_failure = global_data.Assert_failure,
    Core_Set = global_data.Core__Set,
    Core_List = global_data.Core__List,
    Vdom_input_widgets = global_data.Vdom_input_widgets,
    Core_String = global_data.Core__String,
    Core_Map = global_data.Core__Map,
    Bonsai_web_ui_multi_select_Sel =
      global_data.Bonsai_web_ui_multi_select__Selection_status,
    Core_Sequence = global_data.Core__Sequence,
    Core_Source_code_position = global_data.Core__Source_code_position,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_multi_select);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_multi_select);
   caml_call1(Ppx_expect_runtime[1][1], cst_web_ui_multi_select_src_si);
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_multi_select,
     "single_factor.ml");
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_multi_select);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_multi_select);
   var
    _B_ = [0, [0, cst_web_ui_multi_select_src_si, 463, 15179, 15183]],
    _z_ = [4, 892857107],
    _y_ = [4, 870035731],
    _x_ = [0, 0],
    cst_Toggle_whether_focused_ite = "Toggle whether focused item is selected",
    cst_Move_focus_one_item_down = "Move focus one item down",
    cst_Move_focus_one_item_up = "Move focus one item up",
    cst_multi_select_header = "multi-select-header",
    cst_multi_select_container = "multi-select-container",
    _w_ = [0, cst_web_ui_multi_select_src_si, 311, 20],
    cst_checked = cst_checked$1,
    cst_checked$0 = cst_checked$1,
    cst_checkbox = "checkbox",
    cst_multi_select_item_focused = "multi-select-item-focused",
    cst_multi_select_item = "multi-select-item",
    cst_multi_select_checkboxes = "multi-select-checkboxes",
    cst_about_blank = "about:blank",
    cst_multi_select_select_none = "multi-select-select-none",
    cst_none = "none",
    cst_multi_select_select_all = "multi-select-select-all",
    cst_all = "all",
    cst_Select = "Select: ",
    cst_multi_select_select_all_no = "multi-select-select-all-none",
    _u_ = [0, cst$5],
    _v_ = [0, 1],
    cst_s_s_Item = "%s %s %{Item}",
    _r_ = [0, 0],
    _s_ =
      [0,
       [11, "Search string: '", [2, 0, [12, 39, 0]]],
       "Search string: '%s'"],
    _t_ = [0, "\n"],
    _p_ = [0, -128674501],
    _q_ = [0, 608542111],
    _d_ = [0, "Toggle_focused_item_selected"],
    _e_ = [0, "Select_all"],
    _f_ = [0, "Select_none"],
    _g_ = [0, "Update_search_string"],
    _h_ = [0, "status"],
    _i_ = [0, "item"],
    _j_ = [0, "Set_item_selected"],
    _k_ = [0, "Set_all_selection_statuses"],
    _l_ = [0, "Set_focus"],
    _m_ = [0, "Prev"],
    _o_ = [0, "Next"],
    _n_ = [0, "Move_focus"],
    _b_ = [0, "focused_item"],
    _c_ = [0, "selection_status"],
    _a_ = [0, cst_web_ui_multi_select_src_si, 39, 986, 1034],
    _A_ = [0, cst_web_ui_multi_select_src_si, 427, 14254, 14300],
    Bonsai_web_ui_multi_select_Sin =
      [0,
       function(Item){
        var Result = [0];
        function apply_action(param, input, model, new_search){return new_search;
        }
        function compute(inject, all_items, search_string){
         function _a$_(item){
          var _ba_ = caml_call1(Item[24], item);
          return caml_call2(Core_String[120][5], _ba_, search_string);
         }
         var
          items_matching_search = caml_call2(Core_Set[49], all_items, _a$_);
         return [0, items_matching_search, inject, search_string];
        }
        var name = caml_call1(Core_Source_code_position[4], _a_);
        function create
        (extra_row_attrs, opt, id, header, allow_updates_when_focused, param){
         if(opt)
          var sth = opt[1], autofocus_search_box = sth;
         else
          var autofocus_search_box = 0;
         return [0,
                 header,
                 autofocus_search_box,
                 id,
                 extra_row_attrs,
                 allow_updates_when_focused];
        }
        var View_config = [0, create], Input = [0];
        function sexp_of_t(param){
         var
          focused_item_018 = param[2],
          selection_status_016 = param[1],
          arg_019 = caml_call2(Core[515], Item[1], focused_item_018),
          bnds_015 = [0, [1, [0, _b_, [0, arg_019, 0]]], 0],
          arg_017 =
            caml_call3
             (Core_Map[132],
              [0, Item[1]],
              Bonsai_web_ui_multi_select_Sel[3],
              selection_status_016),
          bnds_015$0 = [0, [1, [0, _c_, [0, arg_017, 0]]], bnds_015];
         return [1, bnds_015$0];
        }
        function sexp_of_t$0(param){
         if(typeof param === "number")
          switch(param){
            case 0:
             return _d_;
            case 1:
             return _e_;
            default: return _f_;
          }
         switch(param[0]){
           case 0:
            var
             arg0_020 = param[1],
             res0_021 = caml_call1(Core[558], arg0_020);
            return [1, [0, _g_, [0, res0_021, 0]]];
           case 1:
            var
             status_025 = param[2],
             item_023 = param[1],
             arg_026 =
               caml_call1(Bonsai_web_ui_multi_select_Sel[3], status_025),
             bnds_022 = [0, [1, [0, _h_, [0, arg_026, 0]]], 0],
             arg_024 = caml_call1(Item[1], item_023),
             bnds_022$0 = [0, [1, [0, _i_, [0, arg_024, 0]]], bnds_022];
            return [1, [0, _j_, bnds_022$0]];
           case 2:
            var
             arg0_027 = param[1],
             res0_028 =
               caml_call2
                (Item[22][4], Bonsai_web_ui_multi_select_Sel[3], arg0_027);
            return [1, [0, _k_, [0, res0_028, 0]]];
           case 3:
            var
             arg0_029 = param[1],
             res0_030 = caml_call2(Core[515], Item[1], arg0_029);
            return [1, [0, _l_, [0, res0_030, 0]]];
           default:
            var
             arg0_031 = param[1],
             res0_032 = 892857107 <= arg0_031 ? _m_ : _o_;
            return [1, [0, _n_, [0, res0_032, 0]]];
         }
        }
        var Action = [0, sexp_of_t$0], Result$0 = [0];
        function focused_item(input, model){
         function _a__(focus){
          return caml_call2(Core_Set[11], input[1], focus) ? [0, focus] : 0;
         }
         return caml_call2(Core_Option[32], model[2], _a__);
        }
        function apply_action$0(context, input, model, action){
         if(typeof action === "number")
          switch(action){
            case 0:
             var match = focused_item(input, model);
             if(! match) return model;
             var
              focused_item$0 = match[1],
              _a4_ =
                function(status){
                 var status$0 = caml_call2(Core_Option[39], status, input[4]);
                 return caml_call1
                         (Bonsai_web_ui_multi_select_Sel[5], status$0);
                },
              selection_status =
                caml_call3(Core_Map[43], model[1], focused_item$0, _a4_);
             return [0, selection_status, model[2]];
            case 1:
             var
              _a5_ =
                function(map, item){
                 return caml_call3(Core_Map[38], map, item, 0);
                },
              selection_status$0 =
                caml_call3(Core_Set[50], input[1], model[1], _a5_);
             return [0, selection_status$0, model[2]];
            default:
             var
              _a6_ =
                function(map, item){
                 return caml_call3(Core_Map[38], map, item, 1);
                },
              selection_status$1 =
                caml_call3(Core_Set[50], input[1], model[1], _a6_);
             return [0, selection_status$1, model[2]];
          }
         switch(action[0]){
           case 0:
            var
             search_string = action[1],
             _a7_ =
               function(focused_item){
                return caml_call2(Core_Set[11], input[1], focused_item)
                        ? [0, focused_item]
                        : 0;
               },
             focused_item$1 = caml_call2(Core_Option[32], model[2], _a7_),
             _a8_ = caml_call1(input[2], search_string);
            caml_call2(Bonsai[16][2], context, _a8_);
            return [0, model[1], focused_item$1];
           case 1:
            var status = action[2], item = action[1], _a9_ = model[2];
            return [0, caml_call3(Core_Map[38], model[1], item, status), _a9_];
           case 2:
            var selection_status$2 = action[1];
            return [0, selection_status$2, model[2]];
           case 3:
            var item$0 = action[1]; return [0, model[1], item$0];
           default:
            var
             dir = action[1],
             element$0 = focused_item(input, model),
             set = input[1];
            if(element$0)
             var
              element = element$0[1],
              sequence =
                892857107 <= dir
                 ? caml_call4(Core_Set[68], _p_, 0, [0, element], set)
                 : caml_call4(Core_Set[68], _q_, [0, element], 0, set),
              focused_item$2 = caml_call2(Core_Sequence[55], sequence, 1);
            else
             var
              focused_item$2 =
                892857107 <= dir
                 ? caml_call1(Core_Set[60], set)
                 : caml_call1(Core_Set[58], set);
            if(! focused_item$2) return model;
            var focused_item$3 = focused_item$2[1];
            return [0, model[1], [0, focused_item$3]];
         }
        }
        function compute$0(inject, input, model){
         function _U_(param){
          var status = param[2], item = param[1];
          return status ? 0 : [0, item];
         }
         var
          _V_ = caml_call2(Core_Map[81], 0, model[1]),
          _W_ = caml_call2(Core_List[13], _V_, _U_),
          explicitly_selected = caml_call1(Item[23][9], _W_);
         if(input[4])
          var defaults = Item[23][6];
         else
          var
           _X_ = caml_call1(Core_Set[74], model[1]),
           defaults = caml_call2(Core_Set[17], input[3], _X_);
         var
          selected_items =
            caml_call2(Core_Set[14], explicitly_selected, defaults),
          allow_updates_when_focused = input[6][5];
         function command(cond, keys, description, f){
          if(cond)
           var
            cond$0 = cond[1],
            handler =
              caml_call3(Vdom_keyboard_Keyboard_event_h[2][4], _x_, cond$0, f);
          else
           var handler = caml_call1(Vdom_keyboard_Keyboard_event_h[2][3], f);
          return [0, keys, description, 0, handler];
         }
         var key = Vdom_keyboard_Keystroke[42], _al_ = 0;
         function _am_(ev){return caml_call1(inject, 0);}
         var
          _an_ =
            [0,
             command
              (0,
               [0, caml_call5(key, 0, 0, 0, 0, 40), 0],
               cst_Toggle_whether_focused_ite,
               _am_),
             _al_];
         function _ao_(ev){return caml_call1(inject, _y_);}
         var
          _ap_ =
            [0,
             command
              (0,
               [0, caml_call5(key, 0, 0, 0, 0, 97), 0],
               cst_Move_focus_one_item_down,
               _ao_),
             _an_];
         function _aq_(ev){return caml_call1(inject, _z_);}
         var
          _ar_ =
            [0,
             command
              (0,
               [0, caml_call5(key, 0, 0, 0, 0, 96), 0],
               cst_Move_focus_one_item_up,
               _aq_),
             _ap_],
          _as_ = caml_call1(Vdom_keyboard_Keyboard_event_h[8], _ar_),
          _at_ =
            [246,
             function(_aX_){
              function _aT_(item){
               var match = model[2];
               if(match)
                var
                 item$0 = match[1],
                 is_focused = caml_call2(Item[4], item, item$0);
               else
                var is_focused = 0;
               var
                _aY_ = input[4],
                _aZ_ = caml_call2(Core_Map[44], model[1], item),
                is_selected = caml_call2(Core_Option[39], _aZ_, _aY_) ? 0 : 1,
                _a0_ = is_selected ? cst : cst$2,
                _a1_ = is_focused ? cst$0 : cst$1,
                _a2_ = 0,
                _a3_ =
                  [0,
                   [2,
                    0,
                    [12,
                     32,
                     [2,
                      0,
                      [12,
                       32,
                       [24,
                        _r_,
                        function(param, custom_printf_033){
                         return caml_call1(Item[24], custom_printf_033);
                        },
                        _a2_]]]]],
                   cst_s_s_Item];
               return caml_call4(Core[265], _a3_, _a1_, _a0_, item);
              }
              var
               _aU_ = caml_call1(Core_Set[39], input[1]),
               _aV_ = caml_call2(Core_List[51], _aU_, _aT_),
               _aW_ = [0, caml_call2(Core[265], _s_, input[5]), _aV_];
              return caml_call2(Core_String[46], _t_, _aW_);
             }];
         function link(text, action, class$0){
          var
           _aK_ = [0, caml_call1(Virtual_dom_Node[6], text), 0],
           _aL_ = 0,
           _aM_ = [0, caml_call1(Virtual_dom_Vdom[1][16], class$0), 0];
          function _aN_(ev){
           if(caml_call1(Bonsai_web[3], ev)) return Virtual_dom_Effect[20];
           var
            _aR_ = [0, Virtual_dom_Effect[20], 0],
            _aS_ = [0, caml_call1(inject, action), _aR_];
           return [0, Virtual_dom_Effect[2], _aS_];
          }
          var
           _aO_ = [0, caml_call1(Virtual_dom_Vdom[1][61], _aN_), _aM_],
           _aP_ =
             [0, caml_call1(Virtual_dom_Vdom[1][23], cst_about_blank), _aO_],
           _aQ_ = [0, [0, caml_call1(Virtual_dom_Vdom[1][10], _aP_), _aL_]];
          return caml_call3(Virtual_dom_Node[8], 0, _aQ_, _aK_);
         }
         var
          ___ = [0, link(cst_none, 2, cst_multi_select_select_none), 0],
          _$_ = [0, caml_call1(Virtual_dom_Node[6], cst$3), ___],
          _aa_ = [0, link(cst_all, 1, cst_multi_select_select_all), _$_],
          _ab_ = [0, caml_call1(Virtual_dom_Node[6], cst_Select), _aa_],
          _ac_ =
            [0,
             [0,
              caml_call1
               (Virtual_dom_Vdom[1][16], cst_multi_select_select_all_no),
              0]],
          select_all_and_none_view =
            caml_call3(Virtual_dom_Node[17], 0, _ac_, _ab_),
          id = input[6][3],
          autofocus = input[6][2];
         function on_input(param){
          if(! param) return caml_call1(inject, _u_);
          var text = param[1];
          return caml_call1(inject, [0, text]);
         }
         var
          _Y_ =
            caml_call3
             (Core_Option[41],
              id,
              Virtual_dom_Vdom[1][11],
              Virtual_dom_Vdom[1][25]),
          _Z_ = caml_call1(Virtual_dom_Vdom[1][14], autofocus),
          extra_attrs = caml_call2(Virtual_dom_Vdom[1][13], _Z_, _Y_),
          search_box =
            caml_call2
             (caml_call8
               (Vdom_input_widgets[9][5],
                [0, [0, extra_attrs, 0]],
                0,
                0,
                0,
                _v_,
                0,
                [0, input[5]],
                on_input),
              allow_updates_when_focused,
              0);
         function _ag_(param){return Virtual_dom_Vdom[1][11];}
         var
          extra_row_attrs = caml_call2(Core_Option[39], input[6][4], _ag_),
          focused_item$0 = focused_item(input, model);
         function _ad_(item){
          function _au_(ev, new_value){
           var match = caml_call1(Js_of_ocaml_Js[5][10], ev.target);
           if(match){
            var t3 = match[1], value = t3.checked, status = value | 0 ? 0 : 1;
            return caml_call1(inject, [1, item, status]);
           }
           Js_of_ocaml_Firebug[1].error("Target missing");
           throw caml_maybe_attach_backtrace([0, Assert_failure, _w_], 1);
          }
          var
           on_change = caml_call1(Virtual_dom_Vdom[1][58], _au_),
           _av_ = [0, caml_call2(Virtual_dom_Vdom[1][4], cst_checked, 1), 0],
           checked_attrs = [0, Virtual_dom_Vdom[1][15], _av_],
           unchecked_attrs =
             [0, caml_call2(Virtual_dom_Vdom[1][4], cst_checked$0, 0), 0],
           _aw_ = 0,
           _ax_ = 0,
           checked_attrs$0 =
             caml_call2(Core_Set[11], selected_items, item)
              ? checked_attrs
              : unchecked_attrs,
           _ay_ =
             [0,
              on_change,
              [0, caml_call1(Virtual_dom_Vdom[1][43], cst_checkbox), 0]],
           _az_ = caml_call2(Core[156], _ay_, checked_attrs$0),
           _aA_ = [0, [0, caml_call1(Virtual_dom_Vdom[1][10], _az_), _ax_]],
           checkbox = caml_call3(Virtual_dom_Node[30], 0, _aA_, _aw_),
           x_034 = [0, item];
          function _aB_(a_038, b_039){
           return caml_call2(Item[9], a_038, b_039);
          }
          var
           is_focused =
             0 === caml_call3(Core[509], _aB_, x_034, focused_item$0) ? 1 : 0,
           extra_attrs = caml_call1(extra_row_attrs, is_focused);
          if(is_focused)
           var
            _aC_ =
              [0,
               extra_attrs,
               [0,
                caml_call1
                 (Virtual_dom_Vdom[1][16], cst_multi_select_item_focused),
                0]],
            focus_attrs = caml_call1(Virtual_dom_Vdom[1][9], _aC_);
          else
           var focus_attrs = extra_attrs;
          function _aD_(ev){
           if(caml_call1(Bonsai_web[3], ev)) return Virtual_dom_Effect[1];
           var
            _aI_ = [0, caml_call1(inject, 0), 0],
            _aJ_ = [0, caml_call1(inject, [3, [0, item]]), _aI_];
           return [0, Virtual_dom_Effect[2], _aJ_];
          }
          var
           on_click = caml_call1(Virtual_dom_Vdom[1][61], _aD_),
           _aE_ = caml_call1(Item[24], item),
           _aF_ = [0, caml_call1(Virtual_dom_Node[6], _aE_), 0],
           _aG_ =
             [0,
              checkbox,
              [0, caml_call3(Virtual_dom_Node[37], 0, 0, _aF_), 0]],
           _aH_ =
             [0,
              [0,
               on_click,
               [0,
                caml_call1(Virtual_dom_Vdom[1][16], cst_multi_select_item),
                [0, focus_attrs, 0]]]];
          return caml_call3(Virtual_dom_Node[17], 0, _aH_, _aG_);
         }
         var
          _ae_ = caml_call1(Core_Set[39], input[1]),
          checkboxes = caml_call2(Core_List[51], _ae_, _ad_),
          _af_ =
            [0,
             [0,
              caml_call1(Virtual_dom_Vdom[1][16], cst_multi_select_checkboxes),
              0]],
          checkboxes$0 = caml_call3(Virtual_dom_Node[17], 0, _af_, checkboxes),
          _ah_ = [0, input[6][1], 0],
          _ai_ =
            [0,
             [0,
              caml_call1(Virtual_dom_Vdom[1][16], cst_multi_select_header),
              0]],
          _aj_ =
            [0,
             caml_call3(Virtual_dom_Node[17], 0, _ai_, _ah_),
             [0,
              search_box,
              [0, select_all_and_none_view, [0, checkboxes$0, 0]]]],
          _ak_ =
            [0,
             [0,
              caml_call1(Virtual_dom_Vdom[1][16], cst_multi_select_container),
              0]];
         return [0,
                 caml_call3(Virtual_dom_Node[17], 0, _ak_, _aj_),
                 _at_,
                 _as_,
                 inject,
                 selected_items];
        }
        var name$0 = caml_call1(Core_Source_code_position[4], _A_);
        function create$0(opt, selection_status, focused_item, param){
         if(opt)
          var sth = opt[1], search_string = sth;
         else
          var search_string = cst$4;
         return [0, search_string, selection_status, focused_item];
        }
        var Initial_model_settings = [0, create$0];
        function bonsai(opt, _E_, view_config, all_items){
         if(opt)
          var sth = opt[1], initial_model_settings = sth;
         else
          var
           initial_model_settings =
             caml_call4(Initial_model_settings[1], 0, 0, 0, 0);
         if(_E_)
          var sth$0 = _E_[1], default_selection_status = sth$0;
         else
          var default_selection_status = caml_call1(Bonsai[2][1], 1);
         function _F_(search_results){
          function _H_(param){
           var
            _S_ = param[2],
            _T_ = _S_[2],
            match = _T_[2],
            current_search = match[3],
            update_search = match[2],
            items_matching_search = match[1],
            default_selection_status = _T_[1],
            view_config = _S_[1],
            all_items = param[1];
           return [0,
                   items_matching_search,
                   update_search,
                   all_items,
                   default_selection_status,
                   current_search,
                   view_config];
          }
          var
           _I_ =
             caml_call2
              (Bonsai[49][5][7], default_selection_status, search_results),
           _J_ = caml_call2(Bonsai[49][5][7], view_config, _I_),
           _K_ = caml_call2(Bonsai[49][5][7], all_items, _J_),
           input_for_t = caml_call3(Bonsai[49][5][4], 0, _K_, _H_),
           focused_item = initial_model_settings[3],
           opt = initial_model_settings[2];
          if(opt)
           var sth = opt[1], selection_status = sth;
          else
           var selection_status = Item[22][5];
          var
           _G_ = [0, selection_status, focused_item],
           equal =
             [0,
              function(a_046, b_047){
               if(a_046 === b_047) return 1;
               var _L_ = b_047[1], _M_ = a_046[1];
               function _N_(a_011, b_012){
                return caml_call2
                        (Bonsai_web_ui_multi_select_Sel[4], a_011, b_012);
               }
               var _O_ = caml_call4(Core_Map[136], [0], _N_, _M_, _L_);
               if(! _O_) return _O_;
               var _P_ = b_047[2], _Q_ = a_046[2];
               function _R_(a_013, b_014){
                return caml_call2(Item[8], a_013, b_014);
               }
               return caml_call3(Core[511], _R_, _Q_, _P_);
              }];
          return caml_call2
                  (caml_call3
                    (Bonsai[24],
                     [0, sexp_of_t],
                     [0,
                      name$0,
                      Input,
                      [0, sexp_of_t],
                      Action,
                      Result$0,
                      apply_action$0,
                      compute$0],
                     equal),
                   _G_,
                   input_for_t);
         }
         var
          initial = initial_model_settings[1],
          _C_ =
            [0,
             function(a_001, b_002){
              return caml_call2(Core_String[145], a_001, b_002);
             }],
          _D_ =
            caml_call5
             (Bonsai[24],
              [0, Core_String[135]],
              [0,
               name,
               [0],
               [0, Core_String[135]],
               [0, Core_String[135]],
               Result,
               apply_action,
               compute],
              _C_,
              initial,
              all_items);
         return caml_call3(Bonsai[49][5][1], _B_, _D_, _F_);
        }
        return [0,
                View_config,
                Action,
                Result$0,
                Initial_model_settings,
                bonsai];
       }];
   runtime.caml_register_global
    (88, Bonsai_web_ui_multi_select_Sin, cst_Bonsai_web_ui_multi_select);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_multi_select__Multi_factor_intf
//# unitInfo: Requires: Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_multi_select =
      "Bonsai_web_ui_multi_select__Multi_factor_intf",
    cst_bonsai_web_ui_multi_select = "bonsai_web_ui_multi_select";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_multi_select);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_multi_select);
   caml_call1
    (Ppx_expect_runtime[1][1], "web_ui/multi_select/src/multi_factor_intf.ml");
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_multi_select,
     "multi_factor_intf.ml");
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_multi_select);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_multi_select);
   var Bonsai_web_ui_multi_select_Mul = [0];
   runtime.caml_register_global
    (11, Bonsai_web_ui_multi_select_Mul, cst_Bonsai_web_ui_multi_select);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_multi_select__Multi_factor
//# unitInfo: Requires: Ascii_table_kernel, Bonsai, Bonsai_web_ui_multi_select__Import, Bonsai_web_ui_multi_select__Single_factor, CamlinternalLazy, Core, Core__Fn, Core__List, Core__Map, Core__Option, Core__Set, Core__Source_code_position, Core__Unit, Focus_ring, Js_of_ocaml__Dom_html, Js_of_ocaml__Js, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime, Ui_effect, Vdom_keyboard__Keyboard_event_handler, Vdom_keyboard__Keystroke, Vdom_layout, Virtual_dom__Effect, Virtual_dom__Node, Virtual_dom__Vdom
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_multi_select =
      "Bonsai_web_ui_multi_select__Multi_factor",
    cst_bonsai_web_ui_multi_select = "bonsai_web_ui_multi_select",
    cst_web_ui_multi_select_src_mu = "web_ui/multi_select/src/multi_factor.ml",
    caml_maybe_attach_backtrace = runtime.caml_maybe_attach_backtrace;
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   function caml_call3(f, a0, a1, a2){
    return (f.l >= 0 ? f.l : f.l = f.length) == 3
            ? f(a0, a1, a2)
            : runtime.caml_call_gen(f, [a0, a1, a2]);
   }
   function caml_call4(f, a0, a1, a2, a3){
    return (f.l >= 0 ? f.l : f.l = f.length) == 4
            ? f(a0, a1, a2, a3)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3]);
   }
   function caml_call5(f, a0, a1, a2, a3, a4){
    return (f.l >= 0 ? f.l : f.l = f.length) == 5
            ? f(a0, a1, a2, a3, a4)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4]);
   }
   function caml_call6(f, a0, a1, a2, a3, a4, a5){
    return (f.l >= 0 ? f.l : f.l = f.length) == 6
            ? f(a0, a1, a2, a3, a4, a5)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5]);
   }
   function caml_call8(f, a0, a1, a2, a3, a4, a5, a6, a7){
    return (f.l >= 0 ? f.l : f.l = f.length) == 8
            ? f(a0, a1, a2, a3, a4, a5, a6, a7)
            : runtime.caml_call_gen(f, [a0, a1, a2, a3, a4, a5, a6, a7]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    cst$0 = "*",
    cst$1 = " ",
    cst = "; ",
    Assert_failure = global_data.Assert_failure,
    Core_Option = global_data.Core__Option,
    Bonsai = global_data.Bonsai,
    Core_Map = global_data.Core__Map,
    Core_Fn = global_data.Core__Fn,
    Bonsai_web_ui_multi_select_Imp =
      global_data.Bonsai_web_ui_multi_select__Import,
    Core_Set = global_data.Core__Set,
    Focus_ring = global_data.Focus_ring,
    Virtual_dom_Node = global_data.Virtual_dom__Node,
    Js_of_ocaml_Dom_html = global_data.Js_of_ocaml__Dom_html,
    Js_of_ocaml_Js = global_data.Js_of_ocaml__Js,
    CamlinternalLazy = global_data.CamlinternalLazy,
    Core = global_data.Core,
    Ascii_table_kernel = global_data.Ascii_table_kernel,
    Core_List = global_data.Core__List,
    Ui_effect = global_data.Ui_effect,
    Vdom_keyboard_Keyboard_event_h =
      global_data.Vdom_keyboard__Keyboard_event_handler,
    Vdom_keyboard_Keystroke = global_data.Vdom_keyboard__Keystroke,
    Virtual_dom_Vdom = global_data.Virtual_dom__Vdom,
    Virtual_dom_Effect = global_data.Virtual_dom__Effect,
    Vdom_layout = global_data.Vdom_layout,
    Bonsai_web_ui_multi_select_Sin =
      global_data.Bonsai_web_ui_multi_select__Single_factor,
    Core_Source_code_position = global_data.Core__Source_code_position,
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_multi_select);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_multi_select);
   caml_call1(Ppx_expect_runtime[1][1], cst_web_ui_multi_select_src_mu);
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_multi_select,
     "multi_factor.ml");
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_multi_select);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_multi_select);
   var
    _C_ = [0, cst_web_ui_multi_select_src_mu, 247, 11],
    _F_ = [0, cst_web_ui_multi_select_src_mu, 247, 11],
    _D_ = [0, [0, cst_web_ui_multi_select_src_mu, 247, 7910, 7921]],
    _E_ = [0, [0, cst_web_ui_multi_select_src_mu, 247, 7910, 7921]],
    _G_ = [0, cst_web_ui_multi_select_src_mu, 248, 7972, 7985],
    _H_ = [0, [0, cst_web_ui_multi_select_src_mu, 247, 7910, 7921]],
    _t_ = [0, [0, cst_web_ui_multi_select_src_mu, 274, 8909, 8913]],
    _u_ = [0, [0, cst_web_ui_multi_select_src_mu, 260, 8464, 8468]],
    _v_ = [0, [0, cst_web_ui_multi_select_src_mu, 260, 8464, 8468]],
    _w_ = [0, [0, cst_web_ui_multi_select_src_mu, 260, 8464, 8468]],
    _x_ = [0, [0, cst_web_ui_multi_select_src_mu, 253, 8186, 8190]],
    _y_ = [0, [0, cst_web_ui_multi_select_src_mu, 253, 8186, 8190]],
    _z_ = [0, [0, cst_web_ui_multi_select_src_mu, 253, 8186, 8190]],
    _A_ = [0, [0, cst_web_ui_multi_select_src_mu, 253, 8186, 8190]],
    _B_ = [0, [0, cst_web_ui_multi_select_src_mu, 253, 8186, 8190]],
    _I_ = [0, [0, cst_web_ui_multi_select_src_mu, 244, 7831, 7835]],
    cst_s_Key$0 = "%s %{Key}",
    _q_ = [0, 0],
    _r_ = [0, 0, 0],
    _s_ = [0, 2000],
    _o_ = [0, 870035731],
    _l_ = [0, 892857107],
    _k_ = [0, 0],
    _m_ = [0, [11, "Focus prev ", [2, 0, 0]], "Focus prev %s"],
    _n_ = [0, 0],
    _p_ = [0, [11, "Focus next ", [2, 0, 0]], "Focus next %s"],
    cst_s_Key = "%s-%{Key}",
    _j_ = [0, 0],
    cst_multi_factor_focused_subwi = "multi-factor-focused-subwidget",
    cst_multi_factor_unfocused_sub = "multi-factor-unfocused-subwidget",
    cst_multi_factor_subwidget = "multi-factor-subwidget",
    cst_about_blank = "about:blank",
    _g_ = [3, 870530776],
    cst_none = "none",
    _h_ = [3, 3256577],
    cst_all = "all",
    _i_ =
      [0, [11, "Select on all ", [2, 0, [11, ": ", 0]]], "Select on all %s: "],
    cst_s_search_box_Key = "%s-search-box-%{Key}",
    _f_ = [0, 0],
    cst_search_box = "-search-box-",
    _a_ = [0, "Prev"],
    _c_ = [0, "Next"],
    _b_ = [0, "Cycle_focused_subwidget"],
    _d_ = [0, "Set_focused_subwidget"],
    _e_ = [0, cst_web_ui_multi_select_src_mu, 39, 1108, 1154],
    Bonsai_web_ui_multi_select_Mul =
      [0,
       function(Item, Key){
        var
         Single_factor = caml_call1(Bonsai_web_ui_multi_select_Sin[1], Item);
        function sexp_of_t(param){
         if(0 === param[0]){
          var
           arg0_001 = param[1],
           res0_002 = 892857107 <= arg0_001 ? _a_ : _c_;
          return [1, [0, _b_, [0, res0_002, 0]]];
         }
         var arg0_003 = param[1], res0_004 = caml_call1(Key[2], arg0_003);
         return [1, [0, _d_, [0, res0_004, 0]]];
        }
        var Action = [0, sexp_of_t];
        function sexp_of_t$0(x_015){
         return caml_call2(Focus_ring[4], Key[2], x_015);
        }
        var Result = [0];
        function apply_action(param, _bL_, model, action){
         if(0 === action[0])
          return 892857107 <= action[1]
                  ? caml_call1(Focus_ring[7], model)
                  : caml_call1(Focus_ring[6], model);
         var x_016 = action[1];
         function _bM_(x_017){
          return 0 === caml_call2(Key[10], x_016, x_017) ? 1 : 0;
         }
         var _bN_ = caml_call2(Focus_ring[9], model, _bM_);
         return caml_call2(Core_Option[39], _bN_, model);
        }
        function compute(inject, param, model){
         return [0, caml_call1(Focus_ring[8], model), inject];
        }
        var name = caml_call1(Core_Source_code_position[4], _e_);
        function all_items(r){return r[2];}
        function default_selection_status(r){return r[1];}
        function selection(r){return r[5];}
        function inject(r){return r[4];}
        function key_handler(r){return r[3];}
        function view_for_testing(r){return r[2];}
        function view(r){return r[1];}
        function view_with_keydown_handler(t){
         function _bK_(ev){
          return caml_call2(Vdom_keyboard_Keyboard_event_h[17], t[3], ev);
         }
         var on_keydown = caml_call1(Virtual_dom_Vdom[1][81], _bK_);
         return caml_call3
                 (Virtual_dom_Node[17],
                  0,
                  [0, [0, on_keydown, 0]],
                  [0, t[1], 0]);
        }
        var
         Result$0 =
           [0,
            selection,
            inject,
            key_handler,
            view_for_testing,
            view,
            view_with_keydown_handler];
        function search_box_id(key, id_prefix){
         var
          _bI_ = 0,
          _bJ_ =
            [0,
             [2,
              0,
              [11,
               cst_search_box,
               [24,
                _f_,
                function(param, custom_printf_030){
                 return caml_call1(Key[25], custom_printf_030);
                },
                _bI_]]],
             cst_s_search_box_Key];
         return caml_call3(Core[265], _bJ_, id_prefix, key);
        }
        function focus_elt(id){
         var
          _bE_ = caml_call1(Js_of_ocaml_Js[4], Js_of_ocaml_Dom_html[2]),
          _bF_ = caml_call1(Js_of_ocaml_Js[6][5], _bE_);
         if(! _bF_) return _bF_;
         function _bG_(elt){elt.focus(); return elt.select();}
         var
          _bH_ =
            caml_call2
             (Js_of_ocaml_Dom_html[5], id, Js_of_ocaml_Dom_html[117][33]);
         return caml_call2(Core_Option[46], _bH_, _bG_);
        }
        var f = caml_call1(Bonsai_web_ui_multi_select_Imp[5][15], focus_elt);
        function bonsai
        (opt, all_keys, id_prefix, allow_updates_when_focused, subwidgets){
         if(opt)
          var sth = opt[1], initial_model_settings = sth;
         else
          var initial_model_settings = Key[23][5];
         function _J_(single_factors){
          function _am_(pattern_syntax_045){
           function _at_(inject_focus_action){
            function _ax_(focus){
             function _aB_(pattern_syntax_050){
              function _aF_(param){
               function _aJ_(param){
                var
                 _a2_ = param[2],
                 match = _a2_[2],
                 id_prefix = match[2],
                 inject_ring_focus_action = match[1],
                 focus = _a2_[1],
                 subwidgets$0 = param[1];
                function inject(param){
                 switch(param[0]){
                   case 0:
                    var dir = param[1];
                    return caml_call1(inject_ring_focus_action, [0, dir]);
                   case 1:
                    var key = param[1];
                    return caml_call1(inject_ring_focus_action, [1, key]);
                   case 2:
                    var
                     a = param[2],
                     key$0 = param[1],
                     match = caml_call2(Core_Map[44], subwidgets$0, key$0);
                    if(! match) return Ui_effect[1];
                    var inject = match[1][4];
                    return caml_call1(inject, a);
                   default:
                    var
                     what = param[1],
                     _bA_ =
                       function(subwidget){
                        var _bD_ = 870530776 <= what ? 2 : 1;
                        return caml_call1(subwidget[4], _bD_);
                       },
                     _bB_ = caml_call1(Core_Map[80], subwidgets$0),
                     _bC_ = caml_call2(Core_List[51], _bB_, _bA_);
                    return [0, Ui_effect[2], _bC_];
                 }
                }
                function _a3_(result){return result[5];}
                var selection = caml_call2(Core_Map[57], subwidgets$0, _a3_);
                function link(text, action){
                 var
                  _br_ = [0, caml_call1(Virtual_dom_Node[6], text), 0],
                  _bs_ = 0,
                  _bt_ = 0;
                 function _bu_(ev){
                  var
                   _by_ = [0, Virtual_dom_Effect[20], 0],
                   _bz_ = [0, inject(action), _by_];
                  return [0, Virtual_dom_Effect[2], _bz_];
                 }
                 var
                  _bv_ = [0, caml_call1(Virtual_dom_Vdom[1][61], _bu_), _bt_],
                  _bw_ =
                    [0,
                     caml_call1(Virtual_dom_Vdom[1][23], cst_about_blank),
                     _bv_],
                  _bx_ =
                    [0, [0, caml_call1(Virtual_dom_Vdom[1][10], _bw_), _bs_]];
                 return caml_call3(Virtual_dom_Node[8], 0, _bx_, _br_);
                }
                var
                 _aN_ = [0, link(cst_none, _g_), 0],
                 _aO_ = [0, caml_call1(Virtual_dom_Node[6], cst), _aN_],
                 _aP_ = [0, link(cst_all, _h_), _aO_],
                 _aQ_ = caml_call2(Core[265], _i_, Key[27]),
                 _aR_ = [0, caml_call1(Virtual_dom_Node[6], _aQ_), _aP_],
                 cross_subwidget_actions =
                   caml_call3(Virtual_dom_Node[17], 0, 0, _aR_);
                function _aS_(x_032, result){
                 var
                  is_focused = 0 === caml_call2(Key[10], focus, x_032) ? 1 : 0,
                  _be_ = [0, result[1], 0],
                  _bf_ = 0,
                  _bg_ = 0,
                  _bh_ = 0,
                  _bi_ =
                    [0,
                     [2,
                      0,
                      [12,
                       45,
                       [24,
                        _j_,
                        function(param, custom_printf_035){
                         return caml_call1(Key[25], custom_printf_035);
                        },
                        _bh_]]],
                     cst_s_Key],
                  _bj_ = caml_call3(Core[265], _bi_, id_prefix, x_032),
                  _bk_ = [0, caml_call1(Virtual_dom_Vdom[1][25], _bj_), _bg_];
                 function _bl_(ev){return inject([1, x_032]);}
                 var
                  _bm_ = [0, caml_call1(Virtual_dom_Vdom[1][61], _bl_), _bk_],
                  _bn_ = 0,
                  _bo_ =
                    is_focused
                     ? cst_multi_factor_focused_subwi
                     : cst_multi_factor_unfocused_sub,
                  _bp_ =
                    [0,
                     caml_call1
                      (Virtual_dom_Vdom[1][17],
                       [0, cst_multi_factor_subwidget, [0, _bo_, _bn_]]),
                     _bm_],
                  _bq_ =
                    [0, [0, caml_call1(Virtual_dom_Vdom[1][10], _bp_), _bf_]];
                 return caml_call3(Virtual_dom_Node[17], 0, _bq_, _be_);
                }
                var
                 subwidgets = caml_call2(Core_Map[58], subwidgets$0, _aS_),
                 _aT_ = caml_call1(Core_Map[80], subwidgets),
                 _aU_ =
                   [0,
                    cross_subwidget_actions,
                    [0,
                     caml_call6
                      (Vdom_layout[4], 0, 0, Virtual_dom_Node[17], 0, 0, _aT_),
                     0]],
                 view =
                   caml_call6
                    (Vdom_layout[5], 0, 0, Virtual_dom_Node[17], 0, 0, _aU_),
                 view_for_testing =
                   [246,
                    function(param){
                     function _a4_(x_038){
                      var
                       _a9_ = 0 === caml_call2(Key[10], focus, x_038) ? 1 : 0,
                       _a__ = _a9_ ? cst$0 : cst$1,
                       _a$_ = 0,
                       _ba_ =
                         [0,
                          [2,
                           0,
                           [12,
                            32,
                            [24,
                             _q_,
                             function(param, custom_printf_036){
                              return caml_call1(Key[25], custom_printf_036);
                             },
                             _a$_]]],
                          cst_s_Key$0],
                       name = caml_call3(Core[265], _ba_, _a__, x_038);
                      function _bb_(param){
                       var
                        subwidget = caml_call2(Core_Map[45], subwidgets$0, x_038),
                        _bc_ = subwidget[2],
                        _bd_ = runtime.caml_obj_tag(_bc_);
                       if(250 === _bd_) return _bc_[1];
                       if(246 !== _bd_ && 244 !== _bd_) return _bc_;
                       return caml_call1(CamlinternalLazy[2], _bc_);
                      }
                      return caml_call6
                              (Ascii_table_kernel[2][2], 0, 0, 0, 0, name, _bb_);
                     }
                     var
                      _a5_ = caml_call1(Core_Map[79], subwidgets$0),
                      columns = caml_call2(Core_List[51], _a5_, _a4_);
                     function _a6_(attrs, str){return str;}
                     var
                      _a7_ =
                        caml_call8
                         (Ascii_table_kernel[4], 0, 0, _s_, 0, 0, 0, columns, _r_),
                      _a8_ = caml_call4(Core_Option[40], 0, 0, 0, _a7_);
                     return caml_call3
                             (Ascii_table_kernel[3][2], _a8_, 12171517, _a6_);
                    }];
                function command(cond, keys, description, f){
                 if(cond)
                  var
                   cond$0 = cond[1],
                   handler =
                     caml_call3
                      (Vdom_keyboard_Keyboard_event_h[2][4], _k_, cond$0, f);
                 else
                  var
                   handler =
                     caml_call1(Vdom_keyboard_Keyboard_event_h[2][3], f);
                 return [0, keys, description, 0, handler];
                }
                var key = Vdom_keyboard_Keystroke[42], _aV_ = 0;
                function _aW_(ev){return inject(_l_);}
                var
                 _aX_ = caml_call2(Core[265], _m_, Key[26]),
                 _aY_ =
                   [0,
                    command
                     (0, [0, caml_call5(key, 0, 0, _n_, 0, 39), 0], _aX_, _aW_),
                    _aV_];
                function _aZ_(ev){return inject(_o_);}
                var
                 _a0_ = caml_call2(Core[265], _p_, Key[26]),
                 _a1_ =
                   [0,
                    command
                     (0, [0, caml_call5(key, 0, 0, 0, 0, 39), 0], _a0_, _aZ_),
                    _aY_],
                 my_key_handler =
                   caml_call1(Vdom_keyboard_Keyboard_event_h[8], _a1_),
                 result = caml_call2(Core_Map[45], subwidgets$0, focus),
                 focused_subwidget_key_handler = result[3],
                 key_handler =
                   caml_call3
                    (Vdom_keyboard_Keyboard_event_h[15],
                     916717526,
                     focused_subwidget_key_handler,
                     my_key_handler);
                return [0,
                        view,
                        view_for_testing,
                        key_handler,
                        inject,
                        selection];
               }
               var
                _aK_ =
                  caml_call2(Bonsai[49][5][7], inject_focus_action, id_prefix),
                _aL_ = caml_call2(Bonsai[49][5][7], focus, _aK_),
                _aM_ = caml_call2(Bonsai[49][5][7], single_factors, _aL_);
               return caml_call3(Bonsai[49][5][8], _t_, _aM_, _aJ_);
              }
              function _aG_(param){return 0;}
              var
               _aH_ =
                 caml_call3(Bonsai[49][5][4], _u_, pattern_syntax_050, _aG_),
               _aI_ = caml_call1(Bonsai[49][5][6], _aH_);
              return caml_call3(Bonsai[49][5][1], _v_, _aI_, _aF_);
             }
             function _aC_(id_prefix, prev, new_focus){
              if(prev){
               var prev_focus = prev[1];
               if(caml_call2(Key[9], prev_focus, new_focus))
                return Bonsai_web_ui_multi_select_Imp[5][1];
              }
              var id = search_box_id(new_focus, id_prefix);
              return caml_call1(f, id);
             }
             var callback = caml_call3(Bonsai[49][5][4], 0, id_prefix, _aC_);
             function _aD_(a_052, b_053){
              return caml_call2(Key[9], a_052, b_053);
             }
             var
              _aE_ =
                caml_call4(Bonsai[44][2], [0, Key[2]], _aD_, focus, callback);
             return caml_call3(Bonsai[49][5][1], _w_, _aE_, _aB_);
            }
            function _ay_(param){
             var pattern_syntax_046 = param[1];
             return pattern_syntax_046;
            }
            var
             _az_ =
               caml_call3(Bonsai[49][5][4], _x_, pattern_syntax_045, _ay_),
             _aA_ = caml_call1(Bonsai[49][5][6], _az_);
            return caml_call3(Bonsai[49][5][1], _y_, _aA_, _ax_);
           }
           function _au_(param){
            var pattern_syntax_047 = param[2];
            return pattern_syntax_047;
           }
           var
            _av_ = caml_call3(Bonsai[49][5][4], _z_, pattern_syntax_045, _au_),
            _aw_ = caml_call1(Bonsai[49][5][6], _av_);
           return caml_call3(Bonsai[49][5][1], _A_, _aw_, _at_);
          }
          var
           _an_ = caml_call1(Core_Set[39], all_keys),
           _ao_ = caml_call1(Focus_ring[5], _an_),
           _ap_ =
             [0,
              name,
              [0],
              [0, sexp_of_t$0],
              Action,
              Result,
              apply_action,
              compute],
           _aq_ =
             [0,
              function(a_048, b_049){
               function _as_(a_011, b_012){
                return caml_call2(Key[9], a_011, b_012);
               }
               return caml_call3(Focus_ring[2], _as_, a_048, b_049);
              }],
           _ar_ = caml_call4(Bonsai[23], [0, sexp_of_t$0], _aq_, _ap_, _ao_);
          return caml_call3(Bonsai[49][5][1], _B_, _ar_, _am_);
         }
         var _K_ = Core_Map[68];
         function _L_(_al_){return _al_;}
         function _M_(_ak_){return caml_call2(_K_, _ak_, _L_);}
         function _N_(key){
          function _R_(pattern_syntax_043){
           function _V_(param){
            if(0 === param){
             var
              _Z_ =
                function(input){
                 var
                  _ag_ = Core_Option[58],
                  default_selection_status$0 =
                    caml_call2(Bonsai[49][2], input, default_selection_status),
                  _ab_ = caml_call4(Single_factor[4][1], 0, 0, 0, 0),
                  _ac_ = caml_call2(Core_Map[44], initial_model_settings, key),
                  initial_model_settings$0 =
                    caml_call2(Core_Option[39], _ac_, _ab_);
                 function _ad_(id_prefix){
                  var
                   _ah_ = caml_call1(Key[25], key),
                   _ai_ = caml_call1(Virtual_dom_Node[6], _ah_),
                   _aj_ = [0, search_box_id(key, id_prefix)];
                  return caml_call6
                          (Single_factor[1][1],
                           0,
                           0,
                           _aj_,
                           _ai_,
                           allow_updates_when_focused,
                           0);
                 }
                 var
                  view_config =
                    caml_call3(Bonsai[49][5][4], 0, id_prefix, _ad_),
                  _ae_ = caml_call2(Bonsai[49][2], input, all_items),
                  _af_ =
                    caml_call4
                     (Single_factor[5],
                      [0, initial_model_settings$0],
                      [0, default_selection_status$0],
                      view_config,
                      _ae_);
                 return caml_call2(Bonsai[3][2], _af_, _ag_);
                },
              ___ =
                function(param){
                 if(! param)
                  throw caml_maybe_attach_backtrace
                         ([0, Assert_failure, _C_], 1);
                 var pattern_syntax_044 = param[1];
                 return pattern_syntax_044;
                },
              _$_ = caml_call3(Bonsai[49][5][4], _D_, pattern_syntax_043, ___),
              _aa_ = caml_call1(Bonsai[49][5][6], _$_);
             return caml_call3(Bonsai[49][5][1], _E_, _aa_, _Z_);
            }
            if(1 === param) return caml_call1(Bonsai[7], 0);
            throw caml_maybe_attach_backtrace([0, Assert_failure, _F_], 1);
           }
           var _W_ = 2;
           function _X_(param){return param ? 0 : 1;}
           var _Y_ = caml_call3(Bonsai[49][5][4], 0, pattern_syntax_043, _X_);
           return caml_call4(Bonsai[49][5][3], _G_, _Y_, _W_, _V_);
          }
          var
           _S_ = caml_call2(Core_Fn[6], Core_Map[44], key),
           _T_ = caml_call2(Bonsai[49][2], subwidgets, _S_),
           _U_ = caml_call1(Bonsai[49][5][6], _T_);
          return caml_call3(Bonsai[49][5][1], _H_, _U_, _R_);
         }
         var
          _O_ = caml_call2(Core_Set[73], all_keys, _N_),
          _P_ = caml_call1(Bonsai[3][13], _O_),
          _Q_ = caml_call2(Bonsai[3][2], _P_, _M_);
         return caml_call3(Bonsai[49][5][1], _I_, _Q_, _J_);
        }
        return [0, Single_factor, [0], Result$0, bonsai];
       }];
   runtime.caml_register_global
    (92, Bonsai_web_ui_multi_select_Mul, cst_Bonsai_web_ui_multi_select);
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_multi_select__Import_stable
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    Bonsai_web_ui_multi_select_Imp = [0];
   runtime.caml_register_global
    (0,
     Bonsai_web_ui_multi_select_Imp,
     "Bonsai_web_ui_multi_select__Import_stable");
   return;
  }
  (globalThis));

//# unitInfo: Provides: Bonsai_web_ui_multi_select
//# unitInfo: Requires: Bonsai_web_ui_multi_select__Single_factor, Ppx_bench_lib__Benchmark_accumulator, Ppx_expect_runtime, Ppx_inline_test_lib, Ppx_module_timer_runtime
(function
  (globalThis){
   "use strict";
   var
    runtime = globalThis.jsoo_runtime,
    cst_Bonsai_web_ui_multi_select = "Bonsai_web_ui_multi_select",
    cst_bonsai_web_ui_multi_select = "bonsai_web_ui_multi_select";
   function caml_call1(f, a0){
    return (f.l >= 0 ? f.l : f.l = f.length) == 1
            ? f(a0)
            : runtime.caml_call_gen(f, [a0]);
   }
   function caml_call2(f, a0, a1){
    return (f.l >= 0 ? f.l : f.l = f.length) == 2
            ? f(a0, a1)
            : runtime.caml_call_gen(f, [a0, a1]);
   }
   var
    global_data = runtime.caml_get_global_data(),
    Ppx_module_timer_runtime = global_data.Ppx_module_timer_runtime,
    Ppx_bench_lib_Benchmark_accumu =
      global_data.Ppx_bench_lib__Benchmark_accumulator,
    Ppx_expect_runtime = global_data.Ppx_expect_runtime,
    Ppx_inline_test_lib = global_data.Ppx_inline_test_lib,
    Bonsai_web_ui_multi_select_Sin =
      global_data.Bonsai_web_ui_multi_select__Single_factor;
   caml_call1(Ppx_module_timer_runtime[4], cst_Bonsai_web_ui_multi_select);
   caml_call1
    (Ppx_bench_lib_Benchmark_accumu[1][1], cst_bonsai_web_ui_multi_select);
   caml_call1
    (Ppx_expect_runtime[1][1],
     "web_ui/multi_select/src/bonsai_web_ui_multi_select.ml");
   caml_call2
    (Ppx_inline_test_lib[6],
     cst_bonsai_web_ui_multi_select,
     "bonsai_web_ui_multi_select.ml");
   var Make = Bonsai_web_ui_multi_select_Sin[1];
   caml_call1(Ppx_inline_test_lib[7], cst_bonsai_web_ui_multi_select);
   caml_call1(Ppx_expect_runtime[1][2], 0);
   caml_call1(Ppx_bench_lib_Benchmark_accumu[1][2], 0);
   caml_call1(Ppx_module_timer_runtime[5], cst_Bonsai_web_ui_multi_select);
   var Bonsai_web_ui_multi_select = [0, Make];
   runtime.caml_register_global
    (12, Bonsai_web_ui_multi_select, cst_Bonsai_web_ui_multi_select);
   return;
  }
  (globalThis));

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLjAsImZpbGUiOiJib25zYWlfd2ViX3VpX211bHRpX3NlbGVjdC5jbWEuanMiLCJzb3VyY2VSb290IjoiIiwibmFtZXMiOlsiZXJyb3Jfc291cmNlXzAwNyIsImNvbXBhcmUiLCJlcXVhbCIsInRfb2Zfc2V4cCIsInNleHBfMDA4Iiwic2V4cF9vZl90IiwidG9nZ2xlIiwiYXBwbHlfYWN0aW9uIiwiaW5wdXQiLCJtb2RlbCIsIm5ld19zZWFyY2giLCJjb21wdXRlIiwiaW5qZWN0IiwiYWxsX2l0ZW1zIiwic2VhcmNoX3N0cmluZyIsIml0ZW0iLCJpdGVtc19tYXRjaGluZ19zZWFyY2giLCJuYW1lIiwiY3JlYXRlIiwiZXh0cmFfcm93X2F0dHJzIiwib3B0IiwiaWQiLCJoZWFkZXIiLCJhbGxvd191cGRhdGVzX3doZW5fZm9jdXNlZCIsInN0aCIsImF1dG9mb2N1c19zZWFyY2hfYm94IiwiZm9jdXNlZF9pdGVtXzAxOCIsInNlbGVjdGlvbl9zdGF0dXNfMDE2IiwiYXJnXzAxOSIsImJuZHNfMDE1IiwiYXJnXzAxNyIsImJuZHNfMDE1JDAiLCJzZXhwX29mX3QkMCIsImFyZzBfMDIwIiwicmVzMF8wMjEiLCJzdGF0dXNfMDI1IiwiaXRlbV8wMjMiLCJhcmdfMDI2IiwiYm5kc18wMjIiLCJhcmdfMDI0IiwiYm5kc18wMjIkMCIsImFyZzBfMDI3IiwicmVzMF8wMjgiLCJhcmcwXzAyOSIsInJlczBfMDMwIiwiYXJnMF8wMzEiLCJyZXMwXzAzMiIsImZvY3VzZWRfaXRlbSIsImZvY3VzIiwiYXBwbHlfYWN0aW9uJDAiLCJjb250ZXh0IiwiYWN0aW9uIiwiZm9jdXNlZF9pdGVtJDAiLCJzdGF0dXMiLCJzdGF0dXMkMCIsInNlbGVjdGlvbl9zdGF0dXMiLCJtYXAiLCJzZWxlY3Rpb25fc3RhdHVzJDAiLCJzZWxlY3Rpb25fc3RhdHVzJDEiLCJmb2N1c2VkX2l0ZW0kMSIsInNlbGVjdGlvbl9zdGF0dXMkMiIsIml0ZW0kMCIsImRpciIsImVsZW1lbnQkMCIsInNldCIsImVsZW1lbnQiLCJzZXF1ZW5jZSIsImZvY3VzZWRfaXRlbSQyIiwiZm9jdXNlZF9pdGVtJDMiLCJjb21wdXRlJDAiLCJleHBsaWNpdGx5X3NlbGVjdGVkIiwiZGVmYXVsdHMiLCJzZWxlY3RlZF9pdGVtcyIsImNvbW1hbmQiLCJjb25kIiwia2V5cyIsImRlc2NyaXB0aW9uIiwiZiIsImNvbmQkMCIsImhhbmRsZXIiLCJrZXkiLCJldiIsImlzX2ZvY3VzZWQiLCJpc19zZWxlY3RlZCIsImN1c3RvbV9wcmludGZfMDMzIiwibGluayIsInRleHQiLCJjbGFzcyQwIiwic2VsZWN0X2FsbF9hbmRfbm9uZV92aWV3IiwiYXV0b2ZvY3VzIiwib25faW5wdXQiLCJleHRyYV9hdHRycyIsInNlYXJjaF9ib3giLCJuZXdfdmFsdWUiLCJ2YWx1ZSIsIm9uX2NoYW5nZSIsImNoZWNrZWRfYXR0cnMiLCJ1bmNoZWNrZWRfYXR0cnMiLCJjaGVja2VkX2F0dHJzJDAiLCJjaGVja2JveCIsInhfMDM0IiwiYV8wMzgiLCJiXzAzOSIsImZvY3VzX2F0dHJzIiwib25fY2xpY2siLCJjaGVja2JveGVzIiwiY2hlY2tib3hlcyQwIiwibmFtZSQwIiwiY3JlYXRlJDAiLCJib25zYWkiLCJ2aWV3X2NvbmZpZyIsImluaXRpYWxfbW9kZWxfc2V0dGluZ3MiLCJzdGgkMCIsImRlZmF1bHRfc2VsZWN0aW9uX3N0YXR1cyIsInNlYXJjaF9yZXN1bHRzIiwiY3VycmVudF9zZWFyY2giLCJ1cGRhdGVfc2VhcmNoIiwiaW5wdXRfZm9yX3QiLCJhXzA0NiIsImJfMDQ3IiwiYV8wMTEiLCJiXzAxMiIsImFfMDEzIiwiYl8wMTQiLCJpbml0aWFsIiwiYV8wMDEiLCJiXzAwMiIsImFyZzBfMDAxIiwicmVzMF8wMDIiLCJhcmcwXzAwMyIsInJlczBfMDA0IiwieF8wMTUiLCJ4XzAxNiIsInhfMDE3IiwiciIsInNlbGVjdGlvbiIsImtleV9oYW5kbGVyIiwidmlld19mb3JfdGVzdGluZyIsInZpZXciLCJ2aWV3X3dpdGhfa2V5ZG93bl9oYW5kbGVyIiwidCIsIm9uX2tleWRvd24iLCJzZWFyY2hfYm94X2lkIiwiaWRfcHJlZml4IiwiY3VzdG9tX3ByaW50Zl8wMzAiLCJmb2N1c19lbHQiLCJlbHQiLCJhbGxfa2V5cyIsInN1YndpZGdldHMiLCJzaW5nbGVfZmFjdG9ycyIsInBhdHRlcm5fc3ludGF4XzA0NSIsImluamVjdF9mb2N1c19hY3Rpb24iLCJwYXR0ZXJuX3N5bnRheF8wNTAiLCJpbmplY3RfcmluZ19mb2N1c19hY3Rpb24iLCJzdWJ3aWRnZXRzJDAiLCJhIiwia2V5JDAiLCJ3aGF0Iiwic3Vid2lkZ2V0IiwicmVzdWx0IiwiY3Jvc3Nfc3Vid2lkZ2V0X2FjdGlvbnMiLCJ4XzAzMiIsImN1c3RvbV9wcmludGZfMDM1IiwieF8wMzgiLCJjdXN0b21fcHJpbnRmXzAzNiIsImNvbHVtbnMiLCJhdHRycyIsInN0ciIsIm15X2tleV9oYW5kbGVyIiwiZm9jdXNlZF9zdWJ3aWRnZXRfa2V5X2hhbmRsZXIiLCJwcmV2IiwibmV3X2ZvY3VzIiwicHJldl9mb2N1cyIsImNhbGxiYWNrIiwiYV8wNTIiLCJiXzA1MyIsInBhdHRlcm5fc3ludGF4XzA0NiIsInBhdHRlcm5fc3ludGF4XzA0NyIsImFfMDQ4IiwiYl8wNDkiLCJwYXR0ZXJuX3N5bnRheF8wNDMiLCJkZWZhdWx0X3NlbGVjdGlvbl9zdGF0dXMkMCIsImluaXRpYWxfbW9kZWxfc2V0dGluZ3MkMCIsInBhdHRlcm5fc3ludGF4XzA0NCJdLCJzb3VyY2VzIjpbIi9ob21lL2xpYW0tY2FycGVudGVyLy5vcGFtL3BlcnNvbmFsLXNpdGUvbGliL2JvbnNhaS93ZWJfdWlfbXVsdGlfc2VsZWN0L2JvbnNhaV93ZWJfdWlfbXVsdGlfc2VsZWN0X18ubWwiLCIvaG9tZS9saWFtLWNhcnBlbnRlci8ub3BhbS9wZXJzb25hbC1zaXRlL2xpYi9ib25zYWkvd2ViX3VpX211bHRpX3NlbGVjdC9zZWxlY3Rpb25fc3RhdHVzLm1sIiwiL2hvbWUvbGlhbS1jYXJwZW50ZXIvLm9wYW0vcGVyc29uYWwtc2l0ZS9saWIvYm9uc2FpL3dlYl91aV9tdWx0aV9zZWxlY3Qvc2luZ2xlX2ZhY3Rvci5tbCIsIi9ob21lL2xpYW0tY2FycGVudGVyLy5vcGFtL3BlcnNvbmFsLXNpdGUvbGliL2JvbnNhaS93ZWJfdWlfbXVsdGlfc2VsZWN0L211bHRpX2ZhY3Rvci5tbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztHQXVCc0M7O0lBQUE7Ozs7O0U7Ozs7Ozs7Ozs7OztHOzs7OztHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztFOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Rzs7Ozs7Rzs7Ozs7OztJQ3JCdENBOzs7Ozs7Ozs7Ozs7Ozs7O0dBQUE7SUFBQUM7Ozs7O1lBQUFDLGdCO0dBQUEsU0FBQUMsVUFBQUM7SUFBQTs7Y0FBQUE7Z0JBQUFBOzs7Ozs7O09BRUU7O01BREE7O2VBREZBOztNQUFBLE9BQUE7NkNBQUFKLGtCQUFBSTs7O01BQUEsT0FBQTs2Q0FBQUosa0JBQUFJOzs7Ozs7OztNQUFBLE9BQUE7NENBQUFKLGtCQUFBSTs7S0FBQSxPQUFBOzJDQUFBSixrQkFBQUk7O0lBQUEsT0FBQTsyQ0FBQUosa0JBQUFJO0dBR2lDO1lBSGpDQyxpQkFBQSx5QkFHaUM7WUFFN0JDLGNBQVMscUJBRWE7Ozs7Ozs7VUFQMUJMLFNBQUFFLFdBQUFFLFdBQUFILE9BS0lJOzs7O0U7Ozs7Ozs7Ozs7Ozs7Rzs7Ozs7Rzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0U7Ozs7Ozs7Ozs7Ozs7Ozs7OztHOzs7OztHOzs7OztHOzs7OztHOzs7OztHOzs7OztHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O1FDT2tCO2lCQVdaQyxvQkFBZUMsT0FBT0MsT0FBT0MsWUFBYSxPQUFiQTtRQUF1QjtpQkFFcERDLFFBQVNDLFFBQU9DLFdBQVVDO3VCQUVHQztVQUNFLFdBQUEscUJBREZBO1VBRC9CLE9BQUEsc0NB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QTttQkFESixXQTVKUjhELGNBeUtzQjlELEtBZlorRDtrQkFDUixPQUFBOzs7Ozs7MkJBWkh4SDs7aUJBZ0JPO2lCQU1KO2tCQVpFdUY7b0RBWExpQztrQkF1QkcsT0FBQSwwQkFNVXZJLE9Bbk1aSztrQkE2TEU7b0JBQUE7OzBCQWhCRXlLOzBCQURBRDtzQkFLQXZFOztpQkFrQmlCLE9BQUE7Z0JBQXdEOzs7aUI7OztxQkFBakV5RTt3QkFBQUE7O3NEQURQSDs7Ozs0QkFFVSxPQUFBOzs7OytCO3FEQUZWQTs7O1VBQXlCO1dBQUEsTUFBQSxxQ0FEUnBHO1dBQ1AsTUFBQSwwQkExQmpCb0U7Ozs7U0F3QkU7VUFBQSxNQUFBLHlCQTNCREQ7VUEyQkMsTUFBQTtVQUFBLE1BQUE7O1FBd0MrRDtpREFyRS9EdEM7Ozs7O0U7Ozs7Ozs7Ozs7Ozs7OztFOzs7Ozs7Ozs7Ozs7Rzs7Ozs7Rzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0UiLCJzb3VyY2VzQ29udGVudCI6WyIoKiBnZW5lcmF0ZWQgYnkgZHVuZSAqKVxuXG4oKiogQGNhbm9uaWNhbCBCb25zYWlfd2ViX3VpX211bHRpX3NlbGVjdC5JbXBvcnQgKilcbm1vZHVsZSBJbXBvcnQgPSBCb25zYWlfd2ViX3VpX211bHRpX3NlbGVjdF9fSW1wb3J0XG5cbigqKiBAY2Fub25pY2FsIEJvbnNhaV93ZWJfdWlfbXVsdGlfc2VsZWN0LkltcG9ydF9zdGFibGUgKilcbm1vZHVsZSBJbXBvcnRfc3RhYmxlID0gQm9uc2FpX3dlYl91aV9tdWx0aV9zZWxlY3RfX0ltcG9ydF9zdGFibGVcblxuKCoqIEBjYW5vbmljYWwgQm9uc2FpX3dlYl91aV9tdWx0aV9zZWxlY3QuTXVsdGlfZmFjdG9yICopXG5tb2R1bGUgTXVsdGlfZmFjdG9yID0gQm9uc2FpX3dlYl91aV9tdWx0aV9zZWxlY3RfX011bHRpX2ZhY3RvclxuXG4oKiogQGNhbm9uaWNhbCBCb25zYWlfd2ViX3VpX211bHRpX3NlbGVjdC5NdWx0aV9mYWN0b3JfaW50ZiAqKVxubW9kdWxlIE11bHRpX2ZhY3Rvcl9pbnRmID0gQm9uc2FpX3dlYl91aV9tdWx0aV9zZWxlY3RfX011bHRpX2ZhY3Rvcl9pbnRmXG5cbigqKiBAY2Fub25pY2FsIEJvbnNhaV93ZWJfdWlfbXVsdGlfc2VsZWN0LlNlbGVjdGlvbl9zdGF0dXMgKilcbm1vZHVsZSBTZWxlY3Rpb25fc3RhdHVzID0gQm9uc2FpX3dlYl91aV9tdWx0aV9zZWxlY3RfX1NlbGVjdGlvbl9zdGF0dXNcblxuKCoqIEBjYW5vbmljYWwgQm9uc2FpX3dlYl91aV9tdWx0aV9zZWxlY3QuU2luZ2xlX2ZhY3RvciAqKVxubW9kdWxlIFNpbmdsZV9mYWN0b3IgPSBCb25zYWlfd2ViX3VpX211bHRpX3NlbGVjdF9fU2luZ2xlX2ZhY3RvclxuXG4oKiogQGNhbm9uaWNhbCBCb25zYWlfd2ViX3VpX211bHRpX3NlbGVjdC5TaW5nbGVfZmFjdG9yX2ludGYgKilcbm1vZHVsZSBTaW5nbGVfZmFjdG9yX2ludGYgPSBCb25zYWlfd2ViX3VpX211bHRpX3NlbGVjdF9fU2luZ2xlX2ZhY3Rvcl9pbnRmXG5cbm1vZHVsZSBCb25zYWlfd2ViX3VpX211bHRpX3NlbGVjdF9fID0gc3RydWN0IGVuZFxuW0BAZGVwcmVjYXRlZCBcInRoaXMgbW9kdWxlIGlzIHNoYWRvd2VkXCJdXG4iLCJvcGVuISBDb3JlXG5cbnR5cGUgdCA9XG4gIHwgU2VsZWN0ZWRcbiAgfCBVbnNlbGVjdGVkXG5bQEBkZXJpdmluZyBjb21wYXJlLCBlcXVhbCwgc2V4cF1cblxubGV0IHRvZ2dsZSA9IGZ1bmN0aW9uXG4gIHwgU2VsZWN0ZWQgLT4gVW5zZWxlY3RlZFxuICB8IFVuc2VsZWN0ZWQgLT4gU2VsZWN0ZWRcbjs7XG4iLCJvcGVuISBDb3JlXG5vcGVuISBJbXBvcnRcbm9wZW4gQm9uc2FpX3dlYlxub3BlbiBTaW5nbGVfZmFjdG9yX2ludGZcblxubW9kdWxlIHR5cGUgUyA9IFNcbm1vZHVsZSB0eXBlIEl0ZW0gPSBJdGVtXG5cbm1vZHVsZSBNYWtlIChJdGVtIDogSXRlbSkgPSBzdHJ1Y3RcbiAgbW9kdWxlIFNlYXJjaGVyID0gc3RydWN0XG4gICAgKCogRmlsdGVycyBhIHNldCBvZiBpdGVtcyBhY2NvcmRpbmcgdG8gYSBzZWFyY2ggc3RyaW5nICopXG4gICAgbW9kdWxlIFQgPSBzdHJ1Y3RcbiAgICAgIG1vZHVsZSBJbnB1dCA9IEl0ZW0uU2V0XG5cbiAgICAgIG1vZHVsZSBSZXN1bHQgPSBzdHJ1Y3RcbiAgICAgICAgdHlwZSB0ID1cbiAgICAgICAgICB7IGl0ZW1zX21hdGNoaW5nX3NlYXJjaCA6IEl0ZW0uU2V0LnRcbiAgICAgICAgICA7IHVwZGF0ZV9zZWFyY2ggOiBzdHJpbmcgLT4gdW5pdCBCb25zYWkuRWZmZWN0LnRcbiAgICAgICAgICA7IGN1cnJlbnRfc2VhcmNoIDogc3RyaW5nXG4gICAgICAgICAgfVxuICAgICAgZW5kXG5cbiAgICAgIG1vZHVsZSBNb2RlbCA9IFN0cmluZ1xuICAgICAgbW9kdWxlIEFjdGlvbiA9IFN0cmluZ1xuXG4gICAgICBsZXQgYXBwbHlfYWN0aW9uIF8gX2lucHV0IF9tb2RlbCBuZXdfc2VhcmNoID0gbmV3X3NlYXJjaFxuXG4gICAgICBsZXQgY29tcHV0ZSB+aW5qZWN0IGFsbF9pdGVtcyBzZWFyY2hfc3RyaW5nID1cbiAgICAgICAgbGV0IGl0ZW1zX21hdGNoaW5nX3NlYXJjaCA9XG4gICAgICAgICAgU2V0LmZpbHRlciBhbGxfaXRlbXMgfmY6KGZ1biBpdGVtIC0+XG4gICAgICAgICAgICBTdHJpbmcuQ2FzZWxlc3MuaXNfc3Vic3RyaW5nIChJdGVtLnRvX3N0cmluZyBpdGVtKSB+c3Vic3RyaW5nOnNlYXJjaF9zdHJpbmcpXG4gICAgICAgIGluXG4gICAgICAgIHsgUmVzdWx0Lml0ZW1zX21hdGNoaW5nX3NlYXJjaFxuICAgICAgICA7IHVwZGF0ZV9zZWFyY2ggPSBpbmplY3RcbiAgICAgICAgOyBjdXJyZW50X3NlYXJjaCA9IHNlYXJjaF9zdHJpbmdcbiAgICAgICAgfVxuICAgICAgOztcblxuICAgICAgbGV0IG5hbWUgPSBTb3VyY2VfY29kZV9wb3NpdGlvbi50b19zdHJpbmcgWyVoZXJlXVxuICAgIGVuZFxuXG4gICAgaW5jbHVkZSBUXG5cbiAgICBsZXQgYm9uc2FpIH5pbml0aWFsIGlucHV0ID1cbiAgICAgIEJvbnNhaS5vZl9tb2R1bGUxXG4gICAgICAgIChtb2R1bGUgVClcbiAgICAgICAgfnNleHBfb2ZfbW9kZWw6WyVzZXhwX29mOiBULk1vZGVsLnRdXG4gICAgICAgIH5lcXVhbDpbJWVxdWFsOiBULk1vZGVsLnRdXG4gICAgICAgIH5kZWZhdWx0X21vZGVsOmluaXRpYWxcbiAgICAgICAgaW5wdXRcbiAgICA7O1xuICBlbmRcblxuICBtb2R1bGUgVCA9IHN0cnVjdFxuICAgIG1vZHVsZSBWaWV3X2NvbmZpZyA9IHN0cnVjdFxuICAgICAgdHlwZSB0ID1cbiAgICAgICAgeyBoZWFkZXIgOiBWZG9tLk5vZGUudFxuICAgICAgICA7IGF1dG9mb2N1c19zZWFyY2hfYm94IDogYm9vbFxuICAgICAgICA7IHNlYXJjaF9ib3hfaWQgOiBzdHJpbmcgb3B0aW9uXG4gICAgICAgIDsgZXh0cmFfcm93X2F0dHJzIDogKGlzX2ZvY3VzZWQ6Ym9vbCAtPiBWZG9tLkF0dHIudCkgb3B0aW9uXG4gICAgICAgIDsgYWxsb3dfdXBkYXRlc193aGVuX2ZvY3VzZWQgOiBbIGBBbHdheXMgfCBgTmV2ZXIgXVxuICAgICAgICB9XG5cbiAgICAgIGxldCBjcmVhdGVcbiAgICAgICAgP2V4dHJhX3Jvd19hdHRyc1xuICAgICAgICA/KGF1dG9mb2N1c19zZWFyY2hfYm94ID0gZmFsc2UpXG4gICAgICAgID9pZFxuICAgICAgICB+aGVhZGVyXG4gICAgICAgIH5hbGxvd191cGRhdGVzX3doZW5fZm9jdXNlZFxuICAgICAgICAoKVxuICAgICAgICA9XG4gICAgICAgIHsgaGVhZGVyXG4gICAgICAgIDsgYXV0b2ZvY3VzX3NlYXJjaF9ib3hcbiAgICAgICAgOyBzZWFyY2hfYm94X2lkID0gaWRcbiAgICAgICAgOyBleHRyYV9yb3dfYXR0cnNcbiAgICAgICAgOyBhbGxvd191cGRhdGVzX3doZW5fZm9jdXNlZFxuICAgICAgICB9XG4gICAgICA7O1xuICAgIGVuZFxuXG4gICAgbW9kdWxlIElucHV0ID0gc3RydWN0XG4gICAgICB0eXBlIHQgPVxuICAgICAgICB7IGl0ZW1zX21hdGNoaW5nX3NlYXJjaCA6IEl0ZW0uU2V0LnRcbiAgICAgICAgOyB1cGRhdGVfc2VhcmNoIDogc3RyaW5nIC0+IHVuaXQgQm9uc2FpLkVmZmVjdC50XG4gICAgICAgIDsgYWxsX2l0ZW1zIDogSXRlbS5TZXQudFxuICAgICAgICA7IGRlZmF1bHRfc2VsZWN0aW9uX3N0YXR1cyA6IFNlbGVjdGlvbl9zdGF0dXMudFxuICAgICAgICA7IGN1cnJlbnRfc2VhcmNoIDogc3RyaW5nXG4gICAgICAgIDsgdmlld19jb25maWcgOiBWaWV3X2NvbmZpZy50XG4gICAgICAgIH1cbiAgICBlbmRcblxuICAgIG1vZHVsZSBNb2RlbCA9IHN0cnVjdFxuICAgICAgdHlwZSB0ID1cbiAgICAgICAgeyBzZWxlY3Rpb25fc3RhdHVzIDogU2VsZWN0aW9uX3N0YXR1cy50IE1hcC5NKEl0ZW0pLnRcbiAgICAgICAgOyBmb2N1c2VkX2l0ZW0gOiBJdGVtLnQgb3B0aW9uXG4gICAgICAgIH1cbiAgICAgIFtAQGRlcml2aW5nIGNvbXBhcmUsIGVxdWFsLCBzZXhwX29mXVxuXG4gICAgICBsZXQgY3JlYXRlID8oc2VsZWN0aW9uX3N0YXR1cyA9IEl0ZW0uTWFwLmVtcHR5KSA/Zm9jdXNlZF9pdGVtICgpID1cbiAgICAgICAgeyBzZWxlY3Rpb25fc3RhdHVzOyBmb2N1c2VkX2l0ZW0gfVxuICAgICAgOztcbiAgICBlbmRcblxuICAgIG1vZHVsZSBBY3Rpb24gPSBzdHJ1Y3RcbiAgICAgIHR5cGUgdCA9XG4gICAgICAgIHwgVXBkYXRlX3NlYXJjaF9zdHJpbmcgb2Ygc3RyaW5nXG4gICAgICAgIHwgU2V0X2l0ZW1fc2VsZWN0ZWQgb2ZcbiAgICAgICAgICAgIHsgaXRlbSA6IEl0ZW0udFxuICAgICAgICAgICAgOyBzdGF0dXMgOiBTZWxlY3Rpb25fc3RhdHVzLnRcbiAgICAgICAgICAgIH1cbiAgICAgICAgfCBTZXRfYWxsX3NlbGVjdGlvbl9zdGF0dXNlcyBvZiBTZWxlY3Rpb25fc3RhdHVzLnQgSXRlbS5NYXAudFxuICAgICAgICB8IFRvZ2dsZV9mb2N1c2VkX2l0ZW1fc2VsZWN0ZWRcbiAgICAgICAgfCBTZXRfZm9jdXMgb2YgSXRlbS50IG9wdGlvblxuICAgICAgICB8IE1vdmVfZm9jdXMgb2YgWyBgTmV4dCB8IGBQcmV2IF1cbiAgICAgICAgfCBTZWxlY3RfYWxsXG4gICAgICAgIHwgU2VsZWN0X25vbmVcbiAgICAgIFtAQGRlcml2aW5nIHNleHBfb2ZdXG4gICAgZW5kXG5cbiAgICBtb2R1bGUgUmVzdWx0ID0gc3RydWN0XG4gICAgICB0eXBlIHQgPVxuICAgICAgICB7IHZpZXcgOiBWZG9tLk5vZGUudFxuICAgICAgICA7IHZpZXdfZm9yX3Rlc3RpbmcgOiBzdHJpbmcgTGF6eS50XG4gICAgICAgIDsga2V5X2hhbmRsZXIgOiBWZG9tX2tleWJvYXJkLktleWJvYXJkX2V2ZW50X2hhbmRsZXIudFxuICAgICAgICA7IGluamVjdCA6IEFjdGlvbi50IC0+IHVuaXQgQm9uc2FpLkVmZmVjdC50XG4gICAgICAgIDsgc2VsZWN0ZWRfaXRlbXMgOiBJdGVtLlNldC50XG4gICAgICAgIH1cbiAgICBlbmRcblxuICAgIGxldCBtb3ZlX2luX3NldCBzZXQgZWxlbWVudCB+ZGlyID1cbiAgICAgIG1hdGNoIGVsZW1lbnQgd2l0aFxuICAgICAgfCBOb25lIC0+XG4gICAgICAgIChtYXRjaCBkaXIgd2l0aFxuICAgICAgICAgfCBgUHJldiAtPiBTZXQubWF4X2VsdCBzZXRcbiAgICAgICAgIHwgYE5leHQgLT4gU2V0Lm1pbl9lbHQgc2V0KVxuICAgICAgfCBTb21lIGVsZW1lbnQgLT5cbiAgICAgICAgbGV0IHNlcXVlbmNlID1cbiAgICAgICAgICBtYXRjaCBkaXIgd2l0aFxuICAgICAgICAgIHwgYFByZXYgLT4gU2V0LnRvX3NlcXVlbmNlIHNldCB+bGVzc19vcl9lcXVhbF90bzplbGVtZW50IH5vcmRlcjpgRGVjcmVhc2luZ1xuICAgICAgICAgIHwgYE5leHQgLT4gU2V0LnRvX3NlcXVlbmNlIHNldCB+Z3JlYXRlcl9vcl9lcXVhbF90bzplbGVtZW50IH5vcmRlcjpgSW5jcmVhc2luZ1xuICAgICAgICBpblxuICAgICAgICAoKiBUaGUgZmlyc3QgZWxlbWVudCBpbiB0aGUgc2VxdWVuY2Ugd2lsbCBiZSBbZWxlbWVudF0sIHNpbmNlIHRoZSBhcmd1bWVudHMgdGhhdFxuICAgICAgICAgICB3ZSBwYXNzIGFyZSBcIl9vcl9lcXVhbF90b1wiLiAqKVxuICAgICAgICBTZXF1ZW5jZS5udGggc2VxdWVuY2UgMVxuICAgIDs7XG5cbiAgICBsZXQgZm9jdXNlZF9pdGVtIChpbnB1dCA6IElucHV0LnQpIChtb2RlbCA6IE1vZGVsLnQpID1cbiAgICAgIE9wdGlvbi5iaW5kIG1vZGVsLmZvY3VzZWRfaXRlbSB+ZjooZnVuIGZvY3VzIC0+XG4gICAgICAgIGlmIFNldC5tZW0gaW5wdXQuaXRlbXNfbWF0Y2hpbmdfc2VhcmNoIGZvY3VzIHRoZW4gU29tZSBmb2N1cyBlbHNlIE5vbmUpXG4gICAgOztcblxuICAgIGxldCBpc19pdGVtX3NlbGVjdGVkIChpbnB1dCA6IElucHV0LnQpIChtb2RlbCA6IE1vZGVsLnQpIH5pdGVtID1cbiAgICAgIG1hdGNoXG4gICAgICAgIE1hcC5maW5kIG1vZGVsLnNlbGVjdGlvbl9zdGF0dXMgaXRlbVxuICAgICAgICB8PiBPcHRpb24udmFsdWUgfmRlZmF1bHQ6aW5wdXQuZGVmYXVsdF9zZWxlY3Rpb25fc3RhdHVzXG4gICAgICB3aXRoXG4gICAgICB8IFNlbGVjdGVkIC0+IHRydWVcbiAgICAgIHwgVW5zZWxlY3RlZCAtPiBmYWxzZVxuICAgIDs7XG5cbiAgICBsZXQgc2VsZWN0ZWRfaXRlbXMgKGlucHV0IDogSW5wdXQudCkgKG1vZGVsIDogTW9kZWwudCkgPVxuICAgICAgbGV0IGV4cGxpY2l0bHlfc2VsZWN0ZWQgPVxuICAgICAgICBMaXN0LmZpbHRlcl9tYXAgKE1hcC50b19hbGlzdCBtb2RlbC5zZWxlY3Rpb25fc3RhdHVzKSB+ZjooZnVuIChpdGVtLCBzdGF0dXMpIC0+XG4gICAgICAgICAgbWF0Y2ggc3RhdHVzIHdpdGhcbiAgICAgICAgICB8IFNlbGVjdGVkIC0+IFNvbWUgaXRlbVxuICAgICAgICAgIHwgVW5zZWxlY3RlZCAtPiBOb25lKVxuICAgICAgICB8PiBJdGVtLlNldC5vZl9saXN0XG4gICAgICBpblxuICAgICAgbGV0IGRlZmF1bHRzID1cbiAgICAgICAgbWF0Y2ggaW5wdXQuZGVmYXVsdF9zZWxlY3Rpb25fc3RhdHVzIHdpdGhcbiAgICAgICAgfCBVbnNlbGVjdGVkIC0+IEl0ZW0uU2V0LmVtcHR5XG4gICAgICAgIHwgU2VsZWN0ZWQgLT4gU2V0LmRpZmYgaW5wdXQuYWxsX2l0ZW1zIChTZXQub2ZfbWFwX2tleXMgbW9kZWwuc2VsZWN0aW9uX3N0YXR1cylcbiAgICAgIGluXG4gICAgICBTZXQudW5pb24gZXhwbGljaXRseV9zZWxlY3RlZCBkZWZhdWx0c1xuICAgIDs7XG5cbiAgICBsZXQgYXBwbHlfYWN0aW9uIGNvbnRleHQgKGlucHV0IDogSW5wdXQudCkgKG1vZGVsIDogTW9kZWwudCkgKGFjdGlvbiA6IEFjdGlvbi50KSA9XG4gICAgICBtYXRjaCBhY3Rpb24gd2l0aFxuICAgICAgfCBVcGRhdGVfc2VhcmNoX3N0cmluZyBzZWFyY2hfc3RyaW5nIC0+XG4gICAgICAgIGxldCBmb2N1c2VkX2l0ZW0gPVxuICAgICAgICAgIE9wdGlvbi5iaW5kIG1vZGVsLmZvY3VzZWRfaXRlbSB+ZjooZnVuIGZvY3VzZWRfaXRlbSAtPlxuICAgICAgICAgICAgaWYgbm90IChTZXQubWVtIGlucHV0Lml0ZW1zX21hdGNoaW5nX3NlYXJjaCBmb2N1c2VkX2l0ZW0pXG4gICAgICAgICAgICB0aGVuIE5vbmVcbiAgICAgICAgICAgIGVsc2UgU29tZSBmb2N1c2VkX2l0ZW0pXG4gICAgICAgIGluXG4gICAgICAgIEJvbnNhaS5BcHBseV9hY3Rpb25fY29udGV4dC5zY2hlZHVsZV9ldmVudFxuICAgICAgICAgIGNvbnRleHRcbiAgICAgICAgICAoaW5wdXQudXBkYXRlX3NlYXJjaCBzZWFyY2hfc3RyaW5nKTtcbiAgICAgICAgeyBtb2RlbCB3aXRoIGZvY3VzZWRfaXRlbSB9XG4gICAgICB8IFNldF9pdGVtX3NlbGVjdGVkIHsgaXRlbTsgc3RhdHVzIH0gLT5cbiAgICAgICAgeyBtb2RlbCB3aXRoXG4gICAgICAgICAgc2VsZWN0aW9uX3N0YXR1cyA9IE1hcC5zZXQgbW9kZWwuc2VsZWN0aW9uX3N0YXR1cyB+a2V5Oml0ZW0gfmRhdGE6c3RhdHVzXG4gICAgICAgIH1cbiAgICAgIHwgU2V0X2FsbF9zZWxlY3Rpb25fc3RhdHVzZXMgc2VsZWN0aW9uX3N0YXR1cyAtPiB7IG1vZGVsIHdpdGggc2VsZWN0aW9uX3N0YXR1cyB9XG4gICAgICB8IFRvZ2dsZV9mb2N1c2VkX2l0ZW1fc2VsZWN0ZWQgLT5cbiAgICAgICAgKG1hdGNoIGZvY3VzZWRfaXRlbSBpbnB1dCBtb2RlbCB3aXRoXG4gICAgICAgICB8IE5vbmUgLT4gbW9kZWxcbiAgICAgICAgIHwgU29tZSBmb2N1c2VkX2l0ZW0gLT5cbiAgICAgICAgICAgbGV0IHNlbGVjdGlvbl9zdGF0dXMgPVxuICAgICAgICAgICAgIE1hcC51cGRhdGUgbW9kZWwuc2VsZWN0aW9uX3N0YXR1cyBmb2N1c2VkX2l0ZW0gfmY6KGZ1biBzdGF0dXMgLT5cbiAgICAgICAgICAgICAgIGxldCBzdGF0dXMgPSBPcHRpb24udmFsdWUgc3RhdHVzIH5kZWZhdWx0OmlucHV0LmRlZmF1bHRfc2VsZWN0aW9uX3N0YXR1cyBpblxuICAgICAgICAgICAgICAgU2VsZWN0aW9uX3N0YXR1cy50b2dnbGUgc3RhdHVzKVxuICAgICAgICAgICBpblxuICAgICAgICAgICB7IG1vZGVsIHdpdGggc2VsZWN0aW9uX3N0YXR1cyB9KVxuICAgICAgfCBTZXRfZm9jdXMgaXRlbSAtPiB7IG1vZGVsIHdpdGggZm9jdXNlZF9pdGVtID0gaXRlbSB9XG4gICAgICB8IE1vdmVfZm9jdXMgZGlyIC0+XG4gICAgICAgIGxldCBmb2N1c2VkX2l0ZW0gPVxuICAgICAgICAgIG1vdmVfaW5fc2V0IGlucHV0Lml0ZW1zX21hdGNoaW5nX3NlYXJjaCAoZm9jdXNlZF9pdGVtIGlucHV0IG1vZGVsKSB+ZGlyXG4gICAgICAgIGluXG4gICAgICAgIChtYXRjaCBmb2N1c2VkX2l0ZW0gd2l0aFxuICAgICAgICAgfCBOb25lIC0+IG1vZGVsXG4gICAgICAgICB8IFNvbWUgZm9jdXNlZF9pdGVtIC0+IHsgbW9kZWwgd2l0aCBmb2N1c2VkX2l0ZW0gPSBTb21lIGZvY3VzZWRfaXRlbSB9KVxuICAgICAgfCBTZWxlY3RfYWxsIC0+XG4gICAgICAgIGxldCBzZWxlY3Rpb25fc3RhdHVzID1cbiAgICAgICAgICBTZXQuZm9sZFxuICAgICAgICAgICAgaW5wdXQuaXRlbXNfbWF0Y2hpbmdfc2VhcmNoXG4gICAgICAgICAgICB+aW5pdDptb2RlbC5zZWxlY3Rpb25fc3RhdHVzXG4gICAgICAgICAgICB+ZjooZnVuIG1hcCBpdGVtIC0+IE1hcC5zZXQgbWFwIH5rZXk6aXRlbSB+ZGF0YTpTZWxlY3RlZClcbiAgICAgICAgaW5cbiAgICAgICAgeyBtb2RlbCB3aXRoIHNlbGVjdGlvbl9zdGF0dXMgfVxuICAgICAgfCBTZWxlY3Rfbm9uZSAtPlxuICAgICAgICBsZXQgc2VsZWN0aW9uX3N0YXR1cyA9XG4gICAgICAgICAgU2V0LmZvbGRcbiAgICAgICAgICAgIGlucHV0Lml0ZW1zX21hdGNoaW5nX3NlYXJjaFxuICAgICAgICAgICAgfmluaXQ6bW9kZWwuc2VsZWN0aW9uX3N0YXR1c1xuICAgICAgICAgICAgfmY6KGZ1biBtYXAgaXRlbSAtPiBNYXAuc2V0IG1hcCB+a2V5Oml0ZW0gfmRhdGE6VW5zZWxlY3RlZClcbiAgICAgICAgaW5cbiAgICAgICAgeyBtb2RlbCB3aXRoIHNlbGVjdGlvbl9zdGF0dXMgfVxuICAgIDs7XG5cbiAgICBsZXQgdmlld19mb3JfdGVzdGluZyAoaW5wdXQgOiBJbnB1dC50KSAobW9kZWwgOiBNb2RlbC50KSA9XG4gICAgICBTdHJpbmcuY29uY2F0XG4gICAgICAgIH5zZXA6XCJcXG5cIlxuICAgICAgICAoc3ByaW50ZiBcIlNlYXJjaCBzdHJpbmc6ICclcydcIiBpbnB1dC5jdXJyZW50X3NlYXJjaFxuICAgICAgICAgOjogTGlzdC5tYXAgKFNldC50b19saXN0IGlucHV0Lml0ZW1zX21hdGNoaW5nX3NlYXJjaCkgfmY6KGZ1biBpdGVtIC0+XG4gICAgICAgICAgICAgIGxldCBpc19mb2N1c2VkID1cbiAgICAgICAgICAgICAgICBtYXRjaCBtb2RlbC5mb2N1c2VkX2l0ZW0gd2l0aFxuICAgICAgICAgICAgICAgIHwgTm9uZSAtPiBmYWxzZVxuICAgICAgICAgICAgICAgIHwgU29tZSBpdGVtJyAtPiBJdGVtLiggPSApIGl0ZW0gaXRlbSdcbiAgICAgICAgICAgICAgaW5cbiAgICAgICAgICAgICAgbGV0IGlzX3NlbGVjdGVkID0gaXNfaXRlbV9zZWxlY3RlZCBpbnB1dCBtb2RlbCB+aXRlbSBpblxuICAgICAgICAgICAgICBzcHJpbnRmXG4gICAgICAgICAgICAgICAgIVwiJXMgJXMgJXtJdGVtfVwiXG4gICAgICAgICAgICAgICAgKGlmIGlzX2ZvY3VzZWQgdGhlbiBcIi0+XCIgZWxzZSBcIiAgXCIpXG4gICAgICAgICAgICAgICAgKGlmIGlzX3NlbGVjdGVkIHRoZW4gXCIqXCIgZWxzZSBcIiBcIilcbiAgICAgICAgICAgICAgICBpdGVtKSlcbiAgICA7O1xuXG4gICAgbGV0IHNlYXJjaF9ib3hfdmlldyAoaW5wdXQgOiBJbnB1dC50KSB+aW5qZWN0IH5hdXRvZm9jdXMgfmlkID1cbiAgICAgIGxldCBvcGVuIFZkb20gaW5cbiAgICAgIGxldCBvbl9pbnB1dCA9IGZ1bmN0aW9uXG4gICAgICAgIHwgTm9uZSAtPiBpbmplY3QgKEFjdGlvbi5VcGRhdGVfc2VhcmNoX3N0cmluZyBcIlwiKVxuICAgICAgICB8IFNvbWUgdGV4dCAtPiBpbmplY3QgKEFjdGlvbi5VcGRhdGVfc2VhcmNoX3N0cmluZyB0ZXh0KVxuICAgICAgaW5cbiAgICAgIGxldCBleHRyYV9hdHRycyA9XG4gICAgICAgIEF0dHIuY29tYmluZVxuICAgICAgICAgIChBdHRyLmF1dG9mb2N1cyBhdXRvZm9jdXMpXG4gICAgICAgICAgKE9wdGlvbi52YWx1ZV9tYXAgaWQgfmY6QXR0ci5pZCB+ZGVmYXVsdDpBdHRyLmVtcHR5KVxuICAgICAgaW5cbiAgICAgIFZkb21faW5wdXRfd2lkZ2V0cy5FbnRyeS50ZXh0XG4gICAgICAgIH5tZXJnZV9iZWhhdmlvcjpMZWdhY3lfZG9udF9tZXJnZVxuICAgICAgICB+dmFsdWU6KFNvbWUgaW5wdXQuY3VycmVudF9zZWFyY2gpXG4gICAgICAgIH5vbl9pbnB1dFxuICAgICAgICB+ZXh0cmFfYXR0cnM6WyBleHRyYV9hdHRycyBdXG4gICAgICAgICgpXG4gICAgOztcblxuICAgIGxldCBzZWxlY3RfYWxsX2FuZF9ub25lX3ZpZXcgfmluamVjdCA9XG4gICAgICBsZXQgb3BlbiBWZG9tIGluXG4gICAgICBsZXQgbGluayB+dGV4dCB+KGFjdGlvbiA6IEFjdGlvbi50KSB+Y2xhc3NfID1cbiAgICAgICAgTm9kZS5hXG4gICAgICAgICAgfmF0dHJzOlxuICAgICAgICAgICAgWyBBdHRyLm1hbnlfd2l0aG91dF9tZXJnZVxuICAgICAgICAgICAgICAgIFsgQXR0ci5ocmVmIFwiYWJvdXQ6YmxhbmtcIlxuICAgICAgICAgICAgICAgIDsgQXR0ci5vbl9jbGljayAoZnVuIGV2IC0+XG4gICAgICAgICAgICAgICAgICAgIG1hdGNoIEJvbnNhaV93ZWIuYW1fd2l0aGluX2Rpc2FibGVkX2ZpZWxkc2V0IGV2IHdpdGhcbiAgICAgICAgICAgICAgICAgICAgfCB0cnVlIC0+IEVmZmVjdC5QcmV2ZW50X2RlZmF1bHRcbiAgICAgICAgICAgICAgICAgICAgfCBmYWxzZSAtPiBFZmZlY3QuTWFueSBbIGluamVjdCBhY3Rpb247IEVmZmVjdC5QcmV2ZW50X2RlZmF1bHQgXSlcbiAgICAgICAgICAgICAgICA7IEF0dHIuY2xhc3NfIGNsYXNzX1xuICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIF1cbiAgICAgICAgICBbIE5vZGUudGV4dCB0ZXh0IF1cbiAgICAgIGluXG4gICAgICBOb2RlLmRpdlxuICAgICAgICB+YXR0cnM6WyBBdHRyLmNsYXNzXyBcIm11bHRpLXNlbGVjdC1zZWxlY3QtYWxsLW5vbmVcIiBdXG4gICAgICAgIFsgTm9kZS50ZXh0IFwiU2VsZWN0OiBcIlxuICAgICAgICA7IGxpbmsgfnRleHQ6XCJhbGxcIiB+YWN0aW9uOlNlbGVjdF9hbGwgfmNsYXNzXzpcIm11bHRpLXNlbGVjdC1zZWxlY3QtYWxsXCJcbiAgICAgICAgOyBOb2RlLnRleHQgXCI7IFwiXG4gICAgICAgIDsgbGluayB+dGV4dDpcIm5vbmVcIiB+YWN0aW9uOlNlbGVjdF9ub25lIH5jbGFzc186XCJtdWx0aS1zZWxlY3Qtc2VsZWN0LW5vbmVcIlxuICAgICAgICBdXG4gICAgOztcblxuICAgIGxldCBjaGVja2JveGVzX3ZpZXdcbiAgICAgIChpbnB1dCA6IElucHV0LnQpXG4gICAgICAobW9kZWwgOiBNb2RlbC50KVxuICAgICAgfmV4dHJhX3Jvd19hdHRyc1xuICAgICAgfnNlbGVjdGVkX2l0ZW1zXG4gICAgICB+aW5qZWN0XG4gICAgICA9XG4gICAgICBsZXQgb3BlbiBWZG9tIGluXG4gICAgICBsZXQgZm9jdXNlZF9pdGVtID0gZm9jdXNlZF9pdGVtIGlucHV0IG1vZGVsIGluXG4gICAgICBsZXQgY2hlY2tib3hlcyA9XG4gICAgICAgIExpc3QubWFwIChTZXQudG9fbGlzdCBpbnB1dC5pdGVtc19tYXRjaGluZ19zZWFyY2gpIH5mOihmdW4gaXRlbSAtPlxuICAgICAgICAgIGxldCBjaGVja2JveCA9XG4gICAgICAgICAgICBsZXQgb25fY2hhbmdlID1cbiAgICAgICAgICAgICAgQXR0ci5vbl9jaGFuZ2UgKGZ1biBldiBfbmV3X3ZhbHVlIC0+XG4gICAgICAgICAgICAgICAgbGV0IHN0YXR1cyA9XG4gICAgICAgICAgICAgICAgICBtYXRjaCBKc19vZl9vY2FtbC5Kcy5PcHQudG9fb3B0aW9uIGV2IyMudGFyZ2V0IHdpdGhcbiAgICAgICAgICAgICAgICAgIHwgTm9uZSAtPlxuICAgICAgICAgICAgICAgICAgICBKc19vZl9vY2FtbC5GaXJlYnVnLmNvbnNvbGUjI2Vycm9yIFwiVGFyZ2V0IG1pc3NpbmdcIjtcbiAgICAgICAgICAgICAgICAgICAgYXNzZXJ0IGZhbHNlXG4gICAgICAgICAgICAgICAgICB8IFNvbWUgdCAtPlxuICAgICAgICAgICAgICAgICAgICBsZXQgdmFsdWUgPSAoSnNfb2Zfb2NhbWwuSnMuVW5zYWZlLmNvZXJjZSB0KSMjLmNoZWNrZWQgaW5cbiAgICAgICAgICAgICAgICAgICAgaWYgSnNfb2Zfb2NhbWwuSnMudG9fYm9vbCB2YWx1ZVxuICAgICAgICAgICAgICAgICAgICB0aGVuIFNlbGVjdGlvbl9zdGF0dXMuU2VsZWN0ZWRcbiAgICAgICAgICAgICAgICAgICAgZWxzZSBVbnNlbGVjdGVkXG4gICAgICAgICAgICAgICAgaW5cbiAgICAgICAgICAgICAgICBpbmplY3QgKEFjdGlvbi5TZXRfaXRlbV9zZWxlY3RlZCB7IGl0ZW07IHN0YXR1cyB9KSlcbiAgICAgICAgICAgIGluXG4gICAgICAgICAgICBsZXQgY2hlY2tlZF9hdHRycyA9IFsgQXR0ci5jaGVja2VkOyBBdHRyLmJvb2xfcHJvcGVydHkgXCJjaGVja2VkXCIgdHJ1ZSBdIGluXG4gICAgICAgICAgICBsZXQgdW5jaGVja2VkX2F0dHJzID0gWyBBdHRyLmJvb2xfcHJvcGVydHkgXCJjaGVja2VkXCIgZmFsc2UgXSBpblxuICAgICAgICAgICAgTm9kZS5pbnB1dFxuICAgICAgICAgICAgICB+YXR0cnM6XG4gICAgICAgICAgICAgICAgWyBBdHRyLm1hbnlfd2l0aG91dF9tZXJnZVxuICAgICAgICAgICAgICAgICAgICAoWyBvbl9jaGFuZ2U7IEF0dHIudHlwZV8gXCJjaGVja2JveFwiIF1cbiAgICAgICAgICAgICAgICAgICAgIEBcbiAgICAgICAgICAgICAgICAgICAgIGlmIFNldC5tZW0gc2VsZWN0ZWRfaXRlbXMgaXRlbVxuICAgICAgICAgICAgICAgICAgICAgdGhlbiBjaGVja2VkX2F0dHJzXG4gICAgICAgICAgICAgICAgICAgICBlbHNlIHVuY2hlY2tlZF9hdHRycylcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICgpXG4gICAgICAgICAgaW5cbiAgICAgICAgICBsZXQgaXNfZm9jdXNlZCA9IFslY29tcGFyZS5lcXVhbDogSXRlbS50IG9wdGlvbl0gKFNvbWUgaXRlbSkgZm9jdXNlZF9pdGVtIGluXG4gICAgICAgICAgbGV0IGV4dHJhX2F0dHJzID0gZXh0cmFfcm93X2F0dHJzIH5pc19mb2N1c2VkIGluXG4gICAgICAgICAgbGV0IGZvY3VzX2F0dHJzID1cbiAgICAgICAgICAgIGlmIGlzX2ZvY3VzZWRcbiAgICAgICAgICAgIHRoZW5cbiAgICAgICAgICAgICAgVmRvbS5BdHRyLihcbiAgICAgICAgICAgICAgICBtYW55IFsgZXh0cmFfYXR0cnM7IFZkb20uQXR0ci5jbGFzc18gXCJtdWx0aS1zZWxlY3QtaXRlbS1mb2N1c2VkXCIgXSlcbiAgICAgICAgICAgIGVsc2UgZXh0cmFfYXR0cnNcbiAgICAgICAgICBpblxuICAgICAgICAgIGxldCBvbl9jbGljayA9XG4gICAgICAgICAgICBBdHRyLm9uX2NsaWNrIChmdW4gZXYgLT5cbiAgICAgICAgICAgICAgbWF0Y2ggQm9uc2FpX3dlYi5hbV93aXRoaW5fZGlzYWJsZWRfZmllbGRzZXQgZXYgd2l0aFxuICAgICAgICAgICAgICB8IHRydWUgLT4gRWZmZWN0Lklnbm9yZVxuICAgICAgICAgICAgICB8IGZhbHNlIC0+XG4gICAgICAgICAgICAgICAgRWZmZWN0Lk1hbnlcbiAgICAgICAgICAgICAgICAgIFsgaW5qZWN0IChBY3Rpb24uU2V0X2ZvY3VzIChTb21lIGl0ZW0pKVxuICAgICAgICAgICAgICAgICAgOyBpbmplY3QgVG9nZ2xlX2ZvY3VzZWRfaXRlbV9zZWxlY3RlZFxuICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICBpblxuICAgICAgICAgIE5vZGUuZGl2XG4gICAgICAgICAgICB+YXR0cnM6WyBvbl9jbGljazsgVmRvbS5BdHRyLmNsYXNzXyBcIm11bHRpLXNlbGVjdC1pdGVtXCI7IGZvY3VzX2F0dHJzIF1cbiAgICAgICAgICAgIFsgY2hlY2tib3g7IE5vZGUubGFiZWwgWyBOb2RlLnRleHQgKEl0ZW0udG9fc3RyaW5nIGl0ZW0pIF0gXSlcbiAgICAgIGluXG4gICAgICBOb2RlLmRpdiB+YXR0cnM6WyBBdHRyLmNsYXNzXyBcIm11bHRpLXNlbGVjdC1jaGVja2JveGVzXCIgXSBjaGVja2JveGVzXG4gICAgOztcblxuICAgIGxldCB2aWV3IChpbnB1dCA6IElucHV0LnQpIG1vZGVsIH5zZWxlY3RlZF9pdGVtcyB+YWxsb3dfdXBkYXRlc193aGVuX2ZvY3VzZWQgfmluamVjdCA9XG4gICAgICBsZXQgb3BlbiBWZG9tIGluXG4gICAgICBsZXQgc2VsZWN0X2FsbF9hbmRfbm9uZV92aWV3ID0gc2VsZWN0X2FsbF9hbmRfbm9uZV92aWV3IH5pbmplY3QgaW5cbiAgICAgIGxldCBzZWFyY2hfYm94ID1cbiAgICAgICAgc2VhcmNoX2JveF92aWV3XG4gICAgICAgICAgaW5wdXRcbiAgICAgICAgICB+aW5qZWN0XG4gICAgICAgICAgfmF1dG9mb2N1czppbnB1dC52aWV3X2NvbmZpZy5hdXRvZm9jdXNfc2VhcmNoX2JveFxuICAgICAgICAgIH5pZDppbnB1dC52aWV3X2NvbmZpZy5zZWFyY2hfYm94X2lkXG4gICAgICAgICAgfmFsbG93X3VwZGF0ZXNfd2hlbl9mb2N1c2VkXG4gICAgICBpblxuICAgICAgbGV0IGV4dHJhX3Jvd19hdHRycyA9XG4gICAgICAgIE9wdGlvbi52YWx1ZSBpbnB1dC52aWV3X2NvbmZpZy5leHRyYV9yb3dfYXR0cnMgfmRlZmF1bHQ6KGZ1biB+aXNfZm9jdXNlZDpfIC0+XG4gICAgICAgICAgVmRvbS5BdHRyLmVtcHR5KVxuICAgICAgaW5cbiAgICAgIGxldCBjaGVja2JveGVzID1cbiAgICAgICAgY2hlY2tib3hlc192aWV3IGlucHV0IG1vZGVsIH5zZWxlY3RlZF9pdGVtcyB+aW5qZWN0IH5leHRyYV9yb3dfYXR0cnNcbiAgICAgIGluXG4gICAgICBOb2RlLmRpdlxuICAgICAgICB+YXR0cnM6WyBBdHRyLmNsYXNzXyBcIm11bHRpLXNlbGVjdC1jb250YWluZXJcIiBdXG4gICAgICAgIFsgTm9kZS5kaXZcbiAgICAgICAgICAgIH5hdHRyczpbIEF0dHIuY2xhc3NfIFwibXVsdGktc2VsZWN0LWhlYWRlclwiIF1cbiAgICAgICAgICAgIFsgaW5wdXQudmlld19jb25maWcuaGVhZGVyIF1cbiAgICAgICAgOyBzZWFyY2hfYm94XG4gICAgICAgIDsgc2VsZWN0X2FsbF9hbmRfbm9uZV92aWV3XG4gICAgICAgIDsgY2hlY2tib3hlc1xuICAgICAgICBdXG4gICAgOztcblxuICAgIGxldCBrZXlfaGFuZGxlciB+aW5qZWN0ID1cbiAgICAgIGxldCBvcGVuIFZkb21fa2V5Ym9hcmQgaW5cbiAgICAgIGxldCBjb21tYW5kID9jb25kIH5rZXlzIH5kZXNjcmlwdGlvbiBmID1cbiAgICAgICAgbGV0IGhhbmRsZXIgPVxuICAgICAgICAgIGxldCBvcGVuIEtleWJvYXJkX2V2ZW50X2hhbmRsZXIuSGFuZGxlciBpblxuICAgICAgICAgIG1hdGNoIGNvbmQgd2l0aFxuICAgICAgICAgIHwgTm9uZSAtPiB3aXRoX3ByZXZlbnRfZGVmYXVsdCBmXG4gICAgICAgICAgfCBTb21lIGNvbmQgLT4gb25seV9oYW5kbGVfaWYgY29uZCBmIH5wcmV2ZW50X2RlZmF1bHQ6KClcbiAgICAgICAgaW5cbiAgICAgICAgeyBLZXlib2FyZF9ldmVudF9oYW5kbGVyLkNvbW1hbmQua2V5czsgZGVzY3JpcHRpb247IGdyb3VwID0gTm9uZTsgaGFuZGxlciB9XG4gICAgICBpblxuICAgICAgbGV0IGtleSA9IEtleXN0cm9rZS5jcmVhdGUnIGluXG4gICAgICBLZXlib2FyZF9ldmVudF9oYW5kbGVyLm9mX2NvbW1hbmRfbGlzdF9leG5cbiAgICAgICAgWyBjb21tYW5kXG4gICAgICAgICAgICB+a2V5czpbIGtleSBBcnJvd1VwIF1cbiAgICAgICAgICAgIH5kZXNjcmlwdGlvbjpcIk1vdmUgZm9jdXMgb25lIGl0ZW0gdXBcIlxuICAgICAgICAgICAgKGZ1biBfZXYgLT4gaW5qZWN0IChBY3Rpb24uTW92ZV9mb2N1cyBgUHJldikpXG4gICAgICAgIDsgY29tbWFuZFxuICAgICAgICAgICAgfmtleXM6WyBrZXkgQXJyb3dEb3duIF1cbiAgICAgICAgICAgIH5kZXNjcmlwdGlvbjpcIk1vdmUgZm9jdXMgb25lIGl0ZW0gZG93blwiXG4gICAgICAgICAgICAoZnVuIF9ldiAtPiBpbmplY3QgKEFjdGlvbi5Nb3ZlX2ZvY3VzIGBOZXh0KSlcbiAgICAgICAgOyBjb21tYW5kXG4gICAgICAgICAgICB+a2V5czpbIGtleSBFbnRlciBdXG4gICAgICAgICAgICB+ZGVzY3JpcHRpb246XCJUb2dnbGUgd2hldGhlciBmb2N1c2VkIGl0ZW0gaXMgc2VsZWN0ZWRcIlxuICAgICAgICAgICAgKGZ1biBfZXYgLT4gaW5qZWN0IEFjdGlvbi5Ub2dnbGVfZm9jdXNlZF9pdGVtX3NlbGVjdGVkKVxuICAgICAgICBdXG4gICAgOztcblxuICAgIGxldCBjb21wdXRlIH5pbmplY3QgaW5wdXQgbW9kZWwgPVxuICAgICAgbGV0IHNlbGVjdGVkX2l0ZW1zID0gc2VsZWN0ZWRfaXRlbXMgaW5wdXQgbW9kZWwgaW5cbiAgICAgIGxldCBhbGxvd191cGRhdGVzX3doZW5fZm9jdXNlZCA9IGlucHV0LnZpZXdfY29uZmlnLmFsbG93X3VwZGF0ZXNfd2hlbl9mb2N1c2VkIGluXG4gICAgICB7IFJlc3VsdC52aWV3X2Zvcl90ZXN0aW5nID0gbGF6eSAodmlld19mb3JfdGVzdGluZyBpbnB1dCBtb2RlbClcbiAgICAgIDsgdmlldyA9IHZpZXcgaW5wdXQgbW9kZWwgfnNlbGVjdGVkX2l0ZW1zIH5hbGxvd191cGRhdGVzX3doZW5fZm9jdXNlZCB+aW5qZWN0XG4gICAgICA7IGtleV9oYW5kbGVyID0ga2V5X2hhbmRsZXIgfmluamVjdFxuICAgICAgOyBzZWxlY3RlZF9pdGVtc1xuICAgICAgOyBpbmplY3RcbiAgICAgIH1cbiAgICA7O1xuXG4gICAgbGV0IG5hbWUgPSBTb3VyY2VfY29kZV9wb3NpdGlvbi50b19zdHJpbmcgWyVoZXJlXVxuICBlbmRcblxuICBpbmNsdWRlIFRcblxuICBsZXQgYm9uc2FpJyA/ZXF1YWwgaW5wdXQgPVxuICAgIEJvbnNhaS5vZl9tb2R1bGUxID9lcXVhbCAobW9kdWxlIFQpIH5zZXhwX29mX21vZGVsOlslc2V4cF9vZjogVC5Nb2RlbC50XSBpbnB1dFxuICA7O1xuXG4gIG1vZHVsZSBfID0gc3RydWN0XG4gICAgdHlwZSBfdCA9XG4gICAgICB7IGFsbF9pdGVtcyA6IEl0ZW0uU2V0LnRcbiAgICAgIDsgZGVmYXVsdF9zZWxlY3Rpb25fc3RhdHVzIDogU2VsZWN0aW9uX3N0YXR1cy50XG4gICAgICA7IHZpZXdfY29uZmlnIDogVmlld19jb25maWcudFxuICAgICAgfVxuICBlbmRcblxuICBtb2R1bGUgSW5pdGlhbF9tb2RlbF9zZXR0aW5ncyA9IHN0cnVjdFxuICAgIHR5cGUgdCA9XG4gICAgICB7IHNlYXJjaF9zdHJpbmcgOiBzdHJpbmdcbiAgICAgIDsgc2VsZWN0aW9uX3N0YXR1cyA6IFNlbGVjdGlvbl9zdGF0dXMudCBJdGVtLk1hcC50IG9wdGlvblxuICAgICAgOyBmb2N1c2VkX2l0ZW0gOiBJdGVtLnQgb3B0aW9uXG4gICAgICB9XG5cbiAgICBsZXQgY3JlYXRlID8oc2VhcmNoX3N0cmluZyA9IFwiXCIpID9zZWxlY3Rpb25fc3RhdHVzID9mb2N1c2VkX2l0ZW0gKCkgPVxuICAgICAgeyBzZWFyY2hfc3RyaW5nOyBzZWxlY3Rpb25fc3RhdHVzOyBmb2N1c2VkX2l0ZW0gfVxuICAgIDs7XG4gIGVuZFxuXG4gIGxldCBib25zYWlcbiAgICA/KGluaXRpYWxfbW9kZWxfc2V0dGluZ3MgPSBJbml0aWFsX21vZGVsX3NldHRpbmdzLmNyZWF0ZSAoKSlcbiAgICA/KGRlZmF1bHRfc2VsZWN0aW9uX3N0YXR1cyA9IFZhbHVlLnJldHVybiBTZWxlY3Rpb25fc3RhdHVzLlVuc2VsZWN0ZWQpXG4gICAgfnZpZXdfY29uZmlnXG4gICAgYWxsX2l0ZW1zXG4gICAgPVxuICAgIGxldCBvcGVuIEJvbnNhaS5MZXRfc3ludGF4IGluXG4gICAgbGV0JXN1YiBzZWFyY2hfcmVzdWx0cyA9XG4gICAgICBTZWFyY2hlci5ib25zYWkgfmluaXRpYWw6aW5pdGlhbF9tb2RlbF9zZXR0aW5ncy5zZWFyY2hfc3RyaW5nIGFsbF9pdGVtc1xuICAgIGluXG4gICAgbGV0IGlucHV0X2Zvcl90ID1cbiAgICAgIGxldCVtYXAgYWxsX2l0ZW1zID0gYWxsX2l0ZW1zXG4gICAgICBhbmQgdmlld19jb25maWcgPSB2aWV3X2NvbmZpZ1xuICAgICAgYW5kIGRlZmF1bHRfc2VsZWN0aW9uX3N0YXR1cyA9IGRlZmF1bHRfc2VsZWN0aW9uX3N0YXR1c1xuICAgICAgYW5kIHsgU2VhcmNoZXIuUmVzdWx0Lml0ZW1zX21hdGNoaW5nX3NlYXJjaDsgdXBkYXRlX3NlYXJjaDsgY3VycmVudF9zZWFyY2ggfSA9XG4gICAgICAgIHNlYXJjaF9yZXN1bHRzXG4gICAgICBpblxuICAgICAgeyBULklucHV0Lml0ZW1zX21hdGNoaW5nX3NlYXJjaFxuICAgICAgOyB1cGRhdGVfc2VhcmNoXG4gICAgICA7IGRlZmF1bHRfc2VsZWN0aW9uX3N0YXR1c1xuICAgICAgOyBhbGxfaXRlbXNcbiAgICAgIDsgY3VycmVudF9zZWFyY2hcbiAgICAgIDsgdmlld19jb25maWdcbiAgICAgIH1cbiAgICBpblxuICAgIGJvbnNhaSdcbiAgICAgIH5lcXVhbDpbJWVxdWFsOiBULk1vZGVsLnRdXG4gICAgICB+ZGVmYXVsdF9tb2RlbDpcbiAgICAgICAgKFQuTW9kZWwuY3JlYXRlXG4gICAgICAgICAgID9zZWxlY3Rpb25fc3RhdHVzOmluaXRpYWxfbW9kZWxfc2V0dGluZ3Muc2VsZWN0aW9uX3N0YXR1c1xuICAgICAgICAgICA/Zm9jdXNlZF9pdGVtOmluaXRpYWxfbW9kZWxfc2V0dGluZ3MuZm9jdXNlZF9pdGVtXG4gICAgICAgICAgICgpKVxuICAgICAgaW5wdXRfZm9yX3RcbiAgOztcbmVuZFxuIiwib3BlbiEgQ29yZVxub3BlbiEgSW1wb3J0XG5vcGVuIE11bHRpX2ZhY3Rvcl9pbnRmXG5cbm1vZHVsZSB0eXBlIFMgPSBTXG5tb2R1bGUgdHlwZSBLZXkgPSBLZXlcblxubW9kdWxlIE1ha2UgKEl0ZW0gOiBTaW5nbGVfZmFjdG9yLkl0ZW0pIChLZXkgOiBLZXkpID0gc3RydWN0XG4gIG1vZHVsZSBTaW5nbGVfZmFjdG9yID0gU2luZ2xlX2ZhY3Rvci5NYWtlIChJdGVtKVxuXG4gIG1vZHVsZSBSaW5nX2ZvY3VzID0gc3RydWN0XG4gICAgbW9kdWxlIEFjdGlvbiA9IHN0cnVjdFxuICAgICAgdHlwZSB0ID1cbiAgICAgICAgfCBDeWNsZV9mb2N1c2VkX3N1YndpZGdldCBvZiBbIGBOZXh0IHwgYFByZXYgXVxuICAgICAgICB8IFNldF9mb2N1c2VkX3N1YndpZGdldCBvZiBLZXkudFxuICAgICAgW0BAZGVyaXZpbmcgc2V4cF9vZl1cbiAgICBlbmRcblxuICAgIG1vZHVsZSBNb2RlbCA9IHN0cnVjdFxuICAgICAgdHlwZSB0ID0gS2V5LnQgRm9jdXNfcmluZy50IFtAQGRlcml2aW5nIGNvbXBhcmUsIGVxdWFsLCBzZXhwXVxuICAgIGVuZFxuXG4gICAgbW9kdWxlIFJlc3VsdCA9IHN0cnVjdFxuICAgICAgdHlwZSB0ID0gS2V5LnQgKiAoQWN0aW9uLnQgLT4gdW5pdCBCb25zYWlfd2ViLkVmZmVjdC50KVxuICAgIGVuZFxuXG4gICAgbW9kdWxlIElucHV0ID0gVW5pdFxuXG4gICAgbGV0IGFwcGx5X2FjdGlvbiAoXyA6IF8gQm9uc2FpLkFwcGx5X2FjdGlvbl9jb250ZXh0LnQpICgpIG1vZGVsIGFjdGlvbiA9XG4gICAgICBtYXRjaCAoYWN0aW9uIDogQWN0aW9uLnQpIHdpdGhcbiAgICAgIHwgQ3ljbGVfZm9jdXNlZF9zdWJ3aWRnZXQgYE5leHQgLT4gRm9jdXNfcmluZy5uZXh0IG1vZGVsXG4gICAgICB8IEN5Y2xlX2ZvY3VzZWRfc3Vid2lkZ2V0IGBQcmV2IC0+IEZvY3VzX3JpbmcucHJldiBtb2RlbFxuICAgICAgfCBTZXRfZm9jdXNlZF9zdWJ3aWRnZXQga2V5IC0+XG4gICAgICAgIEZvY3VzX3Jpbmcuc2V0IG1vZGVsIH5mOihmdW4ga2V5JyAtPiBbJWNvbXBhcmUuZXF1YWw6IEtleS50XSBrZXkga2V5JylcbiAgICAgICAgfD4gT3B0aW9uLnZhbHVlIH5kZWZhdWx0Om1vZGVsXG4gICAgOztcblxuICAgIGxldCBjb21wdXRlIH5pbmplY3QgKCkgbW9kZWwgPSBGb2N1c19yaW5nLmN1cnJlbnRfZm9jdXMgbW9kZWwsIGluamVjdFxuICAgIGxldCBuYW1lID0gU291cmNlX2NvZGVfcG9zaXRpb24udG9fc3RyaW5nIFslaGVyZV1cbiAgZW5kXG5cbiAgbW9kdWxlIEFjdGlvbiA9IHN0cnVjdFxuICAgIHR5cGUgdCA9XG4gICAgICB8IEN5Y2xlX2ZvY3VzZWRfc3Vid2lkZ2V0IG9mIFsgYE5leHQgfCBgUHJldiBdXG4gICAgICB8IFNldF9mb2N1c2VkX3N1YndpZGdldCBvZiBLZXkudFxuICAgICAgfCBTdWJ3aWRnZXRfYWN0aW9uIG9mIEtleS50ICogU2luZ2xlX2ZhY3Rvci5BY3Rpb24udFxuICAgICAgfCBTZWxlY3Rfb25fYWxsX3N1YndpZGdldHMgb2YgWyBgQWxsIHwgYE5vbmUgXVxuICAgIFtAQGRlcml2aW5nIHNleHBfb2ZdXG4gIGVuZFxuXG4gIHR5cGUgcGVyX3N1YndpZGdldCA9XG4gICAgeyBkZWZhdWx0X3NlbGVjdGlvbl9zdGF0dXMgOiBTZWxlY3Rpb25fc3RhdHVzLnRcbiAgICA7IGFsbF9pdGVtcyA6IEl0ZW0uU2V0LnRcbiAgICB9XG4gIFtAQGRlcml2aW5nIGZpZWxkcyB+Z2V0dGVyc11cblxuICBtb2R1bGUgUmVzdWx0ID0gc3RydWN0XG4gICAgdHlwZSB0ID1cbiAgICAgIHsgdmlldyA6IFZkb20uTm9kZS50XG4gICAgICA7IHZpZXdfZm9yX3Rlc3RpbmcgOiBzdHJpbmcgTGF6eS50XG4gICAgICA7IGtleV9oYW5kbGVyIDogVmRvbV9rZXlib2FyZC5LZXlib2FyZF9ldmVudF9oYW5kbGVyLnRcbiAgICAgIDsgaW5qZWN0IDogQWN0aW9uLnQgLT4gdW5pdCBWZG9tLkVmZmVjdC50XG4gICAgICA7IHNlbGVjdGlvbiA6IEl0ZW0uU2V0LnQgS2V5Lk1hcC50XG4gICAgICB9XG4gICAgW0BAZGVyaXZpbmcgZmllbGRzIH5nZXR0ZXJzXVxuXG4gICAgbGV0IHZpZXdfd2l0aF9rZXlkb3duX2hhbmRsZXIgdCA9XG4gICAgICBsZXQgb3BlbiBWZG9tIGluXG4gICAgICBsZXQgb25fa2V5ZG93biA9XG4gICAgICAgIEF0dHIub25fa2V5ZG93biAoZnVuIGV2IC0+XG4gICAgICAgICAgVmRvbV9rZXlib2FyZC5LZXlib2FyZF9ldmVudF9oYW5kbGVyLmhhbmRsZV9vcl9pZ25vcmVfZXZlbnQgdC5rZXlfaGFuZGxlciBldilcbiAgICAgIGluXG4gICAgICBOb2RlLmRpdiB+YXR0cnM6WyBvbl9rZXlkb3duIF0gWyB0LnZpZXcgXVxuICAgIDs7XG4gIGVuZFxuXG4gIGxldCBzZWFyY2hfYm94X2lkIGtleSB+aWRfcHJlZml4ID0gc3ByaW50ZiAhXCIlcy1zZWFyY2gtYm94LSV7S2V5fVwiIGlkX3ByZWZpeCBrZXlcblxuICBsZXQgdmlldyB+aW5qZWN0IH5mb2N1cyB+c3Vid2lkZ2V0cyB+aWRfcHJlZml4ID1cbiAgICBsZXQgb3BlbiBWZG9tIGluXG4gICAgbGV0IGNyb3NzX3N1YndpZGdldF9hY3Rpb25zID1cbiAgICAgIGxldCBsaW5rIH50ZXh0IH4oYWN0aW9uIDogQWN0aW9uLnQpID1cbiAgICAgICAgTm9kZS5hXG4gICAgICAgICAgfmF0dHJzOlxuICAgICAgICAgICAgWyBBdHRyLm1hbnlfd2l0aG91dF9tZXJnZVxuICAgICAgICAgICAgICAgIFsgQXR0ci5ocmVmIFwiYWJvdXQ6YmxhbmtcIlxuICAgICAgICAgICAgICAgIDsgQXR0ci5vbl9jbGljayAoZnVuIF9ldiAtPlxuICAgICAgICAgICAgICAgICAgICBFZmZlY3QuTWFueSBbIGluamVjdCBhY3Rpb247IEVmZmVjdC5QcmV2ZW50X2RlZmF1bHQgXSlcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICBdXG4gICAgICAgICAgWyBOb2RlLnRleHQgdGV4dCBdXG4gICAgICBpblxuICAgICAgTm9kZS5kaXZcbiAgICAgICAgWyBOb2RlLnRleHQgKHNwcmludGYgXCJTZWxlY3Qgb24gYWxsICVzOiBcIiBLZXkubmFtZV9wbHVyYWwpXG4gICAgICAgIDsgbGluayB+dGV4dDpcImFsbFwiIH5hY3Rpb246KFNlbGVjdF9vbl9hbGxfc3Vid2lkZ2V0cyBgQWxsKVxuICAgICAgICA7IE5vZGUudGV4dCBcIjsgXCJcbiAgICAgICAgOyBsaW5rIH50ZXh0Olwibm9uZVwiIH5hY3Rpb246KFNlbGVjdF9vbl9hbGxfc3Vid2lkZ2V0cyBgTm9uZSlcbiAgICAgICAgXVxuICAgIGluXG4gICAgbGV0IHN1YndpZGdldHMgPVxuICAgICAgTWFwLm1hcGkgc3Vid2lkZ2V0cyB+ZjooZnVuIH5rZXkgfmRhdGE6cmVzdWx0IC0+XG4gICAgICAgIGxldCBpc19mb2N1c2VkID0gWyVjb21wYXJlLmVxdWFsOiBLZXkudF0gZm9jdXMga2V5IGluXG4gICAgICAgIE5vZGUuZGl2XG4gICAgICAgICAgfmF0dHJzOlxuICAgICAgICAgICAgWyBBdHRyLm1hbnlfd2l0aG91dF9tZXJnZVxuICAgICAgICAgICAgICAgIFsgQXR0ci5jbGFzc2VzXG4gICAgICAgICAgICAgICAgICAgIFsgXCJtdWx0aS1mYWN0b3Itc3Vid2lkZ2V0XCJcbiAgICAgICAgICAgICAgICAgICAgOyAoaWYgaXNfZm9jdXNlZFxuICAgICAgICAgICAgICAgICAgICAgICB0aGVuIFwibXVsdGktZmFjdG9yLWZvY3VzZWQtc3Vid2lkZ2V0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBcIm11bHRpLWZhY3Rvci11bmZvY3VzZWQtc3Vid2lkZ2V0XCIpXG4gICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICA7IEF0dHIub25fY2xpY2sgKGZ1biBfZXYgLT4gaW5qZWN0IChTZXRfZm9jdXNlZF9zdWJ3aWRnZXQga2V5KSlcbiAgICAgICAgICAgICAgICA7IEF0dHIuaWQgKHNwcmludGYgIVwiJXMtJXtLZXl9XCIgaWRfcHJlZml4IGtleSlcbiAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICBdXG4gICAgICAgICAgWyByZXN1bHQuU2luZ2xlX2ZhY3Rvci5SZXN1bHQudmlldyBdKVxuICAgIGluXG4gICAgVmRvbV9sYXlvdXQuYXNfdmJveFxuICAgICAgTm9kZS5kaXZcbiAgICAgIFsgY3Jvc3Nfc3Vid2lkZ2V0X2FjdGlvbnM7IFZkb21fbGF5b3V0LmFzX2hib3ggTm9kZS5kaXYgKE1hcC5kYXRhIHN1YndpZGdldHMpIF1cbiAgOztcblxuICBsZXQga2V5X2hhbmRsZXIgfmluamVjdCB+Zm9jdXMgfnN1YndpZGdldHMgPVxuICAgIGxldCBvcGVuIFZkb21fa2V5Ym9hcmQgaW5cbiAgICBsZXQgbXlfa2V5X2hhbmRsZXIgPVxuICAgICAgbGV0IGNvbW1hbmQgP2NvbmQgfmtleXMgfmRlc2NyaXB0aW9uIGYgPVxuICAgICAgICBsZXQgaGFuZGxlciA9XG4gICAgICAgICAgbGV0IG9wZW4gS2V5Ym9hcmRfZXZlbnRfaGFuZGxlci5IYW5kbGVyIGluXG4gICAgICAgICAgbWF0Y2ggY29uZCB3aXRoXG4gICAgICAgICAgfCBOb25lIC0+IHdpdGhfcHJldmVudF9kZWZhdWx0IGZcbiAgICAgICAgICB8IFNvbWUgY29uZCAtPiBvbmx5X2hhbmRsZV9pZiBjb25kIGYgfnByZXZlbnRfZGVmYXVsdDooKVxuICAgICAgICBpblxuICAgICAgICB7IEtleWJvYXJkX2V2ZW50X2hhbmRsZXIuQ29tbWFuZC5rZXlzOyBkZXNjcmlwdGlvbjsgZ3JvdXAgPSBOb25lOyBoYW5kbGVyIH1cbiAgICAgIGluXG4gICAgICBsZXQga2V5ID0gS2V5c3Ryb2tlLmNyZWF0ZScgaW5cbiAgICAgIEtleWJvYXJkX2V2ZW50X2hhbmRsZXIub2ZfY29tbWFuZF9saXN0X2V4blxuICAgICAgICBbIGNvbW1hbmRcbiAgICAgICAgICAgIH5rZXlzOlsga2V5IFRhYiBdXG4gICAgICAgICAgICB+ZGVzY3JpcHRpb246KHNwcmludGYgXCJGb2N1cyBuZXh0ICVzXCIgS2V5Lm5hbWVfc2luZ3VsYXIpXG4gICAgICAgICAgICAoZnVuIF9ldiAtPiBpbmplY3QgKEFjdGlvbi5DeWNsZV9mb2N1c2VkX3N1YndpZGdldCBgTmV4dCkpXG4gICAgICAgIDsgY29tbWFuZFxuICAgICAgICAgICAgfmtleXM6WyBrZXkgfnNoaWZ0OigpIFRhYiBdXG4gICAgICAgICAgICB+ZGVzY3JpcHRpb246KHNwcmludGYgXCJGb2N1cyBwcmV2ICVzXCIgS2V5Lm5hbWVfc2luZ3VsYXIpXG4gICAgICAgICAgICAoZnVuIF9ldiAtPiBpbmplY3QgKEN5Y2xlX2ZvY3VzZWRfc3Vid2lkZ2V0IGBQcmV2KSlcbiAgICAgICAgXVxuICAgIGluXG4gICAgbGV0IGZvY3VzZWRfc3Vid2lkZ2V0X2tleV9oYW5kbGVyID1cbiAgICAgIGxldCByZXN1bHQgPSBNYXAuZmluZF9leG4gc3Vid2lkZ2V0cyBmb2N1cyBpblxuICAgICAgcmVzdWx0LlNpbmdsZV9mYWN0b3IuUmVzdWx0LmtleV9oYW5kbGVyXG4gICAgaW5cbiAgICBLZXlib2FyZF9ldmVudF9oYW5kbGVyLm1lcmdlXG4gICAgICBmb2N1c2VkX3N1YndpZGdldF9rZXlfaGFuZGxlclxuICAgICAgbXlfa2V5X2hhbmRsZXJcbiAgICAgIH5vbl9kdXA6YE92ZXJyaWRlX3dpdGhfcmlnaHRcbiAgOztcblxuICBsZXQgaW5qZWN0IH5zdWJ3aWRnZXRzIH5pbmplY3RfcmluZ19mb2N1c19hY3Rpb24gPSBmdW5jdGlvblxuICAgIHwgQWN0aW9uLkN5Y2xlX2ZvY3VzZWRfc3Vid2lkZ2V0IGRpciAtPlxuICAgICAgaW5qZWN0X3JpbmdfZm9jdXNfYWN0aW9uIChSaW5nX2ZvY3VzLkFjdGlvbi5DeWNsZV9mb2N1c2VkX3N1YndpZGdldCBkaXIpXG4gICAgfCBTZXRfZm9jdXNlZF9zdWJ3aWRnZXQga2V5IC0+IGluamVjdF9yaW5nX2ZvY3VzX2FjdGlvbiAoU2V0X2ZvY3VzZWRfc3Vid2lkZ2V0IGtleSlcbiAgICB8IFN1YndpZGdldF9hY3Rpb24gKGtleSwgYSkgLT5cbiAgICAgIChtYXRjaCBNYXAuZmluZCBzdWJ3aWRnZXRzIGtleSB3aXRoXG4gICAgICAgfCBOb25lIC0+IEJvbnNhaS5FZmZlY3QuSWdub3JlXG4gICAgICAgfCBTb21lIHsgU2luZ2xlX2ZhY3Rvci5SZXN1bHQuaW5qZWN0OyBfIH0gLT4gaW5qZWN0IGEpXG4gICAgfCBTZWxlY3Rfb25fYWxsX3N1YndpZGdldHMgd2hhdCAtPlxuICAgICAgQm9uc2FpLkVmZmVjdC5NYW55XG4gICAgICAgIChMaXN0Lm1hcCAoTWFwLmRhdGEgc3Vid2lkZ2V0cykgfmY6KGZ1biBzdWJ3aWRnZXQgLT5cbiAgICAgICAgICAgc3Vid2lkZ2V0LmluamVjdFxuICAgICAgICAgICAgIChtYXRjaCB3aGF0IHdpdGhcbiAgICAgICAgICAgICAgfCBgQWxsIC0+IFNlbGVjdF9hbGxcbiAgICAgICAgICAgICAgfCBgTm9uZSAtPiBTZWxlY3Rfbm9uZSkpKVxuICA7O1xuXG4gIGxldCB2aWV3X2Zvcl90ZXN0aW5nIH5zdWJ3aWRnZXRzIH5mb2N1cyA9XG4gICAgbGF6eVxuICAgICAgKGxldCBjb2x1bW5zID1cbiAgICAgICAgIExpc3QubWFwIChNYXAua2V5cyBzdWJ3aWRnZXRzKSB+ZjooZnVuIGtleSAtPlxuICAgICAgICAgICBsZXQgbmFtZSA9XG4gICAgICAgICAgICAgc3ByaW50ZlxuICAgICAgICAgICAgICAgIVwiJXMgJXtLZXl9XCJcbiAgICAgICAgICAgICAgIChpZiBbJWNvbXBhcmUuZXF1YWw6IEtleS50XSBmb2N1cyBrZXkgdGhlbiBcIipcIiBlbHNlIFwiIFwiKVxuICAgICAgICAgICAgICAga2V5XG4gICAgICAgICAgIGluXG4gICAgICAgICAgIEFzY2lpX3RhYmxlX2tlcm5lbC5Db2x1bW4uY3JlYXRlIG5hbWUgKGZ1biAoKSAtPlxuICAgICAgICAgICAgIGxldCBzdWJ3aWRnZXQgPSBNYXAuZmluZF9leG4gc3Vid2lkZ2V0cyBrZXkgaW5cbiAgICAgICAgICAgICBMYXp5LmZvcmNlIHN1YndpZGdldC5TaW5nbGVfZmFjdG9yLlJlc3VsdC52aWV3X2Zvcl90ZXN0aW5nKSlcbiAgICAgICBpblxuICAgICAgIEFzY2lpX3RhYmxlX2tlcm5lbC5kcmF3XG4gICAgICAgICBjb2x1bW5zXG4gICAgICAgICBbICgpIF1cbiAgICAgICAgIH5saW1pdF93aWR0aF90bzoyMDAwXG4gICAgICAgICB+cHJlZmVyX3NwbGl0X29uX3NwYWNlczpmYWxzZVxuICAgICAgIHw+IE9wdGlvbi52YWx1ZV9leG5cbiAgICAgICB8PiBBc2NpaV90YWJsZV9rZXJuZWwuU2NyZWVuLnRvX3N0cmluZ1xuICAgICAgICAgICAgfmJhcnM6YFVuaWNvZGVcbiAgICAgICAgICAgIH5zdHJpbmdfd2l0aF9hdHRyOihmdW4gX2F0dHJzIHN0ciAtPiBzdHIpKVxuICA7O1xuXG4gIGxldCBmb2N1c19lbHQgaWQgPVxuICAgIGxldCBvcGVuIEpzX29mX29jYW1sIGluXG4gICAgKCogSW4gdGVzdHMsIHRoZXJlIGlzIG5vIFtkb2N1bWVudF0gb2JqZWN0LCBzbyB3ZSBjYW4ndCBmb2N1cyBlbGVtZW50cy4gKilcbiAgICBpZiBKcy5PcHRkZWYudGVzdCAoSnMuZGVmIERvbV9odG1sLmRvY3VtZW50KVxuICAgIHRoZW5cbiAgICAgIE9wdGlvbi5pdGVyXG4gICAgICAgIChEb21faHRtbC5nZXRFbGVtZW50QnlJZF9jb2VyY2UgaWQgRG9tX2h0bWwuQ29lcmNlVG8uaW5wdXQpXG4gICAgICAgIH5mOihmdW4gZWx0IC0+XG4gICAgICAgIGVsdCMjZm9jdXM7XG4gICAgICAgIGVsdCMjc2VsZWN0KVxuICA7O1xuXG4gIGxldCBmb2N1c19lbHQgPVxuICAgIGxldCBmID0gRWZmZWN0Lm9mX3N5bmNfZnVuIGZvY3VzX2VsdCBpblxuICAgIGZ1biB+aWQgLT4gZiBpZFxuICA7O1xuXG4gIGxldCBib25zYWlcbiAgICA/KGluaXRpYWxfbW9kZWxfc2V0dGluZ3MgPSBLZXkuTWFwLmVtcHR5KVxuICAgIH5hbGxfa2V5c1xuICAgIH5pZF9wcmVmaXhcbiAgICB+YWxsb3dfdXBkYXRlc193aGVuX2ZvY3VzZWRcbiAgICBzdWJ3aWRnZXRzXG4gICAgPVxuICAgIGxldCBvcGVuIEJvbnNhaS5MZXRfc3ludGF4IGluXG4gICAgbGV0IHNpbmdsZV9mYWN0b3Iga2V5IGlucHV0ID1cbiAgICAgIGxldCBkZWZhdWx0X3NlbGVjdGlvbl9zdGF0dXMgPSBpbnB1dCA+PnwgZGVmYXVsdF9zZWxlY3Rpb25fc3RhdHVzIGluXG4gICAgICBsZXQgaW5pdGlhbF9tb2RlbF9zZXR0aW5ncyA9XG4gICAgICAgIE1hcC5maW5kIGluaXRpYWxfbW9kZWxfc2V0dGluZ3Mga2V5XG4gICAgICAgIHw+IE9wdGlvbi52YWx1ZSB+ZGVmYXVsdDooU2luZ2xlX2ZhY3Rvci5Jbml0aWFsX21vZGVsX3NldHRpbmdzLmNyZWF0ZSAoKSlcbiAgICAgIGluXG4gICAgICBsZXQgdmlld19jb25maWcgPVxuICAgICAgICBsZXQlbWFwIGlkX3ByZWZpeCA9IGlkX3ByZWZpeCBpblxuICAgICAgICBTaW5nbGVfZmFjdG9yLlZpZXdfY29uZmlnLmNyZWF0ZVxuICAgICAgICAgIH5pZDooc2VhcmNoX2JveF9pZCBrZXkgfmlkX3ByZWZpeClcbiAgICAgICAgICB+aGVhZGVyOihWZG9tLk5vZGUudGV4dCAoS2V5LnRvX3N0cmluZyBrZXkpKVxuICAgICAgICAgIH5hbGxvd191cGRhdGVzX3doZW5fZm9jdXNlZFxuICAgICAgICAgICgpXG4gICAgICBpblxuICAgICAgU2luZ2xlX2ZhY3Rvci5ib25zYWlcbiAgICAgICAgfmluaXRpYWxfbW9kZWxfc2V0dGluZ3NcbiAgICAgICAgfmRlZmF1bHRfc2VsZWN0aW9uX3N0YXR1c1xuICAgICAgICB+dmlld19jb25maWdcbiAgICAgICAgKGlucHV0ID4+fCBhbGxfaXRlbXMpXG4gICAgaW5cbiAgICBsZXQlc3ViIHNpbmdsZV9mYWN0b3JzID1cbiAgICAgIGFsbF9rZXlzXG4gICAgICB8PiBTZXQudG9fbWFwIH5mOihmdW4ga2V5IC0+XG4gICAgICAgICAgIG1hdGNoJXN1YiBzdWJ3aWRnZXRzID4+fCBGbi5mbGlwIE1hcC5maW5kIGtleSB3aXRoXG4gICAgICAgICAgIHwgU29tZSBpbnB1dCAtPiBDb21wdXRhdGlvbi5tYXAgKHNpbmdsZV9mYWN0b3Iga2V5IGlucHV0KSB+ZjpPcHRpb24uc29tZVxuICAgICAgICAgICB8IE5vbmUgLT4gQm9uc2FpLmNvbnN0IE5vbmUpXG4gICAgICB8PiBDb21wdXRhdGlvbi5hbGxfbWFwXG4gICAgICB8PiBDb21wdXRhdGlvbi5tYXAgfmY6KE1hcC5maWx0ZXJfbWFwIH5mOkZuLmlkKVxuICAgIGluXG4gICAgbGV0JXN1YiBmb2N1cywgaW5qZWN0X2ZvY3VzX2FjdGlvbiA9XG4gICAgICBCb25zYWkub2ZfbW9kdWxlMFxuICAgICAgICAobW9kdWxlIFJpbmdfZm9jdXMpXG4gICAgICAgIH5zZXhwX29mX21vZGVsOlslc2V4cF9vZjogUmluZ19mb2N1cy5Nb2RlbC50XVxuICAgICAgICB+ZXF1YWw6WyVlcXVhbDogUmluZ19mb2N1cy5Nb2RlbC50XVxuICAgICAgICB+ZGVmYXVsdF9tb2RlbDooRm9jdXNfcmluZy5vZl9ub25lbXB0eV9saXN0X2V4biAoU2V0LnRvX2xpc3QgYWxsX2tleXMpKVxuICAgIGluXG4gICAgbGV0JXN1YiAoKSA9XG4gICAgICBsZXQgY2FsbGJhY2sgPVxuICAgICAgICBsZXQlbWFwIGlkX3ByZWZpeCA9IGlkX3ByZWZpeCBpblxuICAgICAgICBmdW4gcHJldiBuZXdfZm9jdXMgLT5cbiAgICAgICAgICBtYXRjaCBwcmV2IHdpdGhcbiAgICAgICAgICB8IFNvbWUgcHJldl9mb2N1cyB3aGVuIEtleS5lcXVhbCBwcmV2X2ZvY3VzIG5ld19mb2N1cyAtPiBFZmZlY3QuSWdub3JlXG4gICAgICAgICAgfCBOb25lIHwgU29tZSBfIC0+IGZvY3VzX2VsdCB+aWQ6KHNlYXJjaF9ib3hfaWQgbmV3X2ZvY3VzIH5pZF9wcmVmaXgpXG4gICAgICBpblxuICAgICAgQm9uc2FpLkVkZ2Uub25fY2hhbmdlJ1xuICAgICAgICB+c2V4cF9vZl9tb2RlbDpbJXNleHBfb2Y6IEtleS50XVxuICAgICAgICB+ZXF1YWw6WyVlcXVhbDogS2V5LnRdXG4gICAgICAgIGZvY3VzXG4gICAgICAgIH5jYWxsYmFja1xuICAgIGluXG4gICAgbGV0JWFyciBzdWJ3aWRnZXRzID0gc2luZ2xlX2ZhY3RvcnNcbiAgICBhbmQgZm9jdXMgPSBmb2N1c1xuICAgIGFuZCBpbmplY3RfcmluZ19mb2N1c19hY3Rpb24gPSBpbmplY3RfZm9jdXNfYWN0aW9uXG4gICAgYW5kIGlkX3ByZWZpeCA9IGlkX3ByZWZpeCBpblxuICAgIGxldCBpbmplY3QgPSBpbmplY3QgfnN1YndpZGdldHMgfmluamVjdF9yaW5nX2ZvY3VzX2FjdGlvbiBpblxuICAgIGxldCBzZWxlY3Rpb24gPVxuICAgICAgTWFwLm1hcCBzdWJ3aWRnZXRzIH5mOihmdW4gcmVzdWx0IC0+IHJlc3VsdC5TaW5nbGVfZmFjdG9yLlJlc3VsdC5zZWxlY3RlZF9pdGVtcylcbiAgICBpblxuICAgIGxldCB2aWV3ID0gdmlldyB+aW5qZWN0IH5zdWJ3aWRnZXRzIH5mb2N1cyB+aWRfcHJlZml4IGluXG4gICAgbGV0IHZpZXdfZm9yX3Rlc3RpbmcgPSB2aWV3X2Zvcl90ZXN0aW5nIH5zdWJ3aWRnZXRzIH5mb2N1cyBpblxuICAgIGxldCBrZXlfaGFuZGxlciA9IGtleV9oYW5kbGVyIH5pbmplY3QgfnN1YndpZGdldHMgfmZvY3VzIGluXG4gICAgeyBSZXN1bHQuc2VsZWN0aW9uOyB2aWV3OyB2aWV3X2Zvcl90ZXN0aW5nOyBrZXlfaGFuZGxlcjsgaW5qZWN0IH1cbiAgOztcbmVuZFxuIl19
